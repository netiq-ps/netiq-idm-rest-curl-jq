{
  "swagger": "2.0",
  "info" : {
    "description" : "<p>Welcome to the NetIQ Identity Applications REST API Documentation page.  This is an interactive API reference for the NetIQ Identity Applications REST API.<\/p>\n      <h3>Introduction<\/h3>\n      <p>Identity Manager provides an Application Programming Interface (API) for programmatic access to identity applications resources. The Identity Applications API documentation is bundled with the product and also available at the Identity Manager Developer website. You are encouraged to use the APIs and will receive support when doing so. Be aware that APIs may change without notice as a result of product updates; however, these updates will be available at the Identity Manager Developer website with a changelog to help you determine the changes made to the APIs. \n       <\/p>\n       <p>This guide describes the RESTful APIs supported by the NetIQ Identity Manager's identity applications components. It includes step by step instructions for using these APIs.\n       <\/p>\n       <h3>API Overview<\/h3>\n       <p>The APIs supported by the Identity Applications can be broadly categorized as:<\/p>\n       <h4>1) Access APIs <\/h4>\n       <p>APIs related to User catalog, Admin configuration, User navigation rights and Permission search & assignment details. It can be accessed by business users and administrators based on the given privileges.<\/p>\n      <h4>2) Catalog APIs <\/h4>\n      <p>APIs related to managing roles and resources, SOD and driver services. It can be accessed by domain and delegated administrators.<\/p>\n      <h4>3) Admin APIs <\/h4>\n      <p>APIs related to admin configurations like caching, logging, provisioning display, admin assignments and so on. It can be accessed by domain and delegated administrators by default. Access can be controlled under client settings.<\/p>\n      <p>Below you will see the main sections of the API. Click each section in order to see the endpoints that are available in that category.<\/p>\n      <h4>Accessing the APIs<\/h4>\n      <p>Access to the majority of the identity applications functionality is accessible via Application Programming Interface (API). The API is HTTP based, with a RESTful programming interface. You can invoke the API by using a browser or by using curl command in scripts to help automate the administrative tasks.<\/p>\n      <h5>Base URL<\/h5>\n      <p>https://[Identity Applications Server DNS or IP Address]:[Port]. The https port will be 8543 by default.<\/p>\n      <h5>Authentication<\/h5>\n      <p>The NetIQ Identity Manager REST API uses the OAuth2 protocol for authentication. To make a REST call, you must obtain an access token, and include that token in the Authentication header. To obtain an access token, do the following:<\/p>\n      <img src=\"images/restservice_idm_apps.png\" \">\n      <ol>\n      <li>Determine where your authorization server is listening for logins. Usually it is the server base url + /osp/a/idm/auth/oauth2/token.<\/li>\n      <li>Obtain OSP client userid and password. Out of the box, client id is rbpmrest and password as set by your system administrator during install.<\/li>\n      <li>Obtain a userid and password of a user who has the required privilege for the API you wish to call.<\/li>\n      <li>Create a REST POST request with the following characteristics:\n      <ul>\n             <li>content-type header: application/x-www-form-urlencoded<\/li>\n             <li>authorization header: Basic Auth format using client userid/password from step 2 above<\/li>\n             <li>body: \\\"grant_type=password&username=USERID&password=PASSWORD\\\", where USERID and PASSWORD are from step 3 above<\/li>\n      <\/ul>\n      <\/li>\n      <li>The JSON response comes back like this:<code>{\\n   \\\"access_token\\\": \\\"eHwAIIo/s5YRJUlk7vudjO3DQSHcwsubZOe...\\\",\\n   \\\"token_type\\\": \\\"bearer\\\",\\n   \\\"expires_in\\\": 2592001,\\n   \\\"refresh_token\\\": \\\"eHwAIMImaydGbAamBgNA1CEGcFjCXNcaqM4OA...\\\"\\n}\\n<\/code><\/li>\n      <li>When making a REST call to one of the APIs, for the Authorization header add the token_type, a space, then the access_token like so:<code>Authorization Header: Bearer eHwAIIo/s5YRJUlk7vudjO3DQSHcwsubZOe...\\n<\/code>\n      <\/ol>\n            <h3>Sample Rest API call:<\/h3>\n    <p>Consider a POST request for creating a new Navigation item in Applications page.<\/p>\n    <h5>1) Setting Authorization header<\/h5>\n    <p>Access token generated by following the above mentioned steps is used in the API call as follows :<\/p>\n    <p>Authorization header : Bearer [space] [Access Token]<\/p>\n    <h5>2) Request method: POST<\/h5>\n    <h5>3) Request URL: [host url]/rest/access/ulp/items<\/h5>\n    <h5>4) Content-type: application/json<\/h5>\n    <h5>5) Payload<\/h5>\n    <code>{  \n      \"items\":[  \n      {  \n         \"name\":\"Microfocus\",\n         \"desc\":\"Microfocus Link\",\n         \"appUrl\":\"http://www.microfocus.com\",\n         \"idmdashAppUrl\":\"http://www.microfocus.com\",\n         \"itemOrder\":11,\n         \"image\":\"\",\n         \"idmdashImage\":\"\",\n         \"itemCategoryId\":1\n      }\n     ]\n     }<\/code>\n     <h4>Response<\/h4>\n     <code>{\n           \"success\": true,\n           \"succeeded\": [\n               {\n                  \"id\": \"cn=Microfocus1049d151d5a4345de94be756d2aacd23c,cn=NavItems,cn=UIConfig,cn=AppConfig,cn=User Application Driver,cn=driverset1,o=system\",\n                  \"instanceId\": \"129\",\n                  \"name\": \"Microfocus\"\n               }\n             ]\n           }<\/code>\n      <br><br>\n      <h4>HTTP methods<\/h4>\n      <p>The HTTP method sent (GET, PUT, DELETE, or POST) is important to deliver the semantics of the request.<\/p>\n      <p>The following Wikipedia link describes the semantics based on the method/URL type combination. Note that not all APIs support all URL methods.<\/p>\n      <a href=\"https://en.wikipedia.org/wiki/Representational_state_transfer#Relationship_between_URL_and_HTTP_methods\">https://en.wikipedia.org/wiki/Representational_state_transfer#Relationship_between_URL_and_HTTP_methods<\/a>\n      <br>\n      <h4>SOAP and REST API Documentation<\/h4><p>You can refer to: <a href=\"https://www.netiq.com/documentation/identity-manager-developer/rest-api-documentation.html\">https://www.netiq.com/documentation/identity-manager-developer/rest-api-documentation.html<\/a><a href=\"\"><\/a><\/p>\n      <br>\n      <hr/>",
    "version" : "4.8.6",
    "title" : "REST API Documentation"
  },
  "basePath" : "/IDMProv/rest/access",
  "schemes" : [],
  "tags" : [
    {
      "name" : "Access"
    }
    ,
    {
      "name" : "Admin"
    }
    ,
    {
      "name" : "Catalog"
    }
  ],
  "definitions" : {
    "json_ActionImpl" : {
      "type" : "object",
      "title" : "ActionImpl",
          "properties" : {
            "actionValue" : {
"description" : "",
"type" : "number"
            },
            "digitalSignatureRequired" : {
"description" : "",
"type" : "boolean"
            },
            "digitalSignatureType" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "actionValue" : 12345,
  "digitalSignatureRequired" : true,
  "digitalSignatureType" : "..."
},
      "description" : "This is response node for /workentries api"
    }
    ,
    "json_AdminAssignmentListNode" : {
      "type" : "object",
      "title" : "AdminAssignmentListNode",
          "properties" : {
            "adminAssignments" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AdminAssignmentNode"
}
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            },
            "total" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "adminAssignments" : [ {
    "assignee" : "...",
    "assigneeDn" : "...",
    "assignmentType" : "...",
    "assignmentTypeKey" : "...",
    "adminType" : "...",
    "adminTypeKey" : "...",
    "comment" : "...",
    "domain" : "...",
    "domainType" : "...",
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "status" : "..."
  }, {
    "assignee" : "...",
    "assigneeDn" : "...",
    "assignmentType" : "...",
    "assignmentTypeKey" : "...",
    "adminType" : "...",
    "adminTypeKey" : "...",
    "comment" : "...",
    "domain" : "...",
    "domainType" : "...",
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "status" : "..."
  } ],
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
},
      "description" : "Admin assignment list node"
    }
    ,
    "json_AdminAssignmentNode" : {
      "type" : "object",
      "title" : "AdminAssignmentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "assignee" : {
"description" : "",
"type" : "string"
            },
            "assigneeDn" : {
"description" : "",
"type" : "string"
            },
            "assignmentType" : {
"description" : "",
"type" : "string"
            },
            "assignmentTypeKey" : {
"description" : "",
"type" : "string"
            },
            "adminType" : {
"description" : "",
"type" : "string"
            },
            "adminTypeKey" : {
"description" : "",
"type" : "string"
            },
            "comment" : {
"description" : "",
"type" : "string"
            },
            "domain" : {
"description" : "",
"type" : "string"
            },
            "domainType" : {
"description" : "",
"type" : "string"
            },
            "effectiveDate" : {
"description" : "",
"type" : "number"
            },
            "expirationDate" : {
"description" : "",
"type" : "number"
            },
            "status" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "assignee" : "...",
  "assigneeDn" : "...",
  "assignmentType" : "...",
  "assignmentTypeKey" : "...",
  "adminType" : "...",
  "adminTypeKey" : "...",
  "comment" : "...",
  "domain" : "...",
  "domainType" : "...",
  "effectiveDate" : 12345,
  "expirationDate" : 12345,
  "status" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_AdminSettingsNode" : {
      "type" : "object",
      "title" : "AdminSettingsNode",
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            },
            "values" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "key" : "...",
  "value" : "...",
  "values" : [ "...", "..." ]
},
      "description" : "JAXB representation of admin settings request. It is used to read and write settings into JSON file"
    }
    ,
    "json_AfCommentNode" : {
      "type" : "object",
      "title" : "AfCommentNode",
          "properties" : {
            "user" : {
"description" : "",
"type" : "string"
            },
            "comment" : {
"description" : "",
"type" : "string"
            },
            "msgId" : {
"description" : "",
"type" : "string"
            },
            "date" : {
"description" : "",
"type" : "number"
            },
            "activity" : {
"description" : "",
"type" : "string"
            },
            "system" : {
"description" : "",
"type" : "boolean"
            },
            "commentDn" : {
"description" : "",
"type" : "string"
            },
            "commentFullName" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "user" : "...",
  "comment" : "...",
  "msgId" : "...",
  "date" : 12345,
  "activity" : "...",
  "system" : true,
  "commentDn" : "...",
  "commentFullName" : "..."
},
      "description" : "JAXB representation of workflow/approval flow comment"
    }
    ,
    "json_AfDataItemNode" : {
      "type" : "object",
      "title" : "AfDataItemNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "dataType" : {
"description" : "",
"type" : "string"
            },
            "valueType" : {
"description" : "",
"type" : "number"
            },
            "readOnly" : {
"description" : "",
"type" : "boolean"
            },
            "multiValued" : {
"description" : "",
"type" : "boolean"
            },
            "values" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "name" : "...",
  "dataType" : "...",
  "valueType" : 12345,
  "readOnly" : true,
  "multiValued" : true,
  "values" : [ "...", "..." ]
},
      "description" : "JAXB representation info service attributes"
    }
    ,
    "json_AfDataItemNode_nodes" : {
      "type" : "object",
      "title" : "AfDataItemNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "dataType" : {
"description" : "",
"type" : "string"
            },
            "valueType" : {
"description" : "",
"type" : "number"
            },
            "readOnly" : {
"description" : "",
"type" : "boolean"
            },
            "multiValued" : {
"description" : "",
"type" : "boolean"
            },
            "values" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "target" : {
"description" : "",
"type" : "string"
            },
            "source" : {
"description" : "",
"type" : "string"
            },
            "valueSet" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "name" : "...",
  "dataType" : "...",
  "valueType" : 12345,
  "readOnly" : true,
  "multiValued" : true,
  "values" : [ { }, { } ],
  "target" : "...",
  "source" : "...",
  "valueSet" : true
},
      "description" : "JAXB representation info service attributes"
    }
    ,
    "json_AfTaskActionNode" : {
      "type" : "object",
      "title" : "AfTaskActionNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "tasks" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfTaskNode"
}
            },
            "approver" : {
"description" : "",
"type" : "string"
            },
            "action" : {
"description" : "",
"type" : "string"
            },
            "comment" : {
"description" : "",
"type" : "string"
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            },
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "succeeded" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfTaskNode"
}
            },
            "failed" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfTaskNode"
}
            },
            "dataItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfDataItemNode_nodes"
}
            }
          }
        }
      ],
      "example" : {
  "tasks" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "approver" : "...",
  "action" : "...",
  "comment" : "...",
  "proxyUser" : "...",
  "success" : true,
  "succeeded" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "failed" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ]
},
      "description" : "JAXB representation WF task operation/action like approve/deny/re-assign"
    }
    ,
    "json_AfTaskListNode" : {
      "type" : "object",
      "title" : "AfTaskListNode",
          "properties" : {
            "total" : {
"description" : "",
"type" : "number"
            },
            "hasMore" : {
"description" : "",
"type" : "boolean"
            },
            "tasks" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfTaskNode"
}
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "userTypeInTask" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "total" : 12345,
  "hasMore" : true,
  "tasks" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "totalSize" : 12345,
  "nextIndex" : 12345,
  "userTypeInTask" : true
},
      "description" : "List of Task Node(s)."
    }
    ,
    "json_AfTaskNode" : {
      "type" : "object",
      "title" : "AfTaskNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "taskId" : {
"description" : "",
"type" : "string"
            },
            "link" : {
"description" : "",
"type" : "string"
            },
            "processName" : {
"description" : "",
"type" : "string"
            },
            "processId" : {
"description" : "",
"type" : "string"
            },
            "activityName" : {
"description" : "",
"type" : "string"
            },
            "createTime" : {
"description" : "",
"type" : "number"
            },
            "expirationTime" : {
"description" : "",
"type" : "number"
            },
            "recipient" : {
"description" : "",
"type" : "string"
            },
            "recipientType" : {
"description" : "",
"type" : "string"
            },
            "recipientName" : {
"description" : "",
"type" : "string"
            },
            "initiator" : {
"description" : "",
"type" : "string"
            },
            "initiatorName" : {
"description" : "",
"type" : "string"
            },
            "comments" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfCommentNode"
}
            },
            "bulkApprovable" : {
"description" : "",
"type" : "boolean"
            },
            "approvalForm" : {
"description" : "",
"type" : "string"
            },
            "approvalFormId" : {
"description" : "",
"type" : "string"
            },
            "dataItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfDataItemNode_nodes"
}
            },
            "taskClaimed" : {
"description" : "",
"type" : "boolean"
            },
            "addresseetype" : {
"description" : "",
"type" : "string"
            },
            "claimedby" : {
"description" : "",
"type" : "string"
            },
            "addresseeEntityType" : {
"description" : "",
"type" : "string"
            },
            "addressee" : {
"description" : "",
"type" : "string"
            },
            "assignedTo" : {
"description" : "",
"type" : "string"
            },
            "priority" : {
"description" : "",
"type" : "string"
            },
            "delegatedTask" : {
"description" : "",
"type" : "boolean"
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            },
            "assignStatus" : {
"description" : "",
"type" : "string"
            },
            "returnAddressee" : {
"description" : "",
"type" : "string"
            },
            "confirmationNumber" : {
"description" : "",
"type" : "string"
            },
            "isNewForm" : {
"description" : "",
"type" : "boolean"
            },
            "currentAddressee" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "taskId" : "...",
  "link" : "...",
  "processName" : "...",
  "processId" : "...",
  "activityName" : "...",
  "createTime" : 12345,
  "expirationTime" : 12345,
  "recipient" : "...",
  "recipientType" : "...",
  "recipientName" : "...",
  "initiator" : "...",
  "initiatorName" : "...",
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "bulkApprovable" : true,
  "approvalForm" : "...",
  "approvalFormId" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "taskClaimed" : true,
  "addresseetype" : "...",
  "claimedby" : "...",
  "addresseeEntityType" : "...",
  "addressee" : "...",
  "assignedTo" : "...",
  "priority" : "...",
  "delegatedTask" : true,
  "proxyUser" : "...",
  "assignStatus" : "...",
  "returnAddressee" : "...",
  "confirmationNumber" : "...",
  "isNewForm" : true,
  "currentAddressee" : "..."
},
      "description" : "JAXB representation info WF task"
    }
    ,
    "json_ApproverNode" : {
      "type" : "object",
      "title" : "ApproverNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "sequence" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "...",
  "type" : "...",
  "sequence" : 12345
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_AssignmentStatusNode" : {
      "type" : "object",
      "title" : "AssignmentStatusNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "requestDn" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "dns" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "names" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "recipientType" : {
"description" : "",
"type" : "string"
            },
            "recipientTypeSubContainer" : {
"description" : "",
"type" : "boolean"
            },
            "recipientDn" : {
"description" : "",
"type" : "string"
            },
            "recipientDns" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "recipientFullName" : {
"description" : "",
"type" : "string"
            },
            "statusCode" : {
"description" : "",
"type" : "string"
            },
            "statusDisplay" : {
"description" : "",
"type" : "string"
            },
            "requestDate" : {
"description" : "",
"type" : "string"
            },
            "effectiveDate" : {
"description" : "",
"type" : "string"
            },
            "expiryDate" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "approvalProcessId" : {
"description" : "",
"type" : "string"
            },
            "correlationID" : {
"description" : "",
"type" : "string"
            },
            "grant" : {
"description" : "",
"type" : "boolean"
            },
            "requesterDisplayName" : {
"description" : "",
"type" : "string"
            },
            "requesterDn" : {
"description" : "",
"type" : "string"
            },
            "source" : {
"description" : "",
"type" : "string"
            },
            "dynamicParams" : {
"description" : "",
"$ref" : "#/definitions/json_DynamicParamListNode"
            },
            "instanceGuId" : {
"description" : "",
"type" : "string"
            },
            "recipientList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RecipientNode"
}
            }
          }
        }
      ],
      "example" : {
  "requestDn" : "...",
  "dn" : "...",
  "name" : "...",
  "dns" : [ "...", "..." ],
  "names" : [ "...", "..." ],
  "recipientType" : "...",
  "recipientTypeSubContainer" : true,
  "recipientDn" : "...",
  "recipientDns" : [ "...", "..." ],
  "recipientFullName" : "...",
  "statusCode" : "...",
  "statusDisplay" : "...",
  "requestDate" : "...",
  "effectiveDate" : "...",
  "expiryDate" : "...",
  "description" : "...",
  "approvalProcessId" : "...",
  "correlationID" : "...",
  "grant" : true,
  "requesterDisplayName" : "...",
  "requesterDn" : "...",
  "source" : "...",
  "dynamicParams" : {
    "dynamicParamList" : [ {
      "paramName" : "...",
      "paramLabel" : "...",
      "paramValues" : [ "...", "..." ]
    }, {
      "paramName" : "...",
      "paramLabel" : "...",
      "paramValues" : [ "...", "..." ]
    } ]
  },
  "instanceGuId" : "...",
  "recipientList" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ]
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_AttrNode" : {
      "type" : "object",
      "title" : "AttrNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            },
            "dataType" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "displayLabel" : "...",
  "value" : "...",
  "dataType" : "..."
},
      "description" : "Holds the representation of the Attribute"
    }
    ,
    "json_AttributeLocaleInfo" : {
      "type" : "object",
      "title" : "AttributeLocaleInfo",
          "properties" : {
            "locale" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "locale" : "...",
  "value" : "..."
},
      "description" : ""
    }
    ,
    "json_AttributeModifiedValueNode" : {
      "type" : "object",
      "title" : "AttributeModifiedValueNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "key" : {
"description" : "",
"type" : "string"
            },
            "dataType" : {
"description" : "",
"type" : "string"
            },
            "isMultivalued" : {
"description" : "",
"type" : "boolean"
            },
            "isEditable" : {
"description" : "",
"type" : "boolean"
            },
            "values" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "key" : "...",
  "dataType" : "...",
  "isMultivalued" : true,
  "isEditable" : true,
  "values" : [ "...", "..." ]
},
      "description" : "Holds the representation of the other attribute changed values"
    }
    ,
    "json_AttributeNode" : {
      "type" : "object",
      "title" : "AttributeNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "attributeValues" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "dataType" : {
"description" : "",
"type" : "string"
            },
            "isSearchable" : {
"description" : "",
"type" : "boolean"
            },
            "isSortable" : {
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
"description" : "",
"type" : "boolean"
            },
            "isEditable" : {
"description" : "",
"type" : "boolean"
            },
            "isMultivalued" : {
"description" : "",
"type" : "boolean"
            },
            "isHideable" : {
"description" : "",
"type" : "boolean"
            },
            "isClickable" : {
"description" : "",
"type" : "boolean"
            },
            "formatType" : {
"description" : "",
"type" : "string"
            },
            "choiceList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode"
}
            },
            "controlType" : {
"description" : "",
"type" : "string"
            },
            "lookupEntity" : {
"description" : "",
"type" : "string"
            },
            "lookupAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LookUpAttributeValueNode"
}
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "displayLabel" : "...",
  "attributeValues" : [ { }, { } ],
  "dataType" : "...",
  "isSearchable" : true,
  "isSortable" : true,
  "isRequired" : true,
  "isEditable" : true,
  "isMultivalued" : true,
  "isHideable" : true,
  "isClickable" : true,
  "formatType" : "...",
  "choiceList" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "controlType" : "...",
  "lookupEntity" : "...",
  "lookupAttributes" : [ {
    "lookupAttrKey" : "...",
    "lookupAttrValue" : [ "...", "..." ],
    "key" : "...",
    "displayLabel" : "..."
  }, {
    "lookupAttrKey" : "...",
    "lookupAttrValue" : [ "...", "..." ],
    "key" : "...",
    "displayLabel" : "..."
  } ]
},
      "description" : "AttributeNode which provide list of values for the virtualEntityAttribute"
    }
    ,
    "json_AttributeNode_nodes" : {
      "type" : "object",
      "title" : "AttributeNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "attributeValues" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "dataType" : {
"description" : "",
"type" : "string"
            },
            "isSearchable" : {
"description" : "",
"type" : "boolean"
            },
            "isSortable" : {
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
"description" : "",
"type" : "boolean"
            },
            "isEditable" : {
"description" : "",
"type" : "boolean"
            },
            "isMultivalued" : {
"description" : "",
"type" : "boolean"
            },
            "isHideable" : {
"description" : "",
"type" : "boolean"
            },
            "isClickable" : {
"description" : "",
"type" : "boolean"
            },
            "formatType" : {
"description" : "",
"type" : "string"
            },
            "choiceList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode_nodes"
}
            },
            "controlType" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "displayLabel" : "...",
  "attributeValues" : [ { }, { } ],
  "dataType" : "...",
  "isSearchable" : true,
  "isSortable" : true,
  "isRequired" : true,
  "isEditable" : true,
  "isMultivalued" : true,
  "isHideable" : true,
  "isClickable" : true,
  "formatType" : "...",
  "choiceList" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "controlType" : "..."
},
      "description" : "AttributeNode which provide list of values for the virtualEntityAttribute"
    }
    ,
    "json_AttributesListNode_nodes" : {
      "type" : "object",
      "title" : "AttributesListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "container" : {
"description" : "",
"type" : "string"
            },
            "password" : {
"description" : "",
"type" : "string"
            },
            "namingAttr" : {
"description" : "",
"type" : "string"
            },
            "attributesList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode_nodes"
}
            },
            "attributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserDefaultAttrNode"
}
            },
            "primaryAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode_nodes"
}
            },
            "secondaryttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode_nodes"
}
            },
            "otherAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode_nodes"
}
            },
            "displayPhoto" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "container" : "...",
  "password" : "...",
  "namingAttr" : "...",
  "attributesList" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "..."
  } ],
  "attributes" : [ {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  }, {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  } ],
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "..."
  } ],
  "secondaryttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "..."
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "..."
  } ],
  "displayPhoto" : true
},
      "description" : "userInputNode for CreateOpertaion"
    }
    ,
    "json_AttributesListNode" : {
      "type" : "object",
      "title" : "AttributesListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "container" : {
"description" : "",
"type" : "string"
            },
            "password" : {
"description" : "",
"type" : "string"
            },
            "profilePhoto" : {
"description" : "",
"type" : "string"
            },
            "namingAttr" : {
"description" : "",
"type" : "string"
            },
            "attributesList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            },
            "attributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserDefaultAttrNode_nodes"
}
            },
            "primaryAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            },
            "secondaryttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            },
            "otherAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            },
            "displayPhoto" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "container" : "...",
  "password" : "...",
  "profilePhoto" : "...",
  "namingAttr" : "...",
  "attributesList" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "attributes" : [ {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  }, {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  } ],
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "secondaryttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "displayPhoto" : true
},
      "description" : "userInputNode for CreateOpertaion"
    }
    ,
    "json_AvailabilityListNode" : {
      "type" : "object",
      "title" : "AvailabilityListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "availability" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AvailabilityNode"
}
            },
            "totalAvailability" : {
"description" : "",
"type" : "number"
            },
            "availabilityStatus" : {
"description" : "",
"type" : "number"
            },
            "hasDelegatesAssigned" : {
"description" : "",
"type" : "boolean"
            },
            "newable" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
},
      "description" : "Node for Availability list"
    }
    ,
    "json_AvailabilityNode" : {
      "type" : "object",
      "title" : "AvailabilityNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "hasExpiry" : {
"description" : "",
"type" : "boolean"
            },
            "requestDefs" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RequestDefNode"
}
            },
            "availableRequestDefs" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RequestDefNode"
}
            },
            "allRequests" : {
"description" : "",
"type" : "boolean"
            },
            "enableAllRequests" : {
"description" : "",
"type" : "boolean"
            },
            "principalUser" : {
"description" : "",
"$ref" : "#/definitions/json_UserNode"
            },
            "effectiveDate" : {
"description" : "",
"type" : "number"
            },
            "expiryDate" : {
"description" : "",
"type" : "number"
            },
            "hasExpiryDuration" : {
"description" : "",
"type" : "boolean"
            },
            "expiryDuration" : {
"description" : "",
"type" : "string"
            },
            "expiryDurationUnit" : {
"description" : "",
"type" : "string"
            },
            "teamscope" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "availabilityId" : {
"description" : "",
"type" : "string"
            },
            "isNotificationRequired" : {
"description" : "",
"type" : "boolean"
            },
            "notificationAddresseeType" : {
"description" : "",
"type" : "string"
            },
            "notifyUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "hasExpiry" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "availableRequestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "allRequests" : true,
  "enableAllRequests" : true,
  "principalUser" : {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  },
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "hasExpiryDuration" : true,
  "expiryDuration" : "...",
  "expiryDurationUnit" : "...",
  "teamscope" : "...",
  "type" : "...",
  "availabilityId" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ]
},
      "description" : "Node for Availability definition"
    }
    ,
    "json_AvailabilityStatusNode" : {
      "type" : "object",
      "title" : "AvailabilityStatusNode",
          "properties" : {
            "status" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            },
            "errorMessage" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "status" : "...",
  "dn" : "...",
  "errorMessage" : "..."
},
      "description" : "This POJO class used only for Update the Available status on Availability Definition"
    }
    ,
    "json_BundleId" : {
      "type" : "object",
      "title" : "BundleId",
      "example" : { },
      "description" : ""
    }
    ,
    "json_CacheConfigNode" : {
      "type" : "object",
      "title" : "CacheConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "permIndexClusterEnabled" : {
"description" : "",
"type" : "string"
            },
            "permIndexClusterEnabledCurrentValue" : {
"description" : "",
"type" : "string"
            },
            "clusterEnabled" : {
"description" : "",
"type" : "string"
            },
            "clusterEnabledCurrentValue" : {
"description" : "",
"type" : "string"
            },
            "groupID" : {
"description" : "",
"type" : "string"
            },
            "currentGroupID" : {
"description" : "",
"type" : "string"
            },
            "clusterProps" : {
"description" : "",
"type" : "string"
            },
            "clusterCurrentProps" : {
"description" : "",
"type" : "string"
            },
            "permIndexGroupID" : {
"description" : "",
"type" : "string"
            },
            "currentPermIndexGroupID" : {
"description" : "",
"type" : "string"
            },
            "permIndexClusterProps" : {
"description" : "",
"type" : "string"
            },
            "clusterPermIndexCurrentProps" : {
"description" : "",
"type" : "string"
            },
            "lockAcquTimeout" : {
"description" : "",
"type" : "string"
            },
            "lockAcquCurrentTimeout" : {
"description" : "",
"type" : "string"
            },
            "evictionPolicyClass" : {
"description" : "",
"type" : "string"
            },
            "currentEvictionPolicyClass" : {
"description" : "",
"type" : "string"
            },
            "wakeUpIntervalSeconds" : {
"description" : "",
"type" : "string"
            },
            "currentWakeUpInterval" : {
"description" : "",
"type" : "string"
            },
            "maxNodes" : {
"description" : "",
"type" : "string"
            },
            "currentMaxNodes" : {
"description" : "",
"type" : "string"
            },
            "timeToLiveSeconds" : {
"description" : "",
"type" : "string"
            },
            "currentTimeToLive" : {
"description" : "",
"type" : "string"
            },
            "localClusterEnabled" : {
"description" : "",
"type" : "string"
            },
            "localGroupID" : {
"description" : "",
"type" : "string"
            },
            "localClusterProps" : {
"description" : "",
"type" : "string"
            },
            "localLockAcquTimeout" : {
"description" : "",
"type" : "string"
            },
            "localEvictionPolicyClass" : {
"description" : "",
"type" : "string"
            },
            "localWakeUpIntervalSeconds" : {
"description" : "",
"type" : "string"
            },
            "localMaxNodes" : {
"description" : "",
"type" : "string"
            },
            "localTimeToLiveSeconds" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "permIndexClusterEnabled" : "...",
  "permIndexClusterEnabledCurrentValue" : "...",
  "clusterEnabled" : "...",
  "clusterEnabledCurrentValue" : "...",
  "groupID" : "...",
  "currentGroupID" : "...",
  "clusterProps" : "...",
  "clusterCurrentProps" : "...",
  "permIndexGroupID" : "...",
  "currentPermIndexGroupID" : "...",
  "permIndexClusterProps" : "...",
  "clusterPermIndexCurrentProps" : "...",
  "lockAcquTimeout" : "...",
  "lockAcquCurrentTimeout" : "...",
  "evictionPolicyClass" : "...",
  "currentEvictionPolicyClass" : "...",
  "wakeUpIntervalSeconds" : "...",
  "currentWakeUpInterval" : "...",
  "maxNodes" : "...",
  "currentMaxNodes" : "...",
  "timeToLiveSeconds" : "...",
  "currentTimeToLive" : "...",
  "localClusterEnabled" : "...",
  "localGroupID" : "...",
  "localClusterProps" : "...",
  "localLockAcquTimeout" : "...",
  "localEvictionPolicyClass" : "...",
  "localWakeUpIntervalSeconds" : "...",
  "localMaxNodes" : "...",
  "localTimeToLiveSeconds" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CacheInfoListResponseNode_nodes" : {
      "type" : "object",
      "title" : "CacheInfoListResponseNode",
          "properties" : {
            "cacheArraySize" : {
"description" : "",
"type" : "number"
            },
            "cacheHolders" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CacheInfoNode"
}
            }
          },
      "example" : {
  "cacheArraySize" : 12345,
  "cacheHolders" : [ {
    "name" : "...",
    "objectCount" : 12345
  }, {
    "name" : "...",
    "objectCount" : 12345
  } ]
},
      "description" : ""
    }
    ,
    "json_CacheInfoListResponseNode" : {
      "type" : "object",
      "title" : "CacheInfoListResponseNode",
          "properties" : {
            "cacheArraySize" : {
"description" : "",
"type" : "number"
            },
            "cacheHolders" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CacheInfoNode_nodes"
}
            }
          },
      "example" : {
  "cacheArraySize" : 12345,
  "cacheHolders" : [ {
    "cacheHolderID" : "...",
    "objectCount" : 12345
  }, {
    "cacheHolderID" : "...",
    "objectCount" : 12345
  } ]
},
      "description" : ""
    }
    ,
    "json_CacheInfoNode" : {
      "type" : "object",
      "title" : "CacheInfoNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "objectCount" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "name" : "...",
  "objectCount" : 12345
},
      "description" : ""
    }
    ,
    "json_CacheInfoNode_nodes" : {
      "type" : "object",
      "title" : "CacheInfoNode",
          "properties" : {
            "cacheHolderID" : {
"description" : "",
"type" : "string"
            },
            "objectCount" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "cacheHolderID" : "...",
  "objectCount" : 12345
},
      "description" : ""
    }
    ,
    "json_CartItemAssignmentNode" : {
      "type" : "object",
      "title" : "CartItemAssignmentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "instanceId" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "subtype" : {
"description" : "",
"type" : "string"
            },
            "assignedToDn" : {
"description" : "",
"type" : "string"
            },
            "assigneeFullName" : {
"description" : "",
"type" : "string"
            },
            "comment" : {
"description" : "",
"type" : "string"
            },
            "sodJustification" : {
"description" : "",
"type" : "string"
            },
            "entRef" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionAssignmentEntRefNode"
            },
            "reqForm" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionApprovalReqFormNode"
            }
          }
        }
      ],
      "example" : {
  "instanceId" : "...",
  "type" : "...",
  "subtype" : "...",
  "assignedToDn" : "...",
  "assigneeFullName" : "...",
  "comment" : "...",
  "sodJustification" : "...",
  "entRef" : {
    "entName" : "...",
    "entDesc" : "...",
    "params" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "displayValue" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "displayValue" : "...",
      "value" : "..."
    } ]
  },
  "reqForm" : {
    "params" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "displayValue" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "displayValue" : "...",
      "value" : "..."
    } ]
  }
},
      "description" : "JAXB representation for cart item assignments"
    }
    ,
    "json_CartItemNode" : {
      "type" : "object",
      "title" : "CartItemNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "itemDn" : {
"description" : "",
"type" : "string"
            },
            "itemType" : {
"description" : "",
"type" : "string"
            },
            "itemFullname" : {
"description" : "",
"type" : "string"
            },
            "itemAssignees" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CartItemAssignmentNode"
}
            }
          }
        }
      ],
      "example" : {
  "itemDn" : "...",
  "itemType" : "...",
  "itemFullname" : "...",
  "itemAssignees" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  } ]
},
      "description" : "JAXB representation for cart items"
    }
    ,
    "json_CartNode" : {
      "type" : "object",
      "title" : "CartNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "cartOwner" : {
"description" : "",
"type" : "string"
            },
            "cartAction" : {
"description" : "",
"type" : "string"
            },
            "totalCount" : {
"description" : "",
"type" : "number"
            },
            "cartItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CartItemNode"
}
            }
          }
        }
      ],
      "example" : {
  "cartOwner" : "...",
  "cartAction" : "...",
  "totalCount" : 12345,
  "cartItems" : [ {
    "itemDn" : "...",
    "itemType" : "...",
    "itemFullname" : "...",
    "itemAssignees" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ]
  }, {
    "itemDn" : "...",
    "itemType" : "...",
    "itemFullname" : "...",
    "itemAssignees" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ]
  } ]
},
      "description" : "JAXB representation for cart item assignments"
    }
    ,
    "json_CatalogUserNode" : {
      "type" : "object",
      "title" : "CatalogUserNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "firstName" : {
"description" : "",
"type" : "string"
            },
            "lastName" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "name" : "...",
  "firstName" : "...",
  "lastName" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CategoriesListResponseNode" : {
      "type" : "object",
      "title" : "CategoriesListResponseNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "categories" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CategoryNode"
}
            },
            "token" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "token" : "..."
},
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "json_CategoryListNode" : {
      "type" : "object",
      "title" : "CategoryListNode",
          "properties" : {
            "categoryList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CategoryNode_nodes"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "categoryList" : [ {
    "categoryId" : "...",
    "categoryName" : "..."
  }, {
    "categoryId" : "...",
    "categoryName" : "..."
  } ],
  "arraySize" : 12345
},
      "description" : "List of User Node(s)."
    }
    ,
    "json_CategoryNode_nodes" : {
      "type" : "object",
      "title" : "CategoryNode",
          "properties" : {
            "categoryId" : {
"description" : "",
"type" : "string"
            },
            "categoryName" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "categoryId" : "...",
  "categoryName" : "..."
},
      "description" : "JAXB representation of a DAL category"
    }
    ,
    "json_CategoryNode" : {
      "type" : "object",
      "title" : "CategoryNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CefConfigNode" : {
      "type" : "object",
      "title" : "CefConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "destinationHost" : {
"description" : "",
"type" : "string"
            },
            "destinationPort" : {
"description" : "",
"type" : "number"
            },
            "protocol" : {
"description" : "",
"type" : "string"
            },
            "useTLS" : {
"description" : "",
"type" : "boolean"
            },
            "keyStorePath" : {
"description" : "",
"type" : "string"
            },
            "keyStorePWD" : {
"description" : "",
"type" : "string"
            },
            "intermediateStoragePath" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "destinationHost" : "...",
  "destinationPort" : 12345,
  "protocol" : "...",
  "useTLS" : true,
  "keyStorePath" : "...",
  "keyStorePWD" : "...",
  "intermediateStoragePath" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_ClientNode" : {
      "type" : "object",
      "title" : "ClientNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "matchCondition" : {
"description" : "",
"type" : "string"
            },
            "config" : {
"description" : "",
"type" : "string"
            },
            "isDefault" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "name" : "...",
  "id" : "...",
  "matchCondition" : "...",
  "config" : "...",
  "isDefault" : true
},
      "description" : "Holds the representation of UserInfo."
    }
    ,
    "json_ClientsListNode" : {
      "type" : "object",
      "title" : "ClientsListNode",
          "properties" : {
            "clients" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ClientNode"
}
            },
            "totalCount" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "clients" : [ {
    "name" : "...",
    "id" : "...",
    "matchCondition" : "...",
    "config" : "...",
    "isDefault" : true
  }, {
    "name" : "...",
    "id" : "...",
    "matchCondition" : "...",
    "config" : "...",
    "isDefault" : true
  } ],
  "totalCount" : 12345
},
      "description" : "List of client config nodes"
    }
    ,
    "json_ClusterInfoNode" : {
      "type" : "object",
      "title" : "ClusterInfoNode",
          "properties" : {
            "clusterName" : {
"description" : "",
"type" : "string"
            },
            "sentBytes" : {
"description" : "",
"type" : "number"
            },
            "rcvdBytes" : {
"description" : "",
"type" : "number"
            },
            "sentMessages" : {
"description" : "",
"type" : "number"
            },
            "rcvdMessages" : {
"description" : "",
"type" : "number"
            },
            "localAdrress" : {
"description" : "",
"type" : "string"
            },
            "isOpen" : {
"description" : "",
"type" : "boolean"
            },
            "isConnected" : {
"description" : "",
"type" : "boolean"
            },
            "dumpStats" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "clusterName" : "...",
  "sentBytes" : 12345,
  "rcvdBytes" : 12345,
  "sentMessages" : 12345,
  "rcvdMessages" : 12345,
  "localAdrress" : "...",
  "isOpen" : true,
  "isConnected" : true,
  "dumpStats" : "..."
},
      "description" : "Node class to generate response for cluster info"
    }
    ,
    "json_CodeMapRefreshResponseNode" : {
      "type" : "object",
      "title" : "CodeMapRefreshResponseNode",
          "properties" : {
            "refreshStatus" : {
"description" : "",
"$ref" : "#/definitions/json_CodeMapRefreshStatusNode"
            }
          },
      "example" : {
  "refreshStatus" : {
    "id" : "...",
    "reason" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_CodeMapRefreshStatusNode" : {
      "type" : "object",
      "title" : "CodeMapRefreshStatusNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "reason" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "reason" : "..."
},
      "description" : ""
    }
    ,
    "json_CodeMapValueNode" : {
      "type" : "object",
      "title" : "CodeMapValueNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "nativeValue" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "value" : "...",
  "type" : "...",
  "displayLabel" : "...",
  "description" : "...",
  "nativeValue" : "..."
},
      "description" : "Code Mpa value node bean"
    }
    ,
    "json_CodeMapValueSearchResponseNode" : {
      "type" : "object",
      "title" : "CodeMapValueSearchResponseNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "hasMore" : {
"description" : "",
"type" : "boolean"
            },
            "codeMapValues" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CodeMapValueNode"
}
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "hasMore" : true,
  "codeMapValues" : [ {
    "id" : "...",
    "value" : "...",
    "type" : "...",
    "displayLabel" : "...",
    "description" : "...",
    "nativeValue" : "..."
  }, {
    "id" : "...",
    "value" : "...",
    "type" : "...",
    "displayLabel" : "...",
    "description" : "...",
    "nativeValue" : "..."
  } ]
},
      "description" : "JAXB node for a code map value search response. Details in the REST spec."
    }
    ,
    "json_ColumnPreferenceNodeList" : {
      "type" : "object",
      "title" : "ColumnPreferenceNodeList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "isPreferenceAvailable" : {
"description" : "",
"type" : "boolean"
            },
            "columns" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CommentListNode" : {
      "type" : "object",
      "title" : "CommentListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "commentNodeArray" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CommentNode"
}
            },
            "listCommentNode" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CommentNode"
}
            }
          }
        }
      ],
      "example" : {
  "commentNodeArray" : [ {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  }, {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  } ],
  "listCommentNode" : [ {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  }, {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  } ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CommentListNode_access" : {
      "type" : "object",
      "title" : "CommentListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "commentNode" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CommentNode_access"
}
            },
            "listCommentNode" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CommentNode_access"
}
            }
          }
        }
      ],
      "example" : {
  "commentNode" : [ {
    "systemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comments" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "userInfo" : {
      "self" : true,
      "helpDeskUser" : true,
      "proxy" : true,
      "addressees" : [ "...", "..." ],
      "delegated" : [ { }, { } ],
      "provAdmin" : true,
      "allAddressees" : [ "...", "..." ],
      "proxyUser" : "...",
      "primaryPrincipal" : "..."
    },
    "workId" : "..."
  }, {
    "systemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comments" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "userInfo" : {
      "self" : true,
      "helpDeskUser" : true,
      "proxy" : true,
      "addressees" : [ "...", "..." ],
      "delegated" : [ { }, { } ],
      "provAdmin" : true,
      "allAddressees" : [ "...", "..." ],
      "proxyUser" : "...",
      "primaryPrincipal" : "..."
    },
    "workId" : "..."
  } ],
  "listCommentNode" : [ {
    "systemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comments" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "userInfo" : {
      "self" : true,
      "helpDeskUser" : true,
      "proxy" : true,
      "addressees" : [ "...", "..." ],
      "delegated" : [ { }, { } ],
      "provAdmin" : true,
      "allAddressees" : [ "...", "..." ],
      "proxyUser" : "...",
      "primaryPrincipal" : "..."
    },
    "workId" : "..."
  }, {
    "systemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comments" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "userInfo" : {
      "self" : true,
      "helpDeskUser" : true,
      "proxy" : true,
      "addressees" : [ "...", "..." ],
      "delegated" : [ { }, { } ],
      "provAdmin" : true,
      "allAddressees" : [ "...", "..." ],
      "proxyUser" : "...",
      "primaryPrincipal" : "..."
    },
    "workId" : "..."
  } ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CommentNode_access" : {
      "type" : "object",
      "title" : "CommentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "systemComment" : {
"description" : "",
"type" : "boolean"
            },
            "timestamp" : {
"description" : "",
"type" : "number"
            },
            "userComment" : {
"description" : "",
"type" : "string"
            },
            "activityId" : {
"description" : "",
"type" : "string"
            },
            "comments" : {
"description" : "",
"type" : "string"
            },
            "commentId" : {
"description" : "",
"type" : "string"
            },
            "requestId" : {
"description" : "",
"type" : "string"
            },
            "author" : {
"description" : "",
"type" : "string"
            },
            "authorType" : {
"description" : "",
"type" : "string"
            },
            "principal" : {
"description" : "",
"type" : "string"
            },
            "messageId" : {
"description" : "",
"type" : "string"
            },
            "commentText" : {
"description" : "",
"type" : "string"
            },
            "createTime" : {
"description" : "",
"type" : "number"
            },
            "activityType" : {
"description" : "",
"type" : "number"
            },
            "sequenceNumber" : {
"description" : "",
"type" : "number"
            },
            "userInfo" : {
"description" : "",
"$ref" : "#/definitions/json_UserInfoBean"
            },
            "workId" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "systemComment" : true,
  "timestamp" : 12345,
  "userComment" : "...",
  "activityId" : "...",
  "comments" : "...",
  "commentId" : "...",
  "requestId" : "...",
  "author" : "...",
  "authorType" : "...",
  "principal" : "...",
  "messageId" : "...",
  "commentText" : "...",
  "createTime" : 12345,
  "activityType" : 12345,
  "sequenceNumber" : 12345,
  "userInfo" : {
    "self" : true,
    "helpDeskUser" : true,
    "proxy" : true,
    "addressees" : [ "...", "..." ],
    "delegated" : [ { }, { } ],
    "provAdmin" : true,
    "allAddressees" : [ "...", "..." ],
    "proxyUser" : "...",
    "primaryPrincipal" : "..."
  },
  "workId" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CommentNode" : {
      "type" : "object",
      "title" : "CommentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "isSystemComment" : {
"description" : "",
"type" : "boolean"
            },
            "timestamp" : {
"description" : "",
"type" : "number"
            },
            "userComment" : {
"description" : "",
"type" : "string"
            },
            "activityId" : {
"description" : "",
"type" : "string"
            },
            "comment" : {
"description" : "",
"type" : "string"
            },
            "commentId" : {
"description" : "",
"type" : "string"
            },
            "requestId" : {
"description" : "",
"type" : "string"
            },
            "author" : {
"description" : "",
"type" : "string"
            },
            "authorType" : {
"description" : "",
"type" : "string"
            },
            "principal" : {
"description" : "",
"type" : "string"
            },
            "messageId" : {
"description" : "",
"type" : "string"
            },
            "commentText" : {
"description" : "",
"type" : "string"
            },
            "createTime" : {
"description" : "",
"type" : "number"
            },
            "activityType" : {
"description" : "",
"type" : "number"
            },
            "sequenceNumber" : {
"description" : "",
"type" : "number"
            },
            "workId" : {
"description" : "",
"type" : "string"
            },
            "activityName" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "isSystemComment" : true,
  "timestamp" : 12345,
  "userComment" : "...",
  "activityId" : "...",
  "comment" : "...",
  "commentId" : "...",
  "requestId" : "...",
  "author" : "...",
  "authorType" : "...",
  "principal" : "...",
  "messageId" : "...",
  "commentText" : "...",
  "createTime" : 12345,
  "activityType" : 12345,
  "sequenceNumber" : 12345,
  "workId" : "...",
  "activityName" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_ContainerListNode" : {
      "type" : "object",
      "title" : "ContainerListNode",
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "subContainers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ContainerNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "dn" : "...",
  "name" : "...",
  "subContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "arraySize" : 12345
},
      "description" : "List of Container Node(s)."
    }
    ,
    "json_ContainerNode_nodes" : {
      "type" : "object",
      "title" : "ContainerNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "level" : {
"description" : "",
"type" : "number"
            },
            "type" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "...",
  "level" : 12345,
  "type" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_ContainerNode" : {
      "type" : "object",
      "title" : "ContainerNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "level" : {
"description" : "",
"type" : "number"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "searchScope" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "name" : "...",
  "level" : 12345,
  "type" : "...",
  "searchScope" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_Cookie" : {
      "type" : "object",
      "title" : "Cookie",
          "properties" : {
            "domain" : {
"description" : "",
"type" : "string"
            },
            "path" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            },
            "version" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "domain" : "...",
  "path" : "...",
  "name" : "...",
  "value" : "...",
  "version" : 12345
},
      "description" : ""
    }
    ,
    "json_CountsNode" : {
      "type" : "object",
      "title" : "CountsNode",
          "properties" : {
            "rolesData" : {
"description" : "",
"$ref" : "#/definitions/json_UserRoleNode"
            },
            "resourcesData" : {
"description" : "",
"$ref" : "#/definitions/json_UserResourceNode"
            },
            "tasksData" : {
"description" : "",
"$ref" : "#/definitions/json_UserTaskNode"
            },
            "requestData" : {
"description" : "",
"$ref" : "#/definitions/json_RequestCountNode"
            },
            "helpdeskData" : {
"description" : "",
"$ref" : "#/definitions/json_HelpdeskInfoNode"
            }
          },
      "example" : {
  "rolesData" : {
    "expiryRoles" : 12345,
    "newRoles" : 12345,
    "rolesCount" : 12345
  },
  "resourcesData" : {
    "newResources" : 12345,
    "resourcesCount" : 12345
  },
  "tasksData" : {
    "expiryTasksCount" : 12345,
    "newTasks" : 12345,
    "cliamedTasks" : 12345,
    "reassignedTasks" : 12345,
    "delegatedTasks" : 12345,
    "tasksCount" : 12345
  },
  "requestData" : {
    "requestPending" : 12345,
    "requestDenied" : 12345,
    "requestApproved" : 12345,
    "totalRequest" : 12345,
    "requestForOthersPending" : 12345,
    "requestForOthersDenied" : 12345,
    "requestForOthersApproved" : 12345,
    "totalRequestForOthers" : 12345,
    "requestHasMore" : true,
    "otherRequestHasMore" : true
  },
  "helpdeskData" : {
    "openTickets" : 12345,
    "helpdeskProfileNames" : [ "...", "..." ]
  }
},
      "description" : ""
    }
    ,
    "json_CprsConfigNode" : {
      "type" : "object",
      "title" : "CprsConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "enableCprs" : {
"description" : "",
"type" : "boolean"
            },
            "cleanupTimeInDays" : {
"description" : "",
"type" : "number"
            },
            "pollingInterval" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "enableCprs" : true,
  "cleanupTimeInDays" : 12345,
  "pollingInterval" : 12345
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CprsDeltaAssignmentList" : {
      "type" : "object",
      "title" : "CprsDeltaAssignmentList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "totalHits" : {
"description" : "",
"type" : "string"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "deltaAssignmentsList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CprsDeltaAssignmentsNode"
}
            },
            "id" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "totalHits" : "...",
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "deltaAssignmentsList" : [ {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  }, {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  } ],
  "id" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CprsDeltaAssignmentsNode" : {
      "type" : "object",
      "title" : "CprsDeltaAssignmentsNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "instanceGuId" : {
"description" : "",
"type" : "string"
            },
            "entitlementValue" : {
"description" : "",
"type" : "string"
            },
            "lastName" : {
"description" : "",
"type" : "string"
            },
            "firstName" : {
"description" : "",
"type" : "string"
            },
            "source" : {
"description" : "",
"type" : "string"
            },
            "userDN" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "entitlementDn" : {
"description" : "",
"type" : "string"
            },
            "logicalSystemId" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "instanceGuId" : "...",
  "entitlementValue" : "...",
  "lastName" : "...",
  "firstName" : "...",
  "source" : "...",
  "userDN" : "...",
  "id" : "...",
  "entitlementDn" : "...",
  "logicalSystemId" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CprsRequestNode" : {
      "type" : "object",
      "title" : "CprsRequestNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "isMigrate" : {
"description" : "",
"type" : "boolean"
            },
            "entitlementDn" : {
"description" : "",
"type" : "string"
            },
            "deltaAssignmentsList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CprsDeltaAssignmentsNode"
}
            },
            "driverDn" : {
"description" : "",
"type" : "string"
            },
            "logicalSystem" : {
"description" : "",
"type" : "string"
            },
            "opType" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "isMigrate" : true,
  "entitlementDn" : "...",
  "deltaAssignmentsList" : [ {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  }, {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  } ],
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "id" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_CprsRequestStatusNode" : {
      "type" : "object",
      "title" : "CprsRequestStatusNode",
          "properties" : {
            "entitlementDn" : {
"description" : "",
"type" : "string"
            },
            "opStatus" : {
"description" : "",
"type" : "number"
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "driverDn" : {
"description" : "",
"type" : "string"
            },
            "logicalSystem" : {
"description" : "",
"type" : "string"
            },
            "opType" : {
"description" : "",
"type" : "string"
            },
            "failedAssignments" : {
"description" : "",
"type" : "number"
            },
            "requestStartTime" : {
"description" : "",
"type" : "string"
            },
            "requestCompletionTime" : {
"description" : "",
"type" : "string"
            },
            "statusMessage" : {
"description" : "",
"type" : "string"
            },
            "totalAssignments" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "entitlementDn" : "...",
  "opStatus" : 12345,
  "id" : "...",
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "failedAssignments" : 12345,
  "requestStartTime" : "...",
  "requestCompletionTime" : "...",
  "statusMessage" : "...",
  "totalAssignments" : 12345
},
      "description" : ""
    }
    ,
    "json_CprsRequestStatusNodeList" : {
      "type" : "object",
      "title" : "CprsRequestStatusNodeList",
          "properties" : {
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "cprsRequestStatus" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CprsRequestStatusNode"
}
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "total" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "arraySize" : 12345,
  "cprsRequestStatus" : [ {
    "entitlementDn" : "...",
    "opStatus" : 12345,
    "id" : "...",
    "driverDn" : "...",
    "logicalSystem" : "...",
    "opType" : "...",
    "failedAssignments" : 12345,
    "requestStartTime" : "...",
    "requestCompletionTime" : "...",
    "statusMessage" : "...",
    "totalAssignments" : 12345
  }, {
    "entitlementDn" : "...",
    "opStatus" : 12345,
    "id" : "...",
    "driverDn" : "...",
    "logicalSystem" : "...",
    "opType" : "...",
    "failedAssignments" : 12345,
    "requestStartTime" : "...",
    "requestCompletionTime" : "...",
    "statusMessage" : "...",
    "totalAssignments" : 12345
  } ],
  "nextIndex" : 12345,
  "total" : 12345
},
      "description" : ""
    }
    ,
    "json_CprsSettingNode" : {
      "type" : "object",
      "title" : "CprsSettingNode",
          "properties" : {
            "logicalsystem" : {
"description" : "",
"type" : "string"
            },
            "entitlement" : {
"description" : "",
"type" : "string"
            },
            "drivername" : {
"description" : "",
"type" : "string"
            },
            "resource" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "entitlementvalue" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "logicalsystem" : "...",
  "entitlement" : "...",
  "drivername" : "...",
  "resource" : "...",
  "id" : "...",
  "entitlementvalue" : "..."
},
      "description" : ""
    }
    ,
    "json_CprsSettingNodeList" : {
      "type" : "object",
      "title" : "CprsSettingNodeList",
          "properties" : {
            "total" : {
"description" : "",
"type" : "number"
            },
            "cprsSettingList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CprsSettingNode"
}
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "total" : 12345,
  "cprsSettingList" : [ {
    "logicalsystem" : "...",
    "entitlement" : "...",
    "drivername" : "...",
    "resource" : "...",
    "id" : "...",
    "entitlementvalue" : "..."
  }, {
    "logicalsystem" : "...",
    "entitlement" : "...",
    "drivername" : "...",
    "resource" : "...",
    "id" : "...",
    "entitlementvalue" : "..."
  } ],
  "nextIndex" : 12345,
  "arraySize" : 12345
},
      "description" : ""
    }
    ,
    "json_CustomizeCacheListNode" : {
      "type" : "object",
      "title" : "CustomizeCacheListNode",
          "properties" : {
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "customizeCacheHolders" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CustomizeCacheNode"
}
            }
          },
      "example" : {
  "arraySize" : 12345,
  "customizeCacheHolders" : [ {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  }, {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  } ]
},
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "json_CustomizeCacheNode" : {
      "type" : "object",
      "title" : "CustomizeCacheNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "maxnodesCurrent" : {
"description" : "",
"type" : "number"
            },
            "globalMaxnodes" : {
"description" : "",
"type" : "string"
            },
            "enableLocalMaxnodes" : {
"description" : "",
"type" : "string"
            },
            "localMaxnodes" : {
"description" : "",
"type" : "string"
            },
            "timetoliveCurrent" : {
"description" : "",
"type" : "number"
            },
            "globalTimetolive" : {
"description" : "",
"type" : "string"
            },
            "loacalTimetolive" : {
"description" : "",
"type" : "string"
            },
            "enableLocalTimetolive" : {
"description" : "",
"type" : "string"
            },
            "maxageCurrent" : {
"description" : "",
"type" : "number"
            },
            "globalMaxage" : {
"description" : "",
"type" : "string"
            },
            "localMaxage" : {
"description" : "",
"type" : "string"
            },
            "enableLocalMaxage" : {
"description" : "",
"type" : "string"
            },
            "cacheActive" : {
"description" : "",
"type" : "string"
            },
            "cacheEnable" : {
"description" : "",
"type" : "string"
            },
            "cacheReadonly" : {
"description" : "",
"type" : "string"
            },
            "cacheValue" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "maxnodesCurrent" : 12345,
  "globalMaxnodes" : "...",
  "enableLocalMaxnodes" : "...",
  "localMaxnodes" : "...",
  "timetoliveCurrent" : 12345,
  "globalTimetolive" : "...",
  "loacalTimetolive" : "...",
  "enableLocalTimetolive" : "...",
  "maxageCurrent" : 12345,
  "globalMaxage" : "...",
  "localMaxage" : "...",
  "enableLocalMaxage" : "...",
  "cacheActive" : "...",
  "cacheEnable" : "...",
  "cacheReadonly" : "...",
  "cacheValue" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_DNNode" : {
      "type" : "object",
      "title" : "DNNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "...",
  "type" : "..."
},
      "description" : "Node to Handle Map operation for jerseyFrameWork"
    }
    ,
    "json_DashboardPreferenceNodeList" : {
      "type" : "object",
      "title" : "DashboardPreferenceNodeList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "isDashboardCustomized" : {
"description" : "",
"type" : "boolean"
            },
            "dashboardCustomizations" : {
"description" : "",
"type" : "string"
            },
            "dashboardWidgetsAccess" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode"
}
            }
          }
        }
      ],
      "example" : {
  "isDashboardCustomized" : true,
  "dashboardCustomizations" : "...",
  "dashboardWidgetsAccess" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_DataItemInputNode" : {
      "type" : "object",
      "title" : "DataItemInputNode",
          "properties" : {
            "type" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "source" : {
"description" : "",
"type" : "string"
            },
            "target" : {
"description" : "",
"type" : "string"
            },
            "controlType" : {
"description" : "",
"type" : "string"
            },
            "targetType" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "type" : "...",
  "name" : "...",
  "source" : "...",
  "target" : "...",
  "controlType" : "...",
  "targetType" : "..."
},
      "description" : "Node for handling Data Items"
    }
    ,
    "json_DataItemNode" : {
      "type" : "object",
      "title" : "DataItemNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "name" : "...",
  "value" : [ "...", "..." ]
},
      "description" : "This class will be used to carry data items for permission request in external application."
    }
    ,
    "json_DelegatedAdminRights" : {
      "type" : "object",
      "title" : "DelegatedAdminRights",
          "properties" : {
            "permissionKey" : {
"description" : "",
"type" : "string"
            },
            "isAccesible" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "permissionKey" : "...",
  "isAccesible" : true
},
      "description" : "DelagetdAdmin Configuration"
    }
    ,
    "json_DelegatedAdminRights_nodes" : {
      "type" : "object",
      "title" : "DelegatedAdminRights",
          "properties" : {
            "permissionDn" : {
"description" : "",
"type" : "string"
            },
            "operationAccessMap" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode"
}
            }
          },
      "example" : {
  "permissionDn" : "...",
  "operationAccessMap" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_DelegationAdminConfigNode" : {
      "type" : "object",
      "title" : "DelegationAdminConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "allRequests" : {
"description" : "",
"type" : "boolean"
            },
            "delegateNotfTemplate" : {
"description" : "",
"type" : "string"
            },
            "delegationRetentionTime" : {
"description" : "",
"type" : "number"
            },
            "availabilityNotfTemplate" : {
"description" : "",
"type" : "string"
            },
            "availabilityRetentionTime" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "allRequests" : true,
  "delegateNotfTemplate" : "...",
  "delegationRetentionTime" : 12345,
  "availabilityNotfTemplate" : "...",
  "availabilityRetentionTime" : 12345
},
      "description" : "JAXB representation of delegation Admin configuration."
    }
    ,
    "json_DelegationListNode" : {
      "type" : "object",
      "title" : "DelegationListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "delegations" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DelegationNode"
}
            },
            "totalDelegations" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "delegations" : [ {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  }, {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  } ],
  "totalDelegations" : 12345
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_DelegationNode" : {
      "type" : "object",
      "title" : "DelegationNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "assignmentId" : {
"description" : "",
"type" : "string"
            },
            "isExpires" : {
"description" : "",
"type" : "boolean"
            },
            "requestDefs" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RequestDefNode"
}
            },
            "assignToRelationship" : {
"description" : "",
"$ref" : "#/definitions/json_RelationshipNode"
            },
            "allRequests" : {
"description" : "",
"type" : "boolean"
            },
            "assignFromUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserNode"
}
            },
            "assignFromGroups" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_GroupNode"
}
            },
            "assignFromContainers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ContainerNode"
}
            },
            "assignToUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserNode"
}
            },
            "effectiveDate" : {
"description" : "",
"type" : "number"
            },
            "expiryDate" : {
"description" : "",
"type" : "number"
            },
            "teamscope" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "isNotificationRequired" : {
"description" : "",
"type" : "boolean"
            },
            "notificationAddresseeType" : {
"description" : "",
"type" : "string"
            },
            "notifyUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "createAvailability" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "assignmentId" : "...",
  "isExpires" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "assignToRelationship" : {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  },
  "allRequests" : true,
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignFromGroups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "assignFromContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "teamscope" : "...",
  "type" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ],
  "createAvailability" : true
},
      "description" : "delegation node"
    }
    ,
    "json_DeleteEntityListNode" : {
      "type" : "object",
      "title" : "DeleteEntityListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "items" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DeleteEntityVONode"
}
            },
            "count" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "items" : [ {
    "key" : "...",
    "dn" : "..."
  }, {
    "key" : "...",
    "dn" : "..."
  } ],
  "count" : 12345
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_DeleteEntityVONode" : {
      "type" : "object",
      "title" : "DeleteEntityVONode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "dn" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_DeleteGroupNode" : {
      "type" : "object",
      "title" : "DeleteGroupNode",
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "dn" : "..."
},
      "description" : ""
    }
    ,
    "json_DelgatedAdminRightsList" : {
      "type" : "object",
      "title" : "DelgatedAdminRightsList",
          "properties" : {
            "opertionPermissionMap" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DelegatedAdminRights_nodes"
}
            }
          },
      "example" : {
  "opertionPermissionMap" : [ {
    "permissionDn" : "...",
    "operationAccessMap" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "permissionDn" : "...",
    "operationAccessMap" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ]
},
      "description" : "Delegated admin rights utility"
    }
    ,
    "json_DomainListNode" : {
      "type" : "object",
      "title" : "DomainListNode",
          "properties" : {
            "domains" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode"
}
            }
          },
      "example" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
},
      "description" : "List Node for Admin domain listing response"
    }
    ,
    "json_DriverListNode_nodes" : {
      "type" : "object",
      "title" : "DriverListNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "drivers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DriverNode_nodes"
}
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "drivers" : [ {
    "dn" : "...",
    "name" : "...",
    "guid" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "guid" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_DriverListNode" : {
      "type" : "object",
      "title" : "DriverListNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "drivers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DriverNode"
}
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "drivers" : [ {
    "id" : "...",
    "name" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "requestFrom" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "requestFrom" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_DriverNode_nodes" : {
      "type" : "object",
      "title" : "DriverNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "guid" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "name" : "...",
  "guid" : "..."
},
      "description" : "Holds the representation of Drivers."
    }
    ,
    "json_DriverNode" : {
      "type" : "object",
      "title" : "DriverNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "entitlements" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementNode"
}
            },
            "requestFrom" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "...",
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "requestFrom" : "..."
},
      "description" : "Holds the representation of Drivers."
    }
    ,
    "json_DriverStatusNode" : {
      "type" : "object",
      "title" : "DriverStatusNode",
          "properties" : {
            "patchLevel" : {
"description" : "",
"type" : "string"
            },
            "appVersion" : {
"description" : "",
"type" : "string"
            },
            "driverVersion" : {
"description" : "",
"type" : "string"
            },
            "buildVersion" : {
"description" : "",
"type" : "string"
            },
            "driverName" : {
"description" : "",
"type" : "string"
            },
            "expirationDate" : {
"description" : "",
"type" : "number"
            },
            "state" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "patchLevel" : "...",
  "appVersion" : "...",
  "driverVersion" : "...",
  "buildVersion" : "...",
  "driverName" : "...",
  "expirationDate" : 12345,
  "state" : "..."
},
      "description" : ""
    }
    ,
    "json_DynamicParamListNode" : {
      "type" : "object",
      "title" : "DynamicParamListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "dynamicParamList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DynamicParamNode"
}
            }
          }
        }
      ],
      "example" : {
  "dynamicParamList" : [ {
    "paramName" : "...",
    "paramLabel" : "...",
    "paramValues" : [ "...", "..." ]
  }, {
    "paramName" : "...",
    "paramLabel" : "...",
    "paramValues" : [ "...", "..." ]
  } ]
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_DynamicParamNode" : {
      "type" : "object",
      "title" : "DynamicParamNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "paramName" : {
"description" : "",
"type" : "string"
            },
            "paramLabel" : {
"description" : "",
"type" : "string"
            },
            "paramValues" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "paramName" : "...",
  "paramLabel" : "...",
  "paramValues" : [ "...", "..." ]
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_EboApiException" : {
      "type" : "object",
      "title" : "EboApiException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_LocalizedException"
        },
        {
        }
      ],
      "example" : {
  "message" : "...",
  "bundleId" : { },
  "localizedMessage" : "...",
  "locString" : {
    "bundleId" : { },
    "params" : [ { }, { } ],
    "key" : {
      "requiredNumArgs" : 12345
    },
    "args" : [ "...", "..." ]
  },
  "messageKey" : {
    "requiredNumArgs" : 12345
  },
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_EboSecurityException" : {
      "type" : "object",
      "title" : "EboSecurityException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_EboApiException"
        },
        {
        }
      ],
      "example" : {
  "message" : "...",
  "bundleId" : { },
  "localizedMessage" : "...",
  "locString" : {
    "bundleId" : { },
    "params" : [ { }, { } ],
    "key" : {
      "requiredNumArgs" : 12345
    },
    "args" : [ "...", "..." ]
  },
  "messageKey" : {
    "requiredNumArgs" : 12345
  },
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_EmailBasedApprovalNode" : {
      "type" : "object",
      "title" : "EmailBasedApprovalNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "emailApprovalTurnOn" : {
"description" : "",
"type" : "boolean"
            },
            "serverType" : {
"description" : "",
"type" : "string"
            },
            "host" : {
"description" : "",
"type" : "string"
            },
            "email" : {
"description" : "",
"type" : "string"
            },
            "password" : {
"description" : "",
"type" : "string"
            },
            "folder" : {
"description" : "",
"type" : "string"
            },
            "sslEnabled" : {
"description" : "",
"type" : "boolean"
            },
            "requireAuthentication" : {
"description" : "",
"type" : "boolean"
            },
            "useDefaultPort" : {
"description" : "",
"type" : "boolean"
            },
            "port" : {
"description" : "",
"type" : "number"
            },
            "pollingInterval" : {
"description" : "",
"type" : "number"
            },
            "approvePhrase" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeLocaleInfo"
}
            },
            "denyPhrase" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeLocaleInfo"
}
            },
            "cleanupTimeInDays" : {
"description" : "",
"type" : "number"
            },
            "successMailTemplate" : {
"description" : "",
"type" : "string"
            },
            "failureMailTemplate" : {
"description" : "",
"type" : "string"
            },
            "tokenExpirationTime" : {
"description" : "",
"type" : "number"
            },
            "emailContentOption" : {
"description" : "",
"type" : "number"
            },
            "replyEmail" : {
"description" : "",
"type" : "string"
            },
            "isProxyEnabled" : {
"description" : "",
"type" : "boolean"
            },
            "proxyHost" : {
"description" : "",
"type" : "string"
            },
            "proxyPort" : {
"description" : "",
"type" : "number"
            },
            "isProxyAuthRequired" : {
"description" : "",
"type" : "boolean"
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            },
            "proxyPassword" : {
"description" : "",
"type" : "string"
            },
            "notifyHost" : {
"description" : "",
"type" : "string"
            },
            "notifyPort" : {
"description" : "",
"type" : "string"
            },
            "notifySecurePort" : {
"description" : "",
"type" : "string"
            },
            "notifyProtocol" : {
"description" : "",
"type" : "string"
            },
            "notifySecureProtocol" : {
"description" : "",
"type" : "string"
            },
            "notifyDefaultFromAddress" : {
"description" : "",
"type" : "string"
            },
            "notifySmtpHost" : {
"description" : "",
"type" : "string"
            },
            "notifyAuthRequired" : {
"description" : "",
"type" : "boolean"
            },
            "notifyAuthUser" : {
"description" : "",
"type" : "string"
            },
            "notifyAuthPassword" : {
"description" : "",
"type" : "string"
            },
            "notifySmtpTls" : {
"description" : "",
"type" : "boolean"
            },
            "notifyImageUrl" : {
"description" : "",
"type" : "string"
            },
            "notifySignature" : {
"description" : "",
"type" : "boolean"
            },
            "notifySignPath" : {
"description" : "",
"type" : "string"
            },
            "notifySignPassword" : {
"description" : "",
"type" : "string"
            },
            "notifySignKeyAlias" : {
"description" : "",
"type" : "string"
            },
            "notifySignKeyPassword" : {
"description" : "",
"type" : "string"
            },
            "fieldLabels" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode"
}
            }
          }
        }
      ],
      "example" : {
  "emailApprovalTurnOn" : true,
  "serverType" : "...",
  "host" : "...",
  "email" : "...",
  "password" : "...",
  "folder" : "...",
  "sslEnabled" : true,
  "requireAuthentication" : true,
  "useDefaultPort" : true,
  "port" : 12345,
  "pollingInterval" : 12345,
  "approvePhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "denyPhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "cleanupTimeInDays" : 12345,
  "successMailTemplate" : "...",
  "failureMailTemplate" : "...",
  "tokenExpirationTime" : 12345,
  "emailContentOption" : 12345,
  "replyEmail" : "...",
  "isProxyEnabled" : true,
  "proxyHost" : "...",
  "proxyPort" : 12345,
  "isProxyAuthRequired" : true,
  "proxyUser" : "...",
  "proxyPassword" : "...",
  "notifyHost" : "...",
  "notifyPort" : "...",
  "notifySecurePort" : "...",
  "notifyProtocol" : "...",
  "notifySecureProtocol" : "...",
  "notifyDefaultFromAddress" : "...",
  "notifySmtpHost" : "...",
  "notifyAuthRequired" : true,
  "notifyAuthUser" : "...",
  "notifyAuthPassword" : "...",
  "notifySmtpTls" : true,
  "notifyImageUrl" : "...",
  "notifySignature" : true,
  "notifySignPath" : "...",
  "notifySignPassword" : "...",
  "notifySignKeyAlias" : "...",
  "notifySignKeyPassword" : "...",
  "fieldLabels" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
},
      "description" : "Email based approval node to get and update admin configuration"
    }
    ,
    "json_EmailTemplateNode" : {
      "type" : "object",
      "title" : "EmailTemplateNode",
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "fullName" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "dn" : "...",
  "fullName" : "..."
},
      "description" : "To transport the default notification templates info"
    }
    ,
    "json_EmailTemplateNodeList" : {
      "type" : "object",
      "title" : "EmailTemplateNodeList",
          "properties" : {
            "emailTemplates" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EmailTemplateNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "emailTemplates" : [ {
    "dn" : "...",
    "fullName" : "..."
  }, {
    "dn" : "...",
    "fullName" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345
},
      "description" : "List of email Template Node(s)."
    }
    ,
    "json_EngineConfigNode" : {
      "type" : "object",
      "title" : "EngineConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "engineId" : {
"description" : "",
"type" : "string"
            },
            "minPoolSize" : {
"description" : "",
"type" : "number"
            },
            "maxPoolSize" : {
"description" : "",
"type" : "number"
            },
            "initialPoolSize" : {
"description" : "",
"type" : "number"
            },
            "keepAliveTime" : {
"description" : "",
"type" : "number"
            },
            "userActivityTimeout" : {
"description" : "",
"type" : "number"
            },
            "completedProcessTimeout" : {
"description" : "",
"type" : "number"
            },
            "webServiceActivityTimeout" : {
"description" : "",
"type" : "number"
            },
            "pendingInterval" : {
"description" : "",
"type" : "number"
            },
            "cleanupInterval" : {
"description" : "",
"type" : "number"
            },
            "retryQueueInterval" : {
"description" : "",
"type" : "number"
            },
            "maxShutdownTime" : {
"description" : "",
"type" : "number"
            },
            "enableEmailNotification" : {
"description" : "",
"type" : "boolean"
            },
            "processCacheInitialCapacity" : {
"description" : "",
"type" : "number"
            },
            "processCacheMaxCapacity" : {
"description" : "",
"type" : "number"
            },
            "processCacheLoadFactor" : {
"description" : "",
"type" : "number"
            },
            "heartbeatInterval" : {
"description" : "",
"type" : "number"
            },
            "heartbeatFactor" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "engineId" : "...",
  "minPoolSize" : 12345,
  "maxPoolSize" : 12345,
  "initialPoolSize" : 12345,
  "keepAliveTime" : 12345,
  "userActivityTimeout" : 12345,
  "completedProcessTimeout" : 12345,
  "webServiceActivityTimeout" : 12345,
  "pendingInterval" : 12345,
  "cleanupInterval" : 12345,
  "retryQueueInterval" : 12345,
  "maxShutdownTime" : 12345,
  "enableEmailNotification" : true,
  "processCacheInitialCapacity" : 12345,
  "processCacheMaxCapacity" : 12345,
  "processCacheLoadFactor" : 12345.0,
  "heartbeatInterval" : 12345,
  "heartbeatFactor" : 12345
},
      "description" : "Holds the engine configuration object"
    }
    ,
    "json_EntitlementDetails" : {
      "type" : "object",
      "title" : "EntitlementDetails",
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "displayName" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "isMultiValue" : {
"description" : "",
"type" : "boolean"
            },
            "views" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementViewValue"
}
            },
            "type" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementDetailsType"
            },
            "paramTypes" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "isResourceMappingEnabled" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "dn" : "...",
  "displayName" : "...",
  "description" : "...",
  "isMultiValue" : true,
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "type" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "type" : "..."
  } ],
  "type" : "ADMIN",
  "paramTypes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "isResourceMappingEnabled" : true
},
      "description" : ""
    }
    ,
    "json_EntitlementDetailsType" : {
      "type" : "string",
      "title" : "EntitlementDetailsType",
          "enum" : [
            "NO_VALUE",
            "FREE_FORM",
            "DB",
            "ADMIN",
            "QUERY"
          ],
      "description" : "Enum of Entitlement types indicating the type of entitlement value\nrequired"
    }
    ,
    "json_EntitlementListNode" : {
      "type" : "object",
      "title" : "EntitlementListNode",
          "properties" : {
            "entitlements" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementNode"
}
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "viewID" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "id" : "...",
  "viewID" : "..."
},
      "description" : "List of EntitlementNode items"
    }
    ,
    "json_EntitlementNode" : {
      "type" : "object",
      "title" : "EntitlementNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "displayName" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "parameter" : {
"description" : "",
"type" : "string"
            },
            "parameterName" : {
"description" : "",
"type" : "string"
            },
            "parameterValue" : {
"description" : "",
"type" : "string"
            },
            "paramDescription" : {
"description" : "",
"type" : "string"
            },
            "correlationId" : {
"description" : "",
"type" : "string"
            },
            "requestAgent" : {
"description" : "",
"type" : "string"
            },
            "action" : {
"description" : "",
"type" : "number"
            },
            "isSingleValued" : {
"description" : "",
"type" : "boolean"
            },
            "driverName" : {
"description" : "",
"type" : "string"
            },
            "parameters" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "paramLogicSystem" : {
"description" : "",
"type" : "string"
            },
            "paramType" : {
"description" : "",
"type" : "string"
            },
            "isInvalidValue" : {
"description" : "",
"type" : "boolean"
            },
            "entitlementType" : {
"description" : "",
"type" : "string"
            },
            "resourceName" : {
"description" : "",
"type" : "string"
            },
            "resourceCN" : {
"description" : "",
"type" : "string"
            },
            "resourceDescription" : {
"description" : "",
"type" : "string"
            },
            "views" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementViewValue"
}
            },
            "paramTypes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParamNode"
}
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "displayName" : "...",
  "description" : "...",
  "parameter" : "...",
  "parameterName" : "...",
  "parameterValue" : "...",
  "paramDescription" : "...",
  "correlationId" : "...",
  "requestAgent" : "...",
  "action" : 12345,
  "isSingleValued" : true,
  "driverName" : "...",
  "parameters" : [ "...", "..." ],
  "paramLogicSystem" : "...",
  "paramType" : "...",
  "isInvalidValue" : true,
  "entitlementType" : "...",
  "resourceName" : "...",
  "resourceCN" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "type" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "type" : "..."
  } ],
  "paramTypes" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_EntitlementValueListNode" : {
      "type" : "object",
      "title" : "EntitlementValueListNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "entitlementValues" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementValueNode"
}
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ]
},
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "json_EntitlementValueNode" : {
      "type" : "object",
      "title" : "EntitlementValueNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "param" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            },
            "valueDisplayName" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "driver" : {
"description" : "",
"type" : "string"
            },
            "entitlementName" : {
"description" : "",
"type" : "string"
            },
            "resourceName" : {
"description" : "",
"type" : "string"
            },
            "resourceDescription" : {
"description" : "",
"type" : "string"
            },
            "views" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementViewValueNode"
}
            },
            "paramType" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "description" : "...",
  "type" : "...",
  "param" : "...",
  "value" : "...",
  "valueDisplayName" : "...",
  "id" : "...",
  "driver" : "...",
  "entitlementName" : "...",
  "resourceName" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  } ],
  "paramType" : "..."
},
      "description" : ""
    }
    ,
    "json_EntitlementViewValue" : {
      "type" : "object",
      "title" : "EntitlementViewValue",
          "properties" : {
            "displayName" : {
"description" : "",
"type" : "string"
            },
            "viewID" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "queryKey" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "displayName" : "...",
  "viewID" : "...",
  "description" : "...",
  "queryKey" : "...",
  "type" : "..."
},
      "description" : "Class to model entitlement views or logical systems"
    }
    ,
    "json_EntitlementViewValueNode" : {
      "type" : "object",
      "title" : "EntitlementViewValueNode",
          "properties" : {
            "displayName" : {
"description" : "",
"type" : "string"
            },
            "viewID" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "queryKey" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "entitlementName" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "displayName" : "...",
  "viewID" : "...",
  "description" : "...",
  "queryKey" : "...",
  "id" : "...",
  "entitlementName" : "..."
},
      "description" : ""
    }
    ,
    "json_EntitlementViewValueRequestNode" : {
      "type" : "object",
      "title" : "EntitlementViewValueRequestNode",
          "properties" : {
            "viewID" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "viewID" : "...",
  "type" : "..."
},
      "description" : "Class to model entitlement views or logical systems"
    }
    ,
    "json_EntityAttributeNode" : {
      "type" : "object",
      "title" : "EntityAttributeNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "attributeValues" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "dataType" : {
"description" : "",
"type" : "string"
            },
            "isSearchable" : {
"description" : "",
"type" : "boolean"
            },
            "isSortable" : {
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
"description" : "",
"type" : "boolean"
            },
            "isEditable" : {
"description" : "",
"type" : "boolean"
            },
            "isSelected" : {
"description" : "",
"type" : "boolean"
            },
            "isMultivalued" : {
"description" : "",
"type" : "boolean"
            },
            "isHideable" : {
"description" : "",
"type" : "boolean"
            },
            "isClickable" : {
"description" : "",
"type" : "boolean"
            },
            "formatType" : {
"description" : "",
"type" : "string"
            },
            "choiceList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode"
}
            },
            "controlType" : {
"description" : "",
"type" : "string"
            },
            "rangeStart" : {
"description" : "",
"type" : "number"
            },
            "rangeEnd" : {
"description" : "",
"type" : "number"
            },
            "lookupEntity" : {
"description" : "",
"type" : "string"
            },
            "lookupAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LookUpAttributeValueNode"
}
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "displayLabel" : "...",
  "attributeValues" : [ "...", "..." ],
  "dataType" : "...",
  "isSearchable" : true,
  "isSortable" : true,
  "isRequired" : true,
  "isEditable" : true,
  "isSelected" : true,
  "isMultivalued" : true,
  "isHideable" : true,
  "isClickable" : true,
  "formatType" : "...",
  "choiceList" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "controlType" : "...",
  "rangeStart" : 12345,
  "rangeEnd" : 12345,
  "lookupEntity" : "...",
  "lookupAttributes" : [ {
    "lookupAttrKey" : "...",
    "lookupAttrValue" : [ "...", "..." ],
    "key" : "...",
    "displayLabel" : "..."
  }, {
    "lookupAttrKey" : "...",
    "lookupAttrValue" : [ "...", "..." ],
    "key" : "...",
    "displayLabel" : "..."
  } ]
},
      "description" : "AttributeNode which provide list of values for the virtualEntityAttribute"
    }
    ,
    "json_EntityDefResponse" : {
      "type" : "object",
      "title" : "EntityDefResponse",
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "conatiner" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "dn" : "...",
  "conatiner" : "..."
},
      "description" : ""
    }
    ,
    "json_EntityDefinitionNode" : {
      "type" : "object",
      "title" : "EntityDefinitionNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "editKey" : {
"description" : "",
"type" : "string"
            },
            "display" : {
"description" : "",
"type" : "string"
            },
            "isCreatable" : {
"description" : "",
"type" : "boolean"
            },
            "isEditable" : {
"description" : "",
"type" : "boolean"
            },
            "isViewable" : {
"description" : "",
"type" : "boolean"
            },
            "isRemovable" : {
"description" : "",
"type" : "boolean"
            },
            "password" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            },
            "namingAttribute" : {
"description" : "",
"type" : "string"
            },
            "attributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntityAttributeNode"
}
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "editKey" : "...",
  "display" : "...",
  "isCreatable" : true,
  "isEditable" : true,
  "isViewable" : true,
  "isRemovable" : true,
  "password" : "...",
  "dn" : "...",
  "namingAttribute" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_EntityObjectListNode" : {
      "type" : "object",
      "title" : "EntityObjectListNode",
          "properties" : {
            "entityList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntityObjectNode"
}
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "totalCount" : {
"description" : "",
"type" : "number"
            },
            "hasMore" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "entityList" : [ {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  }, {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  } ],
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "hasMore" : true
},
      "description" : "List of Entity objects with count"
    }
    ,
    "json_EntityObjectNode" : {
      "type" : "object",
      "title" : "EntityObjectNode",
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "attributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            }
          },
      "example" : {
  "dn" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ]
},
      "description" : "EntityObject node to represent Entity Object Data"
    }
    ,
    "json_EntityTag" : {
      "type" : "object",
      "title" : "EntityTag",
          "properties" : {
            "weak" : {
"description" : "",
"type" : "boolean"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "weak" : true,
  "value" : "..."
},
      "description" : ""
    }
    ,
    "json_ErrorResponseSubcode" : {
      "type" : "string",
      "title" : "ErrorResponseSubcode",
          "enum" : [
            "INTERNAL_EXCEPTION",
            "SECURITY_EXCEPTION",
            "WORKFLOW_EXCEPTION",
            "PERMISSION_INDEX_EXCEPTION",
            "WORKFLOW_FORM_HANDLING",
            "XML_HANDLING_EXCEPTION",
            "NOT_FOUND_DB",
            "INV_ENUM_VALUE",
            "NOT_FOUND_JSON",
            "INV_INPUT",
            "EMPTY_RESPONSE",
            "EXISTING_USER",
            "EXISTING_ENTITY",
            "XSS_VALIDATION_FAILURE",
            "FEATURED_ITEM_SRV",
            "HOME_ITEM_SRV"
          ],
      "description" : ""
    }
    ,
    "json_Exception" : {
      "type" : "object",
      "title" : "Exception",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_Throwable"
        },
        {
        }
      ],
      "example" : {
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "message" : "...",
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ],
  "localizedMessage" : "..."
},
      "description" : ""
    }
    ,
    "json_Family" : {
      "type" : "string",
      "title" : "Family",
          "enum" : [
            "INFORMATIONAL",
            "SUCCESSFUL",
            "REDIRECTION",
            "CLIENT_ERROR",
            "SERVER_ERROR",
            "OTHER"
          ],
      "description" : ""
    }
    ,
    "json_FaultCode" : {
      "type" : "object",
      "title" : "FaultCode",
          "properties" : {
            "Value" : {
"description" : "",
"type" : "string"
            },
            "Subcode" : {
"description" : "",
"$ref" : "#/definitions/json_ValueCode"
            }
          },
      "example" : {
  "Value" : "...",
  "Subcode" : {
    "Value" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_FormDataItemNode" : {
      "type" : "object",
      "title" : "FormDataItemNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "value" : [ { }, { } ]
},
      "description" : "JAXB representation of a parameter node with key-value pair"
    }
    ,
    "json_FormResponseNode" : {
      "type" : "object",
      "title" : "FormResponseNode",
          "properties" : {
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "message" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "success" : true,
  "message" : "..."
},
      "description" : "JAXB representation of a response to a operation response. Operations can\ninclude several actions."
    }
    ,
    "json_GCVNode" : {
      "type" : "object",
      "title" : "GCVNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "type" : {
"description" : "",
"type" : "string"
            },
            "values" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "type" : "...",
  "values" : [ { }, { } ]
},
      "description" : "JAXB node for global configuration variable. type - integer, real, string,\nboolean, enum, password-ref, list or structured values - list containing the\nrespective gcv value"
    }
    ,
    "json_GeneralDispSettingNode" : {
      "type" : "object",
      "title" : "GeneralDispSettingNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "defaultRowsPerPage" : {
"description" : "",
"type" : "number"
            },
            "optionsRowsPerPage" : {
"description" : "",
"type" : "string"
            },
            "newRequestDefaultSortByOption" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "defaultRowsPerPage" : 12345,
  "optionsRowsPerPage" : "...",
  "newRequestDefaultSortByOption" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_GroupListNode" : {
      "type" : "object",
      "title" : "GroupListNode",
          "properties" : {
            "groups" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_GroupNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "token" : {
"description" : "",
"type" : "string"
            },
            "reason" : {
"description" : "",
"type" : "string"
            },
            "totalCount" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "groups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "reason" : "...",
  "totalCount" : 12345
},
      "description" : "List of Group Node(s)."
    }
    ,
    "json_GroupNode" : {
      "type" : "object",
      "title" : "GroupNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "members" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "container" : {
"description" : "",
"type" : "string"
            },
            "membersAction" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "name" : "...",
  "description" : "...",
  "members" : [ "...", "..." ],
  "container" : "...",
  "membersAction" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_HelpDeskClientNode" : {
      "type" : "object",
      "title" : "HelpDeskClientNode",
          "properties" : {
            "helpdeskName" : {
"description" : "",
"type" : "string"
            },
            "emailAddress" : {
"description" : "",
"type" : "string"
            },
            "contactNumber" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "helpdeskName" : "...",
  "emailAddress" : "...",
  "contactNumber" : "..."
},
      "description" : "This pojo is using to hold the data for the help desk person information."
    }
    ,
    "json_HelpDeskTicketNode" : {
      "type" : "object",
      "title" : "HelpDeskTicketNode",
          "properties" : {
            "ticketNumber" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "ticketNumber" : "..."
},
      "description" : "REST node class to hold Helpdesk ticket details"
    }
    ,
    "json_HelpDeskUserNode" : {
      "type" : "object",
      "title" : "HelpDeskUserNode",
          "properties" : {
            "users" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "users" : [ "...", "..." ]
},
      "description" : "REST node class to hold HelpDesk user details"
    }
    ,
    "json_HelpdeskInfoNode" : {
      "type" : "object",
      "title" : "HelpdeskInfoNode",
          "properties" : {
            "openTickets" : {
"description" : "",
"type" : "number"
            },
            "helpdeskProfileNames" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "openTickets" : 12345,
  "helpdeskProfileNames" : [ "...", "..." ]
},
      "description" : "Helpdesk information to display in the dashboard"
    }
    ,
    "json_IgConfigurationNode" : {
      "type" : "object",
      "title" : "IgConfigurationNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "host" : {
"description" : "",
"type" : "string"
            },
            "adminUserName" : {
"description" : "",
"type" : "string"
            },
            "adminPassword" : {
"description" : "",
"type" : "string"
            },
            "showIgApprovals" : {
"description" : "",
"type" : "boolean"
            },
            "showIgRequestCatalog" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "host" : "...",
  "adminUserName" : "...",
  "adminPassword" : "...",
  "showIgApprovals" : true,
  "showIgRequestCatalog" : true
},
      "description" : "Ig configuration node to get and update ig configuration"
    }
    ,
    "json_IllegalArgumentException" : {
      "type" : "object",
      "title" : "IllegalArgumentException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RuntimeException"
        },
        {
        }
      ],
      "example" : {
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "message" : "...",
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ],
  "localizedMessage" : "..."
},
      "description" : ""
    }
    ,
    "json_InfoNode" : {
      "type" : "object",
      "title" : "InfoNode",
          "properties" : {
            "version" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "version" : "..."
},
      "description" : "JAXB representation info service attributes"
    }
    ,
    "json_ItemCategoryNode" : {
      "type" : "object",
      "title" : "ItemCategoryNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "image" : {
"description" : "",
"type" : "string"
            },
            "itemCategoryId" : {
"description" : "",
"type" : "number"
            },
            "categoryName" : {
"description" : "",
"type" : "string"
            },
            "itemCategoryOrder" : {
"description" : "",
"type" : "number"
            },
            "desc" : {
"description" : "",
"type" : "string"
            },
            "subType" : {
"description" : "",
"type" : "string"
            },
            "items" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UiItemNode"
}
            }
          }
        }
      ],
      "example" : {
  "image" : "...",
  "itemCategoryId" : 12345,
  "categoryName" : "...",
  "itemCategoryOrder" : 12345,
  "desc" : "...",
  "subType" : "...",
  "items" : [ {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  }, {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  } ]
},
      "description" : "JAXB representation of a configuration item category node"
    }
    ,
    "json_ItemCategoryNodeList" : {
      "type" : "object",
      "title" : "ItemCategoryNodeList",
          "properties" : {
            "itemCategories" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ItemCategoryNode"
}
            }
          },
      "example" : {
  "itemCategories" : [ {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  }, {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  } ]
},
      "description" : "List of configuration item categories"
    }
    ,
    "json_ItemsByCategoryNode" : {
      "type" : "object",
      "title" : "ItemsByCategoryNode",
          "properties" : {
            "itemCategories" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ItemCategoryNode"
}
            },
            "uncategorizedItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UiItemNode"
}
            },
            "editable" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "itemCategories" : [ {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  }, {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  } ],
  "uncategorizedItems" : [ {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  }, {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  } ],
  "editable" : true
},
      "description" : "java bean populated by list items api invocation"
    }
    ,
    "json_JSONObject" : {
      "type" : "object",
      "title" : "JSONObject",
          "properties" : {
            "escapeForwardSlashAlways" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "escapeForwardSlashAlways" : true
},
      "description" : ""
    }
    ,
    "json_JaxBMapNode_nodes" : {
      "type" : "object",
      "title" : "JaxBMapNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "value" : "..."
},
      "description" : "Node to Handle Map operation for jerseyFrameWork"
    }
    ,
    "json_JaxBMapNode" : {
      "type" : "object",
      "title" : "JaxBMapNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "value" : "..."
},
      "description" : "Node to Handle Map operation for jerseyFrameWork"
    }
    ,
    "json_JaxBMapNodeList" : {
      "type" : "object",
      "title" : "JaxBMapNodeList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "mapList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode_nodes"
}
            }
          }
        }
      ],
      "example" : {
  "mapList" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
},
      "description" : "provides list of map mainly ment for jersey response"
    }
    ,
    "json_JaxBMapNodeList_nodes" : {
      "type" : "object",
      "title" : "JaxBMapNodeList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "mapList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode"
}
            }
          }
        }
      ],
      "example" : {
  "mapList" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
},
      "description" : "provides list of map mainly ment for jersey response"
    }
    ,
    "json_LandingPageBadgeNode" : {
      "type" : "object",
      "title" : "LandingPageBadgeNode",
          "properties" : {
            "badge" : {
"description" : "",
"type" : "number"
            },
            "params" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LandingPageBadgeParamNode"
}
            }
          },
      "example" : {
  "badge" : 12345,
  "params" : [ {
    "id" : 12345,
    "value" : "..."
  }, {
    "id" : 12345,
    "value" : "..."
  } ]
},
      "description" : "JAXB representation of landing page badge display"
    }
    ,
    "json_LandingPageBadgeParamNode" : {
      "type" : "object",
      "title" : "LandingPageBadgeParamNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "number"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : 12345,
  "value" : "..."
},
      "description" : "JAXB representation of landing page badge parameter"
    }
    ,
    "json_Link" : {
      "type" : "object",
      "title" : "Link",
          "properties" : {
            "uriBuilder" : {
"description" : "",
"$ref" : "#/definitions/json_UriBuilder"
            },
            "uri" : {
"description" : "",
"type" : "string"
            },
            "rel" : {
"description" : "",
"type" : "string"
            },
            "title" : {
"description" : "",
"type" : "string"
            },
            "rels" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "params" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "uriBuilder" : { },
  "uri" : "...",
  "rel" : "...",
  "title" : "...",
  "rels" : [ "...", "..." ],
  "type" : "...",
  "params" : {
    "property1" : "...",
    "property2" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_Locale" : {
      "type" : "object",
      "title" : "Locale",
          "properties" : {
            "displayVariant" : {
"description" : "",
"type" : "string"
            },
            "country" : {
"description" : "",
"type" : "string"
            },
            "unicodeLocaleAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "displayScript" : {
"description" : "",
"type" : "string"
            },
            "extensionKeys" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "language" : {
"description" : "",
"type" : "string"
            },
            "displayName" : {
"description" : "",
"type" : "string"
            },
            "ISOCountries" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "ISO3Country" : {
"description" : "",
"type" : "string"
            },
            "displayLanguage" : {
"description" : "",
"type" : "string"
            },
            "ISO3Language" : {
"description" : "",
"type" : "string"
            },
            "displayCountry" : {
"description" : "",
"type" : "string"
            },
            "availableLocales" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Locale"
}
            },
            "ISOLanguages" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "unicodeLocaleKeys" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "default" : {
"description" : "",
"$ref" : "#/definitions/json_Locale"
            },
            "variant" : {
"description" : "",
"type" : "string"
            },
            "script" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "displayVariant" : "...",
  "country" : "...",
  "unicodeLocaleAttributes" : [ "...", "..." ],
  "displayScript" : "...",
  "extensionKeys" : [ "...", "..." ],
  "language" : "...",
  "displayName" : "...",
  "ISOCountries" : [ "...", "..." ],
  "ISO3Country" : "...",
  "displayLanguage" : "...",
  "ISO3Language" : "...",
  "displayCountry" : "...",
  "availableLocales" : [ {
    "displayVariant" : "...",
    "country" : "...",
    "unicodeLocaleAttributes" : [ "...", "..." ],
    "displayScript" : "...",
    "extensionKeys" : [ "...", "..." ],
    "language" : "...",
    "displayName" : "...",
    "ISOCountries" : [ "...", "..." ],
    "ISO3Country" : "...",
    "displayLanguage" : "...",
    "ISO3Language" : "...",
    "displayCountry" : "...",
    "availableLocales" : [ { }, { } ],
    "ISOLanguages" : [ "...", "..." ],
    "unicodeLocaleKeys" : [ "...", "..." ],
    "default" : { },
    "variant" : "...",
    "script" : "..."
  }, {
    "displayVariant" : "...",
    "country" : "...",
    "unicodeLocaleAttributes" : [ "...", "..." ],
    "displayScript" : "...",
    "extensionKeys" : [ "...", "..." ],
    "language" : "...",
    "displayName" : "...",
    "ISOCountries" : [ "...", "..." ],
    "ISO3Country" : "...",
    "displayLanguage" : "...",
    "ISO3Language" : "...",
    "displayCountry" : "...",
    "availableLocales" : [ { }, { } ],
    "ISOLanguages" : [ "...", "..." ],
    "unicodeLocaleKeys" : [ "...", "..." ],
    "default" : { },
    "variant" : "...",
    "script" : "..."
  } ],
  "ISOLanguages" : [ "...", "..." ],
  "unicodeLocaleKeys" : [ "...", "..." ],
  "default" : {
    "displayVariant" : "...",
    "country" : "...",
    "unicodeLocaleAttributes" : [ "...", "..." ],
    "displayScript" : "...",
    "extensionKeys" : [ "...", "..." ],
    "language" : "...",
    "displayName" : "...",
    "ISOCountries" : [ "...", "..." ],
    "ISO3Country" : "...",
    "displayLanguage" : "...",
    "ISO3Language" : "...",
    "displayCountry" : "...",
    "availableLocales" : [ { }, { } ],
    "ISOLanguages" : [ "...", "..." ],
    "unicodeLocaleKeys" : [ "...", "..." ],
    "default" : { },
    "variant" : "...",
    "script" : "..."
  },
  "variant" : "...",
  "script" : "..."
},
      "description" : ""
    }
    ,
    "json_LocaleListNode" : {
      "type" : "object",
      "title" : "LocaleListNode",
          "properties" : {
            "locales" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LocaleNode"
}
            },
            "localeSet" : {
"description" : "",
"$ref" : "#/definitions/json_LocaleNode"
            }
          },
      "example" : {
  "locales" : [ {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }, {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  } ],
  "localeSet" : {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }
},
      "description" : "List of ui items"
    }
    ,
    "json_LocaleNode" : {
      "type" : "object",
      "title" : "LocaleNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "link" : {
"description" : "",
"type" : "string"
            },
            "localeKey" : {
"description" : "",
"type" : "string"
            },
            "modifiedLocale" : {
"description" : "",
"type" : "string"
            },
            "userDN" : {
"description" : "",
"type" : "string"
            },
            "userPreferredLocales" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "name" : "...",
  "link" : "...",
  "localeKey" : "...",
  "modifiedLocale" : "...",
  "userDN" : "...",
  "userPreferredLocales" : [ "...", "..." ]
},
      "description" : "JAXB representation of a locale node"
    }
    ,
    "json_LocalizedDescNode" : {
      "type" : "object",
      "title" : "LocalizedDescNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "locale" : {
"description" : "",
"type" : "string"
            },
            "desc" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "locale" : "...",
  "desc" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_LocalizedException" : {
      "type" : "object",
      "title" : "LocalizedException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_Exception"
        },
        {
          "properties" : {
            "message" : {
"description" : "",
"type" : "string"
            },
            "bundleId" : {
"description" : "",
"$ref" : "#/definitions/json_BundleId"
            },
            "localizedMessage" : {
"description" : "",
"type" : "string"
            },
            "locString" : {
"description" : "",
"$ref" : "#/definitions/json_LocalizedString"
            },
            "messageKey" : {
"description" : "",
"$ref" : "#/definitions/json_MsgKeyAbstract"
            }
          }
        }
      ],
      "example" : {
  "message" : "...",
  "bundleId" : { },
  "localizedMessage" : "...",
  "locString" : {
    "bundleId" : { },
    "params" : [ { }, { } ],
    "key" : {
      "requiredNumArgs" : 12345
    },
    "args" : [ "...", "..." ]
  },
  "messageKey" : {
    "requiredNumArgs" : 12345
  },
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_LocalizedNameNode" : {
      "type" : "object",
      "title" : "LocalizedNameNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "locale" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "locale" : "...",
  "name" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_LocalizedString" : {
      "type" : "object",
      "title" : "LocalizedString",
          "properties" : {
            "bundleId" : {
"description" : "",
"$ref" : "#/definitions/json_BundleId"
            },
            "params" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "key" : {
"description" : "",
"$ref" : "#/definitions/json_MsgKeyAbstract"
            },
            "args" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "bundleId" : { },
  "params" : [ { }, { } ],
  "key" : {
    "requiredNumArgs" : 12345
  },
  "args" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_LogConfigurationResponseNode" : {
      "type" : "object",
      "title" : "LogConfigurationResponseNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "logConfigurations" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LogNode"
}
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            },
            "total" : {
"description" : "",
"type" : "number"
            },
            "enableCEF" : {
"description" : "",
"type" : "boolean"
            },
            "cefConfigs" : {
"description" : "",
"$ref" : "#/definitions/json_CefConfigNode"
            },
            "persist" : {
"description" : "",
"type" : "boolean"
            },
            "changeAllLogs" : {
"description" : "",
"type" : "boolean"
            },
            "globalLogLevel" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
},
      "description" : "JAXB node for a log configurations list. Details in the REST spec."
    }
    ,
    "json_LogNode" : {
      "type" : "object",
      "title" : "LogNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "packageConfigured" : {
"description" : "",
"$ref" : "#/definitions/json_PackageNode"
            },
            "logAdditivity" : {
"description" : "",
"type" : "boolean"
            },
            "logLevel" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "packageConfigured" : {
    "packageName" : "...",
    "packageDescription" : "..."
  },
  "logAdditivity" : true,
  "logLevel" : 12345
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_LoggedInUser" : {
      "type" : "object",
      "title" : "LoggedInUser",
          "properties" : {
            "authorized" : {
"description" : "",
"type" : "boolean"
            },
            "readOnly" : {
"description" : "",
"type" : "boolean"
            },
            "teamReadOnly" : {
"description" : "",
"type" : "boolean"
            },
            "proxyFor" : {
"description" : "",
"type" : "boolean"
            },
            "clientId" : {
"description" : "",
"type" : "string"
            },
            "clientName" : {
"description" : "",
"type" : "string"
            },
            "isAdmin" : {
"description" : "",
"type" : "boolean"
            },
            "isRoleAdmin" : {
"description" : "",
"type" : "boolean"
            },
            "domains" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "isDelegationTeamMgr" : {
"description" : "",
"type" : "boolean"
            },
            "isAvailabilityTeamMgr" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "authorized" : true,
  "readOnly" : true,
  "teamReadOnly" : true,
  "proxyFor" : true,
  "clientId" : "...",
  "clientName" : "...",
  "isAdmin" : true,
  "isRoleAdmin" : true,
  "domains" : [ "...", "..." ],
  "isDelegationTeamMgr" : true,
  "isAvailabilityTeamMgr" : true
},
      "description" : "JAXB representation of a locale node"
    }
    ,
    "json_LookUpAttributeValueNode" : {
      "type" : "object",
      "title" : "LookUpAttributeValueNode",
          "properties" : {
            "lookupAttrKey" : {
"description" : "",
"type" : "string"
            },
            "lookupAttrValue" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "key" : {
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "lookupAttrKey" : "...",
  "lookupAttrValue" : [ "...", "..." ],
  "key" : "...",
  "displayLabel" : "..."
},
      "description" : ""
    }
    ,
    "json_MediaType" : {
      "type" : "object",
      "title" : "MediaType",
          "properties" : {
            "wildcardType" : {
"description" : "",
"type" : "boolean"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "wildcardSubtype" : {
"description" : "",
"type" : "boolean"
            },
            "parameters" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "subtype" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "wildcardType" : true,
  "type" : "...",
  "wildcardSubtype" : true,
  "parameters" : {
    "property1" : "...",
    "property2" : "..."
  },
  "subtype" : "..."
},
      "description" : ""
    }
    ,
    "json_MemoryInfoNode" : {
      "type" : "object",
      "title" : "MemoryInfoNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "maxMemory" : {
"description" : "",
"type" : "number"
            },
            "usedMemory" : {
"description" : "",
"type" : "number"
            },
            "freeMemory" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "name" : "...",
  "maxMemory" : 12345,
  "usedMemory" : 12345,
  "freeMemory" : 12345
},
      "description" : "This class will have node required for memory information"
    }
    ,
    "json_MemoryInfoResponseNode" : {
      "type" : "object",
      "title" : "MemoryInfoResponseNode",
          "properties" : {
            "jvmMemoryUsage" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MemoryInfoNode"
}
            },
            "javaMemoryPool" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MemoryInfoNode"
}
            },
            "systemMemoryUsage" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MemoryInfoNode"
}
            },
            "commitedVirtualMemory" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "jvmMemoryUsage" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "javaMemoryPool" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "systemMemoryUsage" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "commitedVirtualMemory" : 12345
},
      "description" : "This is response node class for memory info system memory, CPU memory ,JVM\nMemory"
    }
    ,
    "json_MenuItem" : {
      "type" : "object",
      "title" : "MenuItem",
          "properties" : {
            "menuName" : {
"description" : "",
"type" : "string"
            },
            "mapName" : {
"description" : "",
"type" : "string"
            },
            "context" : {
"description" : "",
"type" : "string"
            },
            "menuOrder" : {
"description" : "",
"type" : "string"
            },
            "subMenuList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MenuItem"
}
            }
          },
      "example" : {
  "menuName" : "...",
  "mapName" : "...",
  "context" : "...",
  "menuOrder" : "...",
  "subMenuList" : [ {
    "menuName" : "...",
    "mapName" : "...",
    "context" : "...",
    "menuOrder" : "...",
    "subMenuList" : [ { }, { } ]
  }, {
    "menuName" : "...",
    "mapName" : "...",
    "context" : "...",
    "menuOrder" : "...",
    "subMenuList" : [ { }, { } ]
  } ]
},
      "description" : "Menu Item class provide 4 details. First menuName, which basically contains\nthe Menu Display name. Second mapName, which basically contains the Menu\nidentity name, using to know the authorization of that page. Third context,\nwhich basically contains the url part. Fourth subMenuList, which basically\ncontains the list of the sub menu comes under it."
    }
    ,
    "json_MenuItemListNode" : {
      "type" : "object",
      "title" : "MenuItemListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "menuItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MenuItem"
}
            }
          }
        }
      ],
      "example" : {
  "menuItems" : [ {
    "menuName" : "...",
    "mapName" : "...",
    "context" : "...",
    "menuOrder" : "...",
    "subMenuList" : [ { }, { } ]
  }, {
    "menuName" : "...",
    "mapName" : "...",
    "context" : "...",
    "menuOrder" : "...",
    "subMenuList" : [ { }, { } ]
  } ]
},
      "description" : "After construction each menu items add into this list and send back as a\nresponse to client."
    }
    ,
    "json_MessageListNode" : {
      "type" : "object",
      "title" : "MessageListNode",
          "properties" : {
            "messages" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MessageNode_nodes"
}
            }
          },
      "example" : {
  "messages" : [ {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  }, {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_MessageNode" : {
      "type" : "object",
      "title" : "MessageNode",
          "properties" : {
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "message" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "success" : true,
  "message" : "..."
},
      "description" : ""
    }
    ,
    "json_MessageNode_nodes" : {
      "type" : "object",
      "title" : "MessageNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "message" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "string"
            },
            "driverName" : {
"description" : "",
"type" : "string"
            },
            "driverImage" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "message" : "...",
  "status" : "...",
  "driverName" : "...",
  "driverImage" : "..."
},
      "description" : "Holds the representation of FullName."
    }
    ,
    "json_MsgKeyAbstract" : {
      "type" : "object",
      "title" : "MsgKeyAbstract",
          "properties" : {
            "requiredNumArgs" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "requiredNumArgs" : 12345
},
      "description" : ""
    }
    ,
    "json_NameNode" : {
      "type" : "object",
      "title" : "NameNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "entityType" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "name" : "...",
  "entityType" : "..."
},
      "description" : "Holds the representation of FullName."
    }
    ,
    "json_NameNodeList" : {
      "type" : "object",
      "title" : "NameNodeList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "names" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_NameNode"
}
            }
          }
        }
      ],
      "example" : {
  "names" : [ {
    "dn" : "...",
    "name" : "...",
    "entityType" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "entityType" : "..."
  } ]
},
      "description" : "List of Full Name Node(s)."
    }
    ,
    "json_NavPagesRightsListNode" : {
      "type" : "object",
      "title" : "NavPagesRightsListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "navPageRights" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_JaxBMapNode"
}
            },
            "areaDefault" : {
"description" : "",
"type" : "string"
            },
            "areaDefaultDisplayName" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "navPageRights" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "areaDefault" : "...",
  "areaDefaultDisplayName" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_NcacFault" : {
      "type" : "object",
      "title" : "NcacFault",
          "properties" : {
            "Reason" : {
"description" : "",
"$ref" : "#/definitions/json_ReasonCode"
            },
            "Code" : {
"description" : "",
"$ref" : "#/definitions/json_FaultCode"
            }
          },
      "example" : {
  "Reason" : {
    "Text" : "..."
  },
  "Code" : {
    "Value" : "...",
    "Subcode" : {
      "Value" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_NewCookie" : {
      "type" : "object",
      "title" : "NewCookie",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_Cookie"
        },
        {
          "properties" : {
            "maxAge" : {
"description" : "",
"type" : "number"
            },
            "secure" : {
"description" : "",
"type" : "boolean"
            },
            "httpOnly" : {
"description" : "",
"type" : "boolean"
            },
            "comment" : {
"description" : "",
"type" : "string"
            },
            "expiry" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "maxAge" : 12345,
  "secure" : true,
  "httpOnly" : true,
  "comment" : "...",
  "expiry" : 12345,
  "domain" : "...",
  "path" : "...",
  "name" : "...",
  "value" : "...",
  "version" : 12345
},
      "description" : ""
    }
    ,
    "json_NotificationServiceNode" : {
      "type" : "object",
      "title" : "NotificationServiceNode",
          "properties" : {
            "totalCount" : {
"description" : "",
"type" : "number"
            },
            "newResourcesCount" : {
"description" : "",
"type" : "number"
            },
            "newRolesCount" : {
"description" : "",
"type" : "number"
            },
            "newTasksCount" : {
"description" : "",
"type" : "number"
            },
            "newHelpdeskTasksCount" : {
"description" : "",
"type" : "number"
            },
            "notificationsList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_NotificationsInfo"
}
            }
          },
      "example" : {
  "totalCount" : 12345,
  "newResourcesCount" : 12345,
  "newRolesCount" : 12345,
  "newTasksCount" : 12345,
  "newHelpdeskTasksCount" : 12345,
  "notificationsList" : [ {
    "type" : "...",
    "name" : "...",
    "action" : "...",
    "navigation" : "..."
  }, {
    "type" : "...",
    "name" : "...",
    "action" : "...",
    "navigation" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_NotificationsInfo" : {
      "type" : "object",
      "title" : "NotificationsInfo",
          "properties" : {
            "type" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "action" : {
"description" : "",
"type" : "string"
            },
            "navigation" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "type" : "...",
  "name" : "...",
  "action" : "...",
  "navigation" : "..."
},
      "description" : ""
    }
    ,
    "json_NrfException" : {
      "type" : "object",
      "title" : "NrfException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_LocalizedException"
        },
        {
        }
      ],
      "example" : {
  "message" : "...",
  "bundleId" : { },
  "localizedMessage" : "...",
  "locString" : {
    "bundleId" : { },
    "params" : [ { }, { } ],
    "key" : {
      "requiredNumArgs" : 12345
    },
    "args" : [ "...", "..." ]
  },
  "messageKey" : {
    "requiredNumArgs" : 12345
  },
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_OperationRespNode" : {
      "type" : "object",
      "title" : "OperationRespNode",
          "properties" : {
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "succeedNodes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode"
}
            },
            "failNodes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode"
}
            }
          },
      "example" : {
  "success" : true,
  "succeedNodes" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failNodes" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
},
      "description" : "JAXB representation of a response to a operation response.  Operations can include several actions."
    }
    ,
    "json_OperationResponseNode" : {
      "type" : "object",
      "title" : "OperationResponseNode",
          "properties" : {
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "succeeded" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode"
}
            },
            "failed" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode"
}
            }
          },
      "example" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
},
      "description" : "JAXB representation of a response to a operation response.  Operations can include several actions."
    }
    ,
    "json_OrgChartUserInfoNode" : {
      "type" : "object",
      "title" : "OrgChartUserInfoNode",
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "image" : {
"description" : "",
"type" : "string"
            },
            "attributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttrNode"
}
            },
            "directReportee" : {
"description" : "",
"type" : "string"
            },
            "fullName" : {
"description" : "",
"type" : "string"
            },
            "primaryAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttrNode"
}
            },
            "secondaryAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttrNode"
}
            },
            "totalNumberOfReportees" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "dn" : "...",
  "image" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  } ],
  "directReportee" : "...",
  "fullName" : "...",
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  } ],
  "secondaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  } ],
  "totalNumberOfReportees" : 12345
},
      "description" : ""
    }
    ,
    "json_OrganizationalChartInputNode" : {
      "type" : "object",
      "title" : "OrganizationalChartInputNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "primaryAttributes" : {
"description" : "",
"type" : "string"
            },
            "secondaryAttributes" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "primaryAttributes" : "...",
  "secondaryAttributes" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_OrganizationalChartListNode" : {
      "type" : "object",
      "title" : "OrganizationalChartListNode",
          "properties" : {
            "userQuickInfo" : {
"description" : "",
"$ref" : "#/definitions/json_OrgChartUserInfoNode"
            },
            "reportees" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OrgChartUserInfoNode"
}
            },
            "totalNumberOfReportees" : {
"description" : "",
"type" : "number"
            },
            "managers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OrgChartUserInfoNode"
}
            }
          },
      "example" : {
  "userQuickInfo" : {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  },
  "reportees" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ],
  "totalNumberOfReportees" : 12345,
  "managers" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ]
},
      "description" : ""
    }
    ,
    "json_OwnerNode" : {
      "type" : "object",
      "title" : "OwnerNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "name" : "...",
  "type" : "..."
},
      "description" : ""
    }
    ,
    "json_PCRSRequestNode" : {
      "type" : "object",
      "title" : "PCRSRequestNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "entitlements" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementNode"
}
            },
            "entitlementValues" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementValueNode"
}
            },
            "permissionInApp" : {
"description" : "",
"type" : "boolean"
            },
            "users" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserEntitlementInfoNode"
}
            },
            "isGrant" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ],
  "permissionInApp" : true,
  "users" : [ {
    "id" : "...",
    "name" : "...",
    "entitlementValue" : {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }
  }, {
    "id" : "...",
    "name" : "...",
    "entitlementValue" : {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }
  } ],
  "isGrant" : true
},
      "description" : "Holds the representation of PCRS Request."
    }
    ,
    "json_PackageNode" : {
      "type" : "object",
      "title" : "PackageNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "packageName" : {
"description" : "",
"type" : "string"
            },
            "packageDescription" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "packageName" : "...",
  "packageDescription" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_PackageResponseNode" : {
      "type" : "object",
      "title" : "PackageResponseNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "packages" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PackageNode"
}
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            },
            "total" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "packages" : [ {
    "packageName" : "...",
    "packageDescription" : "..."
  }, {
    "packageName" : "...",
    "packageDescription" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
},
      "description" : "JAXB node for a log configurations list. Details in the REST spec."
    }
    ,
    "json_PaginationParam" : {
      "type" : "object",
      "title" : "PaginationParam",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "orderBy" : {
"description" : "",
"type" : "string"
            },
            "startIndex" : {
"description" : "",
"type" : "number"
            },
            "sortBy" : {
"description" : "",
"type" : "string"
            },
            "pageSize" : {
"description" : "",
"type" : "number"
            },
            "values" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "orderBy" : "...",
  "startIndex" : 12345,
  "sortBy" : "...",
  "pageSize" : 12345,
  "values" : [ { }, { } ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_ParamNode" : {
      "type" : "object",
      "title" : "ParamNode",
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "key" : "...",
  "value" : "..."
},
      "description" : ""
    }
    ,
    "json_ParamNode_nodes" : {
      "type" : "object",
      "title" : "ParamNode",
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "key" : "...",
  "value" : "..."
},
      "description" : ""
    }
    ,
    "json_ParameterListNode" : {
      "type" : "object",
      "title" : "ParameterListNode",
          "properties" : {
            "properties" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParameterNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "properties" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "arraySize" : 12345
},
      "description" : "JAXB representation of a parameter node with key-value pair"
    }
    ,
    "json_ParameterNode" : {
      "type" : "object",
      "title" : "ParameterNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "value" : "..."
},
      "description" : "JAXB representation of a parameter node with key-value pair"
    }
    ,
    "json_PermissionApprovalActivityNode" : {
      "type" : "object",
      "title" : "PermissionApprovalActivityNode",
          "properties" : {
            "user" : {
"description" : "",
"type" : "string"
            },
            "activity_action" : {
"description" : "",
"type" : "string"
            },
            "actionTime" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "user" : "...",
  "activity_action" : "...",
  "actionTime" : 12345
},
      "description" : "JAXB representation of approval activity"
    }
    ,
    "json_PermissionApprovalNode" : {
      "type" : "object",
      "title" : "PermissionApprovalNode",
          "properties" : {
            "startTime" : {
"description" : "",
"type" : "number"
            },
            "endTime" : {
"description" : "",
"type" : "number"
            },
            "processId" : {
"description" : "",
"type" : "string"
            },
            "sodJustification" : {
"description" : "",
"type" : "string"
            },
            "activities" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionApprovalActivityNode"
}
            }
          },
      "example" : {
  "startTime" : 12345,
  "endTime" : 12345,
  "processId" : "...",
  "sodJustification" : "...",
  "activities" : [ {
    "user" : "...",
    "activity_action" : "...",
    "actionTime" : 12345
  }, {
    "user" : "...",
    "activity_action" : "...",
    "actionTime" : 12345
  } ]
},
      "description" : "JAXB representation of approval"
    }
    ,
    "json_PermissionApprovalReqFormNode" : {
      "type" : "object",
      "title" : "PermissionApprovalReqFormNode",
          "properties" : {
            "params" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionAssignmentParameterNode"
}
            }
          },
      "example" : {
  "params" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "displayValue" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "displayValue" : "...",
    "value" : "..."
  } ]
},
      "description" : "JAXB representation Permission Assignment parameters"
    }
    ,
    "json_PermissionAssignmentCauseNode" : {
      "type" : "object",
      "title" : "PermissionAssignmentCauseNode",
          "properties" : {
            "instanceId" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "subtype" : {
"description" : "",
"type" : "string"
            },
            "removable" : {
"description" : "",
"type" : "boolean"
            },
            "sources" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "sourcesDetails" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionAssignmentSourceDetails"
            },
            "requester" : {
"description" : "",
"type" : "string"
            },
            "requesterName" : {
"description" : "",
"type" : "string"
            },
            "reqDesc" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "string"
            },
            "requestDate" : {
"description" : "",
"type" : "number"
            },
            "effectiveDate" : {
"description" : "",
"type" : "number"
            },
            "expirationDate" : {
"description" : "",
"type" : "number"
            },
            "assignedTo" : {
"description" : "",
"type" : "string"
            },
            "confirmNo" : {
"description" : "",
"type" : "string"
            },
            "sodJustification" : {
"description" : "",
"type" : "string"
            },
            "approval" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionApprovalNode"
            },
            "entRef" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionAssignmentEntRefNode"
            },
            "reqForm" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionApprovalReqFormNode"
            },
            "groupContainerInfo" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionGroupOrContainerNode"
}
            }
          },
      "example" : {
  "instanceId" : "...",
  "type" : "...",
  "subtype" : "...",
  "removable" : true,
  "sources" : [ "...", "..." ],
  "sourcesDetails" : {
    "name" : "...",
    "dn" : "..."
  },
  "requester" : "...",
  "requesterName" : "...",
  "reqDesc" : "...",
  "status" : "...",
  "requestDate" : 12345,
  "effectiveDate" : 12345,
  "expirationDate" : 12345,
  "assignedTo" : "...",
  "confirmNo" : "...",
  "sodJustification" : "...",
  "approval" : {
    "startTime" : 12345,
    "endTime" : 12345,
    "processId" : "...",
    "sodJustification" : "...",
    "activities" : [ {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    }, {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    } ]
  },
  "entRef" : {
    "entName" : "...",
    "entDesc" : "...",
    "params" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "displayValue" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "displayValue" : "...",
      "value" : "..."
    } ]
  },
  "reqForm" : {
    "params" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "displayValue" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "displayValue" : "...",
      "value" : "..."
    } ]
  },
  "groupContainerInfo" : [ {
    "reqDesc" : "...",
    "requester" : "...",
    "groupDN" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    }
  }, {
    "reqDesc" : "...",
    "requester" : "...",
    "groupDN" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    }
  } ]
},
      "description" : "JAXB representation permission cause"
    }
    ,
    "json_PermissionAssignmentEntRefNode" : {
      "type" : "object",
      "title" : "PermissionAssignmentEntRefNode",
          "properties" : {
            "entName" : {
"description" : "",
"type" : "string"
            },
            "entDesc" : {
"description" : "",
"type" : "string"
            },
            "params" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionAssignmentParameterNode"
}
            }
          },
      "example" : {
  "entName" : "...",
  "entDesc" : "...",
  "params" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "displayValue" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "displayValue" : "...",
    "value" : "..."
  } ]
},
      "description" : "JAXB representation Permission Assignment Entitlement Ref"
    }
    ,
    "json_PermissionAssignmentListNode" : {
      "type" : "object",
      "title" : "PermissionAssignmentListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "total" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "token" : {
"description" : "",
"type" : "string"
            },
            "assignments" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionAssignmentNode"
}
            },
            "reason" : {
"description" : "",
"type" : "string"
            },
            "correlationId" : {
"description" : "",
"type" : "string"
            },
            "totalPermissionCount" : {
"description" : "",
"type" : "number"
            },
            "currentIndex" : {
"description" : "",
"type" : "number"
            },
            "endIndex" : {
"description" : "",
"type" : "number"
            },
            "isRemoveFromCart" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
},
      "description" : "List of permission assignments."
    }
    ,
    "json_PermissionAssignmentNode" : {
      "type" : "object",
      "title" : "PermissionAssignmentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "entityType" : {
"description" : "",
"type" : "string"
            },
            "link" : {
"description" : "",
"type" : "string"
            },
            "bulkRemovable" : {
"description" : "",
"type" : "boolean"
            },
            "categories" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CategoryNode_nodes"
}
            },
            "instanceId" : {
"description" : "",
"type" : "string"
            },
            "causes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionAssignmentCauseNode"
}
            },
            "reqDate" : {
"description" : "",
"type" : "number"
            },
            "initialRequestDescription" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionAssignmentCauseNode"
}
            },
            "assignmentType" : {
"description" : "",
"type" : "string"
            },
            "assignmentTo" : {
"description" : "",
"type" : "string"
            },
            "assignmentToList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CartItemAssignmentNode"
}
            },
            "requestedBy" : {
"description" : "",
"type" : "string"
            },
            "effectiveDate" : {
"description" : "",
"type" : "number"
            },
            "expiryDate" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "totalCount" : {
"description" : "",
"type" : "number"
            },
            "cause" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionAssignmentCauseNode"
            },
            "isDirectAssignment" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "entityType" : "...",
  "link" : "...",
  "bulkRemovable" : true,
  "categories" : [ {
    "categoryId" : "...",
    "categoryName" : "..."
  }, {
    "categoryId" : "...",
    "categoryName" : "..."
  } ],
  "instanceId" : "...",
  "causes" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  } ],
  "reqDate" : 12345,
  "initialRequestDescription" : "...",
  "status" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  } ],
  "assignmentType" : "...",
  "assignmentTo" : "...",
  "assignmentToList" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  } ],
  "requestedBy" : "...",
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "cause" : {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  },
  "isDirectAssignment" : true
},
      "description" : "JAXB representation of a permission assignments.  Permissions that can be assigned to users include roles and resources."
    }
    ,
    "json_PermissionAssignmentParameterNode" : {
      "type" : "object",
      "title" : "PermissionAssignmentParameterNode",
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "displayValue" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "key" : "...",
  "displayLabel" : "...",
  "displayValue" : "...",
  "value" : "..."
},
      "description" : "JAXB representation Permission Assignment parameters"
    }
    ,
    "json_PermissionAssignmentSourceDetails" : {
      "type" : "object",
      "title" : "PermissionAssignmentSourceDetails",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "dn" : "..."
},
      "description" : "Bean to have details of Permission Assignment Source Details"
    }
    ,
    "json_PermissionBeanNode" : {
      "type" : "object",
      "title" : "PermissionBeanNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "objType" : {
"description" : "",
"type" : "string"
            },
            "objClass" : {
"description" : "",
"type" : "string"
            },
            "authObjDN" : {
"description" : "",
"type" : "string"
            },
            "permission" : {
"description" : "",
"type" : "string"
            },
            "permissionDisplay" : {
"description" : "",
"type" : "string"
            },
            "resolvedAuthObjDN" : {
"description" : "",
"type" : "string"
            },
            "domainType" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "excluded" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "objType" : "...",
  "objClass" : "...",
  "authObjDN" : "...",
  "permission" : "...",
  "permissionDisplay" : "...",
  "resolvedAuthObjDN" : "...",
  "domainType" : "...",
  "name" : "...",
  "excluded" : true
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_PermissionCategoryListResponseNode" : {
      "type" : "object",
      "title" : "PermissionCategoryListResponseNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "categories" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionCategoryNode"
}
            },
            "token" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "token" : "..."
},
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "json_PermissionCategoryNode" : {
      "type" : "object",
      "title" : "PermissionCategoryNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "..."
},
      "description" : "Mapped JSON class for storing category information."
    }
    ,
    "json_PermissionChangeNode" : {
      "type" : "object",
      "title" : "PermissionChangeNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "operation" : {
"description" : "",
"type" : "string"
            },
            "permId" : {
"description" : "",
"type" : "string"
            },
            "permType" : {
"description" : "",
"type" : "string"
            },
            "eventId" : {
"description" : "",
"type" : "string"
            },
            "timestamp" : {
"description" : "",
"type" : "string"
            },
            "newPermId" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "operation" : "...",
  "permId" : "...",
  "permType" : "...",
  "eventId" : "...",
  "timestamp" : "...",
  "newPermId" : "..."
},
      "description" : "JAXB/Jersey node for permission index change.\nIn this version only REMOVE operation is supported."
    }
    ,
    "json_PermissionChangeOperationNode" : {
      "type" : "object",
      "title" : "PermissionChangeOperationNode",
          "properties" : {
            "permIndexChanges" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionChangeNode"
}
            }
          },
      "example" : {
  "permIndexChanges" : [ {
    "operation" : "...",
    "permId" : "...",
    "permType" : "...",
    "eventId" : "...",
    "timestamp" : "...",
    "newPermId" : "..."
  }, {
    "operation" : "...",
    "permId" : "...",
    "permType" : "...",
    "eventId" : "...",
    "timestamp" : "...",
    "newPermId" : "..."
  } ]
},
      "description" : "Request node for a list of permission index changes"
    }
    ,
    "json_PermissionGroupOrContainerNode" : {
      "type" : "object",
      "title" : "PermissionGroupOrContainerNode",
          "properties" : {
            "reqDesc" : {
"description" : "",
"type" : "string"
            },
            "requester" : {
"description" : "",
"type" : "string"
            },
            "groupDN" : {
"description" : "",
"type" : "string"
            },
            "approval" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionApprovalNode"
            }
          },
      "example" : {
  "reqDesc" : "...",
  "requester" : "...",
  "groupDN" : "...",
  "approval" : {
    "startTime" : 12345,
    "endTime" : 12345,
    "processId" : "...",
    "sodJustification" : "...",
    "activities" : [ {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    }, {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    } ]
  }
},
      "description" : "JAXB representation of approval"
    }
    ,
    "json_PermissionListNode" : {
      "type" : "object",
      "title" : "PermissionListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "permissions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionNode_nodes"
}
            },
            "assignedToDN" : {
"description" : "",
"type" : "string"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ "...", "..." ]
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "isExpirationRequired" : true,
    "expiresAfter" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ "...", "..." ]
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "isExpirationRequired" : true,
    "expiresAfter" : "..."
  } ],
  "assignedToDN" : "...",
  "arraySize" : 12345,
  "nextIndex" : 12345
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_PermissionListNode_nodes" : {
      "type" : "object",
      "title" : "PermissionListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "permissions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionNode"
}
            },
            "excludeRoles" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "excludeResources" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "excludeProvisioningRequests" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "teamDN" : {
"description" : "",
"type" : "string"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ "...", "..." ],
  "excludeResources" : [ "...", "..." ],
  "excludeProvisioningRequests" : [ "...", "..." ],
  "teamDN" : "...",
  "arraySize" : 12345,
  "nextIndex" : 12345
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_PermissionNode" : {
      "type" : "object",
      "title" : "PermissionNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "desc" : {
"description" : "",
"type" : "string"
            },
            "entityType" : {
"description" : "",
"type" : "string"
            },
            "bulkRequestable" : {
"description" : "",
"type" : "boolean"
            },
            "categories" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "link" : {
"description" : "",
"type" : "string"
            },
            "multiAssignable" : {
"description" : "",
"type" : "boolean"
            },
            "excluded" : {
"description" : "",
"type" : "boolean"
            },
            "permParams" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionParamNode"
}
            },
            "requestForm" : {
"description" : "",
"type" : "string"
            },
            "dataItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfDataItemNode_nodes"
}
            },
            "edition" : {
"description" : "",
"type" : "string"
            },
            "objClass" : {
"description" : "",
"type" : "string"
            },
            "permission" : {
"description" : "",
"type" : "string"
            },
            "teams" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "requestFormId" : {
"description" : "",
"type" : "string"
            },
            "isNewForm" : {
"description" : "",
"type" : "boolean"
            },
            "isExpirationRequired" : {
"description" : "",
"type" : "boolean"
            },
            "expiresAfter" : {
"description" : "",
"type" : "string"
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "dn" : "...",
  "name" : "...",
  "desc" : "...",
  "entityType" : "...",
  "bulkRequestable" : true,
  "categories" : [ "...", "..." ],
  "link" : "...",
  "multiAssignable" : true,
  "excluded" : true,
  "permParams" : [ {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  }, {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  } ],
  "requestForm" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "edition" : "...",
  "objClass" : "...",
  "permission" : "...",
  "teams" : [ "...", "..." ],
  "requestFormId" : "...",
  "isNewForm" : true,
  "isExpirationRequired" : true,
  "expiresAfter" : "...",
  "proxyUser" : "..."
},
      "description" : "JAXB node for information about a permission as returned from a Permission\nIndex search. See the REST spec for further details."
    }
    ,
    "json_PermissionNode_nodes" : {
      "type" : "object",
      "title" : "PermissionNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "desc" : {
"description" : "",
"type" : "string"
            },
            "entityType" : {
"description" : "",
"type" : "string"
            },
            "bulkRequestable" : {
"description" : "",
"type" : "boolean"
            },
            "categories" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "link" : {
"description" : "",
"type" : "string"
            },
            "multiAssignable" : {
"description" : "",
"type" : "boolean"
            },
            "permParams" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionParamNode_nodes"
}
            },
            "requestForm" : {
"description" : "",
"type" : "string"
            },
            "dataItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfDataItemNode"
}
            },
            "edition" : {
"description" : "",
"type" : "string"
            },
            "objClass" : {
"description" : "",
"type" : "string"
            },
            "permission" : {
"description" : "",
"type" : "string"
            },
            "isExpirationRequired" : {
"description" : "",
"type" : "boolean"
            },
            "expiresAfter" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "dn" : "...",
  "name" : "...",
  "desc" : "...",
  "entityType" : "...",
  "bulkRequestable" : true,
  "categories" : [ "...", "..." ],
  "link" : "...",
  "multiAssignable" : true,
  "permParams" : [ {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  }, {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  } ],
  "requestForm" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ "...", "..." ]
  } ],
  "edition" : "...",
  "objClass" : "...",
  "permission" : "...",
  "isExpirationRequired" : true,
  "expiresAfter" : "..."
},
      "description" : "JAXB node for information about a permission as returned from a Permission\nIndex search. See the REST spec for further details."
    }
    ,
    "json_PermissionParamNode_nodes" : {
      "type" : "object",
      "title" : "PermissionParamNode",
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "dataType" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            },
            "hidden" : {
"description" : "",
"type" : "boolean"
            },
            "static" : {
"description" : "",
"type" : "boolean"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "codemapKey" : {
"description" : "",
"type" : "string"
            },
            "valueLabel" : {
"description" : "",
"type" : "string"
            },
            "entitlementDn" : {
"description" : "",
"type" : "string"
            },
            "optionQueryUrl" : {
"description" : "",
"type" : "string"
            },
            "multivalue" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "key" : "...",
  "dataType" : "...",
  "value" : "...",
  "hidden" : true,
  "static" : true,
  "displayLabel" : "...",
  "codemapKey" : "...",
  "valueLabel" : "...",
  "entitlementDn" : "...",
  "optionQueryUrl" : "...",
  "multivalue" : true
},
      "description" : "Permission Parameter Node"
    }
    ,
    "json_PermissionParamNode" : {
      "type" : "object",
      "title" : "PermissionParamNode",
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "dataType" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            },
            "hidden" : {
"description" : "",
"type" : "boolean"
            },
            "static" : {
"description" : "",
"type" : "boolean"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "codemapKey" : {
"description" : "",
"type" : "string"
            },
            "valueLabel" : {
"description" : "",
"type" : "string"
            },
            "entitlementDn" : {
"description" : "",
"type" : "string"
            },
            "optionQueryUrl" : {
"description" : "",
"type" : "string"
            },
            "multivalue" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "key" : "...",
  "dataType" : "...",
  "value" : "...",
  "hidden" : true,
  "static" : true,
  "displayLabel" : "...",
  "codemapKey" : "...",
  "valueLabel" : "...",
  "entitlementDn" : "...",
  "optionQueryUrl" : "...",
  "multivalue" : true
},
      "description" : "Permission Parameter Node"
    }
    ,
    "json_PermissionReqNode" : {
      "type" : "object",
      "title" : "PermissionReqNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "entityType" : {
"description" : "",
"type" : "string"
            },
            "proxyFor" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "entityType" : "...",
  "proxyFor" : "..."
},
      "description" : "Requested permission node"
    }
    ,
    "json_PermissionRequestHistoryFilterNode" : {
      "type" : "object",
      "title" : "PermissionRequestHistoryFilterNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "requesters" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "recipientUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "recipientGroups" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "recipientContainers" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "reason" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "requesters" : [ "...", "..." ],
  "recipientUsers" : [ "...", "..." ],
  "recipientGroups" : [ "...", "..." ],
  "recipientContainers" : [ "...", "..." ],
  "reason" : "..."
},
      "description" : "JAXB representation of request history filter request. It is used to filter the results of permission request history"
    }
    ,
    "json_PermissionRequestHistoryListNode" : {
      "type" : "object",
      "title" : "PermissionRequestHistoryListNode",
          "properties" : {
            "totalSize" : {
"description" : "",
"type" : "number"
            },
            "total" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "requests" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionRequestHistoryNode"
}
            }
          },
      "example" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
},
      "description" : "List of permission request history"
    }
    ,
    "json_PermissionRequestHistoryNode" : {
      "type" : "object",
      "title" : "PermissionRequestHistoryNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "entityType" : {
"description" : "",
"type" : "string"
            },
            "requestState" : {
"description" : "",
"type" : "number"
            },
            "requestStatus" : {
"description" : "",
"type" : "string"
            },
            "processState" : {
"description" : "",
"type" : "number"
            },
            "requestOper" : {
"description" : "",
"type" : "number"
            },
            "requester" : {
"description" : "",
"type" : "string"
            },
            "recipient" : {
"description" : "",
"type" : "string"
            },
            "recipientName" : {
"description" : "",
"type" : "string"
            },
            "recipientType" : {
"description" : "",
"type" : "string"
            },
            "requestDate" : {
"description" : "",
"type" : "number"
            },
            "effectiveDate" : {
"description" : "",
"type" : "number"
            },
            "expirationDate" : {
"description" : "",
"type" : "number"
            },
            "confirmationNumber" : {
"description" : "",
"type" : "string"
            },
            "retractable" : {
"description" : "",
"type" : "boolean"
            },
            "comments" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfCommentNode"
}
            },
            "link" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "string"
            },
            "reason" : {
"description" : "",
"type" : "string"
            },
            "requesterName" : {
"description" : "",
"type" : "string"
            },
            "requesterType" : {
"description" : "",
"type" : "string"
            },
            "action" : {
"description" : "",
"type" : "string"
            },
            "proxyUserFullName" : {
"description" : "",
"type" : "string"
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "...",
  "entityType" : "...",
  "requestState" : 12345,
  "requestStatus" : "...",
  "processState" : 12345,
  "requestOper" : 12345,
  "requester" : "...",
  "recipient" : "...",
  "recipientName" : "...",
  "recipientType" : "...",
  "requestDate" : 12345,
  "effectiveDate" : 12345,
  "expirationDate" : 12345,
  "confirmationNumber" : "...",
  "retractable" : true,
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "link" : "...",
  "status" : "...",
  "reason" : "...",
  "requesterName" : "...",
  "requesterType" : "...",
  "action" : "...",
  "proxyUserFullName" : "...",
  "proxyUser" : "..."
},
      "description" : "JAXB/Jersey node for permission request history"
    }
    ,
    "json_PermissionsListNode" : {
      "type" : "object",
      "title" : "PermissionsListNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "permissionsList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionBeanNode"
}
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissionsList" : [ {
    "objType" : "...",
    "objClass" : "...",
    "authObjDN" : "...",
    "permission" : "...",
    "permissionDisplay" : "...",
    "resolvedAuthObjDN" : "...",
    "domainType" : "...",
    "name" : "...",
    "excluded" : true
  }, {
    "objType" : "...",
    "objClass" : "...",
    "authObjDN" : "...",
    "permission" : "...",
    "permissionDisplay" : "...",
    "resolvedAuthObjDN" : "...",
    "domainType" : "...",
    "name" : "...",
    "excluded" : true
  } ],
  "totalSize" : 12345
},
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "json_PermissionsSearchResponseNode" : {
      "type" : "object",
      "title" : "PermissionsSearchResponseNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "permissions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionNode"
}
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
},
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "json_PersonListNode" : {
      "type" : "object",
      "title" : "PersonListNode",
          "properties" : {
            "usersList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PersonNode"
}
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "hasMore" : {
"description" : "",
"type" : "boolean"
            },
            "totalCount" : {
"description" : "",
"type" : "number"
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "usersList" : [ {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  }, {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  } ],
  "nextIndex" : 12345,
  "hasMore" : true,
  "totalCount" : 12345,
  "totalSize" : 12345
},
      "description" : "List of user infos with count"
    }
    ,
    "json_PersonNode" : {
      "type" : "object",
      "title" : "PersonNode",
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "fullName" : {
"description" : "",
"type" : "string"
            },
            "image" : {
"description" : "",
"type" : "string"
            },
            "canHide" : {
"description" : "",
"type" : "boolean"
            },
            "imageAttr" : {
"description" : "",
"$ref" : "#/definitions/json_AttributeNode"
            },
            "primaryAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            },
            "secondaryAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            },
            "otherAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            },
            "groupMemberof" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "disabledLogin" : {
"description" : "",
"type" : "boolean"
            },
            "disabledLoginSupported" : {
"description" : "",
"type" : "boolean"
            },
            "helpdeskDetails" : {
"description" : "",
"$ref" : "#/definitions/json_HelpDeskClientNode"
            },
            "isHelpdeskUser" : {
"description" : "",
"type" : "boolean"
            },
            "teamManger" : {
"description" : "",
"type" : "boolean"
            },
            "hideProfilePhoto" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "dn" : "...",
  "fullName" : "...",
  "image" : "...",
  "canHide" : true,
  "imageAttr" : {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  },
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "secondaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "groupMemberof" : [ "...", "..." ],
  "disabledLogin" : true,
  "disabledLoginSupported" : true,
  "helpdeskDetails" : {
    "helpdeskName" : "...",
    "emailAddress" : "...",
    "contactNumber" : "..."
  },
  "isHelpdeskUser" : true,
  "teamManger" : true,
  "hideProfilePhoto" : true
},
      "description" : "Person node to transport UserData"
    }
    ,
    "json_PrdApprovalNode" : {
      "type" : "object",
      "title" : "PrdApprovalNode",
          "properties" : {
            "approvalFormDN" : {
"description" : "",
"type" : "string"
            },
            "approvalDataItem" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DataItemInputNode"
}
            },
            "approvalOrder" : {
"description" : "",
"type" : "number"
            },
            "approvers" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "approversType" : {
"description" : "",
"type" : "string"
            },
            "escalationAdressee" : {
"description" : "",
"type" : "string"
            },
            "escalationAdresseeType" : {
"description" : "",
"type" : "string"
            },
            "escalationTimeout" : {
"description" : "",
"type" : "string"
            },
            "timeOutAction" : {
"description" : "",
"type" : "string"
            },
            "approvalTimeout" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "approvalFormDN" : "...",
  "approvalDataItem" : [ {
    "type" : "...",
    "name" : "...",
    "source" : "...",
    "target" : "...",
    "controlType" : "...",
    "targetType" : "..."
  }, {
    "type" : "...",
    "name" : "...",
    "source" : "...",
    "target" : "...",
    "controlType" : "...",
    "targetType" : "..."
  } ],
  "approvalOrder" : 12345,
  "approvers" : [ "...", "..." ],
  "approversType" : "...",
  "escalationAdressee" : "...",
  "escalationAdresseeType" : "...",
  "escalationTimeout" : "...",
  "timeOutAction" : "...",
  "approvalTimeout" : "..."
},
      "description" : "Pojo for approval Node"
    }
    ,
    "json_PrdCreateDataNode" : {
      "type" : "object",
      "title" : "PrdCreateDataNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "value" : "..."
},
      "description" : "Data Node Input."
    }
    ,
    "json_PrdCreateNode" : {
      "type" : "object",
      "title" : "PrdCreateNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "template" : {
"description" : "",
"type" : "string"
            },
            "cn" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "string"
            },
            "permissionDN" : {
"description" : "",
"type" : "string"
            },
            "permissionType" : {
"description" : "",
"type" : "string"
            },
            "processType" : {
"description" : "",
"type" : "string"
            },
            "data" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PrdCreateDataNode"
}
            },
            "prdName" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PrdCreateDataNode"
}
            },
            "prdDescription" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PrdCreateDataNode"
}
            },
            "requestInfo" : {
"description" : "",
"$ref" : "#/definitions/json_PrdRequestNode"
            },
            "approvalType" : {
"description" : "",
"type" : "string"
            },
            "approveInfo" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PrdApprovalNode"
}
            },
            "wfData" : {
"description" : "",
"type" : "string"
            },
            "isLoggingRequired" : {
"description" : "",
"type" : "boolean"
            },
            "isNotificationRequired" : {
"description" : "",
"type" : "boolean"
            },
            "isCustomTemplate" : {
"description" : "",
"type" : "boolean"
            },
            "trustees" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "template" : "...",
  "cn" : "...",
  "status" : "...",
  "permissionDN" : "...",
  "permissionType" : "...",
  "processType" : "...",
  "data" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "prdName" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "prdDescription" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "requestInfo" : {
    "requesterFormDN" : "...",
    "requestDataItem" : [ {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    }, {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    } ]
  },
  "approvalType" : "...",
  "approveInfo" : [ {
    "approvalFormDN" : "...",
    "approvalDataItem" : [ {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    }, {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    } ],
    "approvalOrder" : 12345,
    "approvers" : [ "...", "..." ],
    "approversType" : "...",
    "escalationAdressee" : "...",
    "escalationAdresseeType" : "...",
    "escalationTimeout" : "...",
    "timeOutAction" : "...",
    "approvalTimeout" : "..."
  }, {
    "approvalFormDN" : "...",
    "approvalDataItem" : [ {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    }, {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    } ],
    "approvalOrder" : 12345,
    "approvers" : [ "...", "..." ],
    "approversType" : "...",
    "escalationAdressee" : "...",
    "escalationAdresseeType" : "...",
    "escalationTimeout" : "...",
    "timeOutAction" : "...",
    "approvalTimeout" : "..."
  } ],
  "wfData" : "...",
  "isLoggingRequired" : true,
  "isNotificationRequired" : true,
  "isCustomTemplate" : true,
  "trustees" : [ "...", "..." ]
},
      "description" : "Workflow Creation Node."
    }
    ,
    "json_PrdRequestNode" : {
      "type" : "object",
      "title" : "PrdRequestNode",
          "properties" : {
            "requesterFormDN" : {
"description" : "",
"type" : "string"
            },
            "requestDataItem" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DataItemInputNode"
}
            }
          },
      "example" : {
  "requesterFormDN" : "...",
  "requestDataItem" : [ {
    "type" : "...",
    "name" : "...",
    "source" : "...",
    "target" : "...",
    "controlType" : "...",
    "targetType" : "..."
  }, {
    "type" : "...",
    "name" : "...",
    "source" : "...",
    "target" : "...",
    "controlType" : "...",
    "targetType" : "..."
  } ]
},
      "description" : "Pojo for Request Info"
    }
    ,
    "json_PreferencesNode" : {
      "type" : "object",
      "title" : "PreferencesNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "isPreferenceAvailable" : {
"description" : "",
"type" : "boolean"
            },
            "columns" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "settingFor" : {
"description" : "",
"type" : "string"
            },
            "openFormInPopUp" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ],
  "settingFor" : "...",
  "openFormInPopUp" : true
},
      "description" : "Used for task/request settings"
    }
    ,
    "json_PrincipalListNode" : {
      "type" : "object",
      "title" : "PrincipalListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "principals" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "principals" : [ "...", "..." ]
},
      "description" : "PrincipalsListNode for specifying all principals in the REST api."
    }
    ,
    "json_ProcessInfoRespNode" : {
      "type" : "object",
      "title" : "ProcessInfoRespNode",
          "properties" : {
            "requestId" : {
"description" : "Member variables",
"type" : "string"
            },
            "processId" : {
"description" : "",
"type" : "string"
            },
            "version" : {
"description" : "",
"type" : "string"
            },
            "creationTime" : {
"description" : "",
"type" : "number"
            },
            "creationStartTime" : {
"description" : "",
"type" : "number"
            },
            "creationStartTimeOperator" : {
"description" : "",
"type" : "string"
            },
            "creationEndTime" : {
"description" : "",
"type" : "number"
            },
            "creationEndTimeOperator" : {
"description" : "",
"type" : "string"
            },
            "recipient" : {
"description" : "",
"type" : "string"
            },
            "initiator" : {
"description" : "",
"type" : "string"
            },
            "recipientName" : {
"description" : "",
"type" : "string"
            },
            "initiatorName" : {
"description" : "",
"type" : "string"
            },
            "proxy" : {
"description" : "",
"type" : "string"
            },
            "restrictView" : {
"description" : "",
"type" : "number"
            },
            "processStatus" : {
"description" : "",
"type" : "number"
            },
            "approvalStatus" : {
"description" : "",
"type" : "number"
            },
            "completionTime" : {
"description" : "",
"type" : "number"
            },
            "resourceType" : {
"description" : "",
"type" : "string"
            },
            "correlationId" : {
"description" : "",
"type" : "string"
            },
            "comments" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfCommentNode"
}
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "engineId" : {
"description" : "",
"type" : "string"
            },
            "creationTimeOperator" : {
"description" : "",
"type" : "string"
            },
            "completionTimeOperator" : {
"description" : "",
"type" : "string"
            },
            "choices" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "number"
}
            },
            "processXml" : {
"description" : "",
"type" : "string"
            },
            "workCompletionTime" : {
"description" : "",
"type" : "number"
            },
            "workTaskId" : {
"description" : "",
"type" : "string"
            },
            "addressee" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "activityId" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "number"
            },
            "owner" : {
"description" : "",
"type" : "string"
            },
            "priority" : {
"description" : "",
"type" : "number"
            },
            "expTime" : {
"description" : "",
"type" : "number"
            },
            "expTimeOperator" : {
"description" : "",
"type" : "number"
            },
            "order" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "workCompletionTimeOperator" : {
"description" : "",
"type" : "number"
            },
            "workCreationTimeOperator" : {
"description" : "",
"type" : "number"
            },
            "maxRecords" : {
"description" : "",
"type" : "number"
            },
            "logicOperator" : {
"description" : "",
"type" : "string"
            },
            "approvalStatusDisplayName" : {
"description" : "",
"type" : "string"
            },
            "processStatusDisplayName" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "requestId" : "...",
  "processId" : "...",
  "version" : "...",
  "creationTime" : 12345,
  "creationStartTime" : 12345,
  "creationStartTimeOperator" : "...",
  "creationEndTime" : 12345,
  "creationEndTimeOperator" : "...",
  "recipient" : "...",
  "initiator" : "...",
  "recipientName" : "...",
  "initiatorName" : "...",
  "proxy" : "...",
  "restrictView" : 12345,
  "processStatus" : 12345,
  "approvalStatus" : 12345,
  "completionTime" : 12345,
  "resourceType" : "...",
  "correlationId" : "...",
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "name" : "...",
  "engineId" : "...",
  "creationTimeOperator" : "...",
  "completionTimeOperator" : "...",
  "choices" : [ 12345, 12345 ],
  "processXml" : "...",
  "workCompletionTime" : 12345,
  "workTaskId" : "...",
  "addressee" : [ "...", "..." ],
  "activityId" : "...",
  "status" : 12345,
  "owner" : "...",
  "priority" : 12345,
  "expTime" : 12345,
  "expTimeOperator" : 12345,
  "order" : [ "...", "..." ],
  "workCompletionTimeOperator" : 12345,
  "workCreationTimeOperator" : 12345,
  "maxRecords" : 12345,
  "logicOperator" : "...",
  "approvalStatusDisplayName" : "...",
  "processStatusDisplayName" : "..."
},
      "description" : "ProcessImpl Node for tracking History Information"
    }
    ,
    "json_ProcessNode" : {
      "type" : "object",
      "title" : "ProcessNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "correlationId" : {
"description" : "",
"type" : "string"
            },
            "isSoDoverrideRequested" : {
"description" : "",
"type" : "boolean"
            },
            "processId" : {
"description" : "",
"type" : "string"
            },
            "activityId" : {
"description" : "",
"type" : "string"
            },
            "requestAction" : {
"description" : "",
"type" : "string"
            },
            "initiator" : {
"description" : "",
"type" : "string"
            },
            "requestId" : {
"description" : "",
"type" : "string"
            },
            "sods" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "guid" : {
"description" : "",
"type" : "string"
            },
            "dataItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DataItemNode"
}
            },
            "sodOverride" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "correlationId" : "...",
  "isSoDoverrideRequested" : true,
  "processId" : "...",
  "activityId" : "...",
  "requestAction" : "...",
  "initiator" : "...",
  "requestId" : "...",
  "sods" : [ "...", "..." ],
  "guid" : "...",
  "dataItems" : [ {
    "name" : "...",
    "value" : [ "...", "..." ]
  }, {
    "name" : "...",
    "value" : [ "...", "..." ]
  } ],
  "sodOverride" : [ "...", "..." ]
},
      "description" : "Workflow Process Node"
    }
    ,
    "json_ProcessRespNode" : {
      "type" : "object",
      "title" : "ProcessRespNode",
          "properties" : {
            "processInfoNodeList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProcessInfoRespNode"
}
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "processInfoNodeList" : [ {
    "requestId" : "...",
    "processId" : "...",
    "version" : "...",
    "creationTime" : 12345,
    "creationStartTime" : 12345,
    "creationStartTimeOperator" : "...",
    "creationEndTime" : 12345,
    "creationEndTimeOperator" : "...",
    "recipient" : "...",
    "initiator" : "...",
    "recipientName" : "...",
    "initiatorName" : "...",
    "proxy" : "...",
    "restrictView" : 12345,
    "processStatus" : 12345,
    "approvalStatus" : 12345,
    "completionTime" : 12345,
    "resourceType" : "...",
    "correlationId" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "name" : "...",
    "engineId" : "...",
    "creationTimeOperator" : "...",
    "completionTimeOperator" : "...",
    "choices" : [ 12345, 12345 ],
    "processXml" : "...",
    "workCompletionTime" : 12345,
    "workTaskId" : "...",
    "addressee" : [ "...", "..." ],
    "activityId" : "...",
    "status" : 12345,
    "owner" : "...",
    "priority" : 12345,
    "expTime" : 12345,
    "expTimeOperator" : 12345,
    "order" : [ "...", "..." ],
    "workCompletionTimeOperator" : 12345,
    "workCreationTimeOperator" : 12345,
    "maxRecords" : 12345,
    "logicOperator" : "...",
    "approvalStatusDisplayName" : "...",
    "processStatusDisplayName" : "..."
  }, {
    "requestId" : "...",
    "processId" : "...",
    "version" : "...",
    "creationTime" : 12345,
    "creationStartTime" : 12345,
    "creationStartTimeOperator" : "...",
    "creationEndTime" : 12345,
    "creationEndTimeOperator" : "...",
    "recipient" : "...",
    "initiator" : "...",
    "recipientName" : "...",
    "initiatorName" : "...",
    "proxy" : "...",
    "restrictView" : 12345,
    "processStatus" : 12345,
    "approvalStatus" : 12345,
    "completionTime" : 12345,
    "resourceType" : "...",
    "correlationId" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "name" : "...",
    "engineId" : "...",
    "creationTimeOperator" : "...",
    "completionTimeOperator" : "...",
    "choices" : [ 12345, 12345 ],
    "processXml" : "...",
    "workCompletionTime" : 12345,
    "workTaskId" : "...",
    "addressee" : [ "...", "..." ],
    "activityId" : "...",
    "status" : 12345,
    "owner" : "...",
    "priority" : 12345,
    "expTime" : 12345,
    "expTimeOperator" : 12345,
    "order" : [ "...", "..." ],
    "workCompletionTimeOperator" : 12345,
    "workCreationTimeOperator" : 12345,
    "maxRecords" : 12345,
    "logicOperator" : "...",
    "approvalStatusDisplayName" : "...",
    "processStatusDisplayName" : "..."
  } ],
  "totalSize" : 12345
},
      "description" : "JAXB representation of a response to a operation response.  Operations can include several actions."
    }
    ,
    "json_ProcessesDetailNode" : {
      "type" : "object",
      "title" : "ProcessesDetailNode",
          "properties" : {
            "processId" : {
"description" : "",
"type" : "string"
            },
            "Initiator" : {
"description" : "",
"$ref" : "#/definitions/json_UserInfoResponseNode"
            },
            "Recipient" : {
"description" : "",
"$ref" : "#/definitions/json_UserInfoResponseNode"
            },
            "Definition" : {
"description" : "",
"$ref" : "#/definitions/json_UserInfoResponseNode"
            },
            "processStatus" : {
"description" : "",
"type" : "string"
            },
            "requestId" : {
"description" : "",
"type" : "string"
            },
            "approvalStatus" : {
"description" : "",
"type" : "string"
            },
            "creationTime" : {
"description" : "",
"type" : "number"
            },
            "correlationId" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "comments" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfCommentNode"
}
            },
            "processXml" : {
"description" : "",
"type" : "string"
            },
            "version" : {
"description" : "",
"type" : "string"
            },
            "engineId" : {
"description" : "",
"type" : "string"
            },
            "proxy" : {
"description" : "",
"type" : "string"
            },
            "completionTime" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "processId" : "...",
  "Initiator" : {
    "DN" : "...",
    "value" : "..."
  },
  "Recipient" : {
    "DN" : "...",
    "value" : "..."
  },
  "Definition" : {
    "DN" : "...",
    "value" : "..."
  },
  "processStatus" : "...",
  "requestId" : "...",
  "approvalStatus" : "...",
  "creationTime" : 12345,
  "correlationId" : "...",
  "name" : "...",
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "processXml" : "...",
  "version" : "...",
  "engineId" : "...",
  "proxy" : "...",
  "completionTime" : 12345
},
      "description" : ""
    }
    ,
    "json_ProcessesInfoResponseNode" : {
      "type" : "object",
      "title" : "ProcessesInfoResponseNode",
          "properties" : {
            "processes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProcessesDetailNode"
}
            }
          },
      "example" : {
  "processes" : [ {
    "processId" : "...",
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Definition" : {
      "DN" : "...",
      "value" : "..."
    },
    "processStatus" : "...",
    "requestId" : "...",
    "approvalStatus" : "...",
    "creationTime" : 12345,
    "correlationId" : "...",
    "name" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "processXml" : "...",
    "version" : "...",
    "engineId" : "...",
    "proxy" : "...",
    "completionTime" : 12345
  }, {
    "processId" : "...",
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Definition" : {
      "DN" : "...",
      "value" : "..."
    },
    "processStatus" : "...",
    "requestId" : "...",
    "approvalStatus" : "...",
    "creationTime" : 12345,
    "correlationId" : "...",
    "name" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "processXml" : "...",
    "version" : "...",
    "engineId" : "...",
    "proxy" : "...",
    "completionTime" : 12345
  } ]
},
      "description" : ""
    }
    ,
    "json_ProvisioningRequestNode" : {
      "type" : "object",
      "title" : "ProvisioningRequestNode",
          "properties" : {
            "prdCN" : {
"description" : "",
"type" : "string"
            },
            "prdName" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PrdCreateDataNode"
}
            },
            "prdDescription" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PrdCreateDataNode"
}
            },
            "prdCategory" : {
"description" : "",
"type" : "string"
            },
            "operation" : {
"description" : "",
"type" : "string"
            },
            "prdStatus" : {
"description" : "",
"type" : "string"
            },
            "processFlowXML" : {
"description" : "",
"type" : "string"
            },
            "requestXML" : {
"description" : "",
"type" : "string"
            },
            "processType" : {
"description" : "",
"type" : "string"
            },
            "flowStrategy" : {
"description" : "",
"type" : "string"
            },
            "wfData" : {
"description" : "",
"type" : "string"
            },
            "xmlData" : {
"description" : "",
"type" : "string"
            },
            "trustees" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "prdCN" : "...",
  "prdName" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "prdDescription" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "prdCategory" : "...",
  "operation" : "...",
  "prdStatus" : "...",
  "processFlowXML" : "...",
  "requestXML" : "...",
  "processType" : "...",
  "flowStrategy" : "...",
  "wfData" : "...",
  "xmlData" : "...",
  "trustees" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_ProvisioningStatus" : {
      "type" : "object",
      "title" : "ProvisioningStatus",
          "properties" : {
            "recipient" : {
"description" : "",
"type" : "string"
            },
            "activityId" : {
"description" : "",
"type" : "string"
            },
            "state" : {
"description" : "",
"type" : "number"
            },
            "correlationId" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "number"
            },
            "provisioningTime" : {
"description" : "",
"type" : "number"
            },
            "resultTime" : {
"description" : "",
"type" : "number"
            },
            "versionNo" : {
"description" : "",
"type" : "number"
            },
            "message" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"$ref" : "#/definitions/json_ProvisioningStatusId"
            },
            "statusId" : {
"description" : "",
"type" : "string"
            },
            "requestId" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "recipient" : "...",
  "activityId" : "...",
  "state" : 12345,
  "correlationId" : "...",
  "status" : 12345,
  "provisioningTime" : 12345,
  "resultTime" : 12345,
  "versionNo" : 12345,
  "message" : "...",
  "id" : {
    "requestId" : "...",
    "activityId" : "...",
    "statusId" : "..."
  },
  "statusId" : "...",
  "requestId" : "..."
},
      "description" : ""
    }
    ,
    "json_ProvisioningStatusId" : {
      "type" : "object",
      "title" : "ProvisioningStatusId",
          "properties" : {
            "requestId" : {
"description" : "",
"type" : "string"
            },
            "activityId" : {
"description" : "",
"type" : "string"
            },
            "statusId" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "requestId" : "...",
  "activityId" : "...",
  "statusId" : "..."
},
      "description" : ""
    }
    ,
    "json_ProvisioningStatusListNode" : {
      "type" : "object",
      "title" : "ProvisioningStatusListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "provisioningStatusList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProvisioningStatus"
}
            }
          }
        }
      ],
      "example" : {
  "provisioningStatusList" : [ {
    "recipient" : "...",
    "activityId" : "...",
    "state" : 12345,
    "correlationId" : "...",
    "status" : 12345,
    "provisioningTime" : 12345,
    "resultTime" : 12345,
    "versionNo" : 12345,
    "message" : "...",
    "id" : {
      "requestId" : "...",
      "activityId" : "...",
      "statusId" : "..."
    },
    "statusId" : "...",
    "requestId" : "..."
  }, {
    "recipient" : "...",
    "activityId" : "...",
    "state" : 12345,
    "correlationId" : "...",
    "status" : 12345,
    "provisioningTime" : 12345,
    "resultTime" : 12345,
    "versionNo" : 12345,
    "message" : "...",
    "id" : {
      "requestId" : "...",
      "activityId" : "...",
      "statusId" : "..."
    },
    "statusId" : "...",
    "requestId" : "..."
  } ]
},
      "description" : "Pojo for Provisioning status List."
    }
    ,
    "json_ProxyConfigNode" : {
      "type" : "object",
      "title" : "ProxyConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "proxyNotfTemplate" : {
"description" : "",
"type" : "string"
            },
            "proxyRetentionTime" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
},
      "description" : "JAXB representation of proxy Admin configuration."
    }
    ,
    "json_ProxyDefNode" : {
      "type" : "object",
      "title" : "ProxyDefNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "proxyForUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProxyFor"
}
            },
            "proxyForGroups" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProxyFor"
}
            },
            "proxyForContainers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProxyFor"
}
            },
            "assignedUserDN" : {
"description" : "",
"type" : "string"
            },
            "assignedUserName" : {
"description" : "",
"type" : "string"
            },
            "editable" : {
"description" : "",
"type" : "boolean"
            },
            "assignedUserteamList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TargetSetNode"
}
            },
            "isNotificationRequired" : {
"description" : "",
"type" : "boolean"
            },
            "notificationAddresseeType" : {
"description" : "",
"type" : "string"
            },
            "notifyUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "expirytime" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "proxyForUsers" : [ {
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "username" : "...",
    "dn" : "..."
  }, {
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "username" : "...",
    "dn" : "..."
  } ],
  "proxyForGroups" : [ {
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "username" : "...",
    "dn" : "..."
  }, {
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "username" : "...",
    "dn" : "..."
  } ],
  "proxyForContainers" : [ {
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "username" : "...",
    "dn" : "..."
  }, {
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "username" : "...",
    "dn" : "..."
  } ],
  "assignedUserDN" : "...",
  "assignedUserName" : "...",
  "editable" : true,
  "assignedUserteamList" : [ {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  }, {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  } ],
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ],
  "expirytime" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_ProxyDefinitionListNode" : {
      "type" : "object",
      "title" : "ProxyDefinitionListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "userType" : {
"description" : "",
"type" : "string"
            },
            "configureProxy" : {
"description" : "",
"type" : "boolean"
            },
            "proxyDefinitions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProxyDefNode"
}
            }
          }
        }
      ],
      "example" : {
  "userType" : "...",
  "configureProxy" : true,
  "proxyDefinitions" : [ {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  }, {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  } ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_ProxyDelSettingsNode" : {
      "type" : "object",
      "title" : "ProxyDelSettingsNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "cleanUpSeviceActivationInteval" : {
"description" : "",
"type" : "number"
            },
            "syncServiceActivationInterval" : {
"description" : "",
"type" : "number"
            },
            "lastCleanUpDate" : {
"description" : "",
"type" : "number"
            },
            "scheduledCleanUpDate" : {
"description" : "",
"type" : "number"
            },
            "cleanupChoice" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "cleanUpSeviceActivationInteval" : 12345,
  "syncServiceActivationInterval" : 12345,
  "lastCleanUpDate" : 12345,
  "scheduledCleanUpDate" : 12345,
  "cleanupChoice" : "..."
},
      "description" : "JAXB representation of proxy Admin configuration."
    }
    ,
    "json_ProxyFor" : {
      "type" : "object",
      "title" : "ProxyFor",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "targetSetList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TargetSetNode"
}
            },
            "username" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "targetSetList" : [ {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  }, {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  } ],
  "username" : "...",
  "dn" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_ProxyForListNode" : {
      "type" : "object",
      "title" : "ProxyForListNode",
          "properties" : {
            "proxyForUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PersonNode"
}
            },
            "nextUserIndex" : {
"description" : "",
"type" : "number"
            },
            "userArraySize" : {
"description" : "",
"type" : "number"
            },
            "proxyForCtrs" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ContainerNode"
}
            }
          },
      "example" : {
  "proxyForUsers" : [ {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  }, {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  } ],
  "nextUserIndex" : 12345,
  "userArraySize" : 12345,
  "proxyForCtrs" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ]
},
      "description" : "List of User Node(s)."
    }
    ,
    "json_QueryNode" : {
      "type" : "object",
      "title" : "QueryNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "parameters" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_QueryParameterNode"
}
            },
            "entityKey" : {
"description" : "",
"type" : "string"
            },
            "returnAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "displayLabel" : "...",
  "parameters" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "values" : [ "...", "..." ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "values" : [ "...", "..." ]
  } ],
  "entityKey" : "...",
  "returnAttributes" : [ "...", "..." ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_QueryParameterNode" : {
      "type" : "object",
      "title" : "QueryParameterNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
"description" : "",
"type" : "string"
            },
            "values" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "displayLabel" : "...",
  "values" : [ "...", "..." ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_QueryResponseNode" : {
      "type" : "object",
      "title" : "QueryResponseNode",
          "properties" : {
            "queries" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_QueryNode"
}
            },
            "total" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "queries" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "parameters" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    } ],
    "entityKey" : "...",
    "returnAttributes" : [ "...", "..." ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "parameters" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    } ],
    "entityKey" : "...",
    "returnAttributes" : [ "...", "..." ]
  } ],
  "total" : 12345
},
      "description" : "JAXB node for a log configurations list. Details in the REST spec."
    }
    ,
    "json_QuickInfoResponseNode" : {
      "type" : "object",
      "title" : "QuickInfoResponseNode",
          "properties" : {
            "entityType" : {
"description" : "",
"type" : "string"
            },
            "entityName" : {
"description" : "",
"type" : "string"
            },
            "details" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttrNode"
}
            }
          },
      "example" : {
  "entityType" : "...",
  "entityName" : "...",
  "details" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  } ]
},
      "description" : "Quick info response for an entity"
    }
    ,
    "json_ReasonCode" : {
      "type" : "object",
      "title" : "ReasonCode",
          "properties" : {
            "Text" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "Text" : "..."
},
      "description" : ""
    }
    ,
    "json_RecipientListNode" : {
      "type" : "object",
      "title" : "RecipientListNode",
          "properties" : {
            "recipients" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RecipientNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "currentIndex" : {
"description" : "",
"type" : "number"
            },
            "endIndex" : {
"description" : "",
"type" : "number"
            },
            "total" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
},
      "description" : "List of recipients"
    }
    ,
    "json_RecipientNode" : {
      "type" : "object",
      "title" : "RecipientNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "isGroupAssignment" : {
"description" : "",
"type" : "boolean"
            },
            "targetSetList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TargetSetNode"
}
            }
          },
      "example" : {
  "name" : "...",
  "dn" : "...",
  "type" : "...",
  "isGroupAssignment" : true,
  "targetSetList" : [ {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  }, {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  } ]
},
      "description" : "java bean populated targetset"
    }
    ,
    "json_RelationshipListNode" : {
      "type" : "object",
      "title" : "RelationshipListNode",
          "properties" : {
            "relationships" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RelationshipNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            },
            "total" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "relationships" : [ {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  }, {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
},
      "description" : "List of User Node(s)."
    }
    ,
    "json_RelationshipNode" : {
      "type" : "object",
      "title" : "RelationshipNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "displayName" : {
"description" : "",
"type" : "string"
            },
            "sourceEntityKey" : {
"description" : "",
"type" : "string"
            },
            "sourceAttributeKey" : {
"description" : "",
"type" : "string"
            },
            "targetEntityKey" : {
"description" : "",
"type" : "string"
            },
            "targetAttributeKey" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "key" : "...",
  "displayName" : "...",
  "sourceEntityKey" : "...",
  "sourceAttributeKey" : "...",
  "targetEntityKey" : "...",
  "targetAttributeKey" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_RequestCountNode" : {
      "type" : "object",
      "title" : "RequestCountNode",
          "properties" : {
            "requestPending" : {
"description" : "",
"type" : "number"
            },
            "requestDenied" : {
"description" : "",
"type" : "number"
            },
            "requestApproved" : {
"description" : "",
"type" : "number"
            },
            "totalRequest" : {
"description" : "",
"type" : "number"
            },
            "requestForOthersPending" : {
"description" : "",
"type" : "number"
            },
            "requestForOthersDenied" : {
"description" : "",
"type" : "number"
            },
            "requestForOthersApproved" : {
"description" : "",
"type" : "number"
            },
            "totalRequestForOthers" : {
"description" : "",
"type" : "number"
            },
            "requestHasMore" : {
"description" : "",
"type" : "boolean"
            },
            "otherRequestHasMore" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "requestPending" : 12345,
  "requestDenied" : 12345,
  "requestApproved" : 12345,
  "totalRequest" : 12345,
  "requestForOthersPending" : 12345,
  "requestForOthersDenied" : 12345,
  "requestForOthersApproved" : 12345,
  "totalRequestForOthers" : 12345,
  "requestHasMore" : true,
  "otherRequestHasMore" : true
},
      "description" : "Count node for permission requests based on status"
    }
    ,
    "json_RequestDefListNode" : {
      "type" : "object",
      "title" : "RequestDefListNode",
          "properties" : {
            "provisioningRequests" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RequestDefNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "provisioningRequests" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "arraySize" : 12345
},
      "description" : "List of User Node(s)."
    }
    ,
    "json_RequestDefNode" : {
      "type" : "object",
      "title" : "RequestDefNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "name" : "..."
},
      "description" : "Holds the representation of FullName."
    }
    ,
    "json_RequestDefsLookUpListNode" : {
      "type" : "object",
      "title" : "RequestDefsLookUpListNode",
          "properties" : {
            "requestDefs" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RequestDefsLookUpNode"
}
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "token" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "requestDefs" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "..."
  } ],
  "nextIndex" : 12345,
  "token" : "..."
},
      "description" : "List of Request Node(s)."
    }
    ,
    "json_RequestDefsLookUpNode" : {
      "type" : "object",
      "title" : "RequestDefsLookUpNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "name" : "...",
  "description" : "..."
},
      "description" : ""
    }
    ,
    "json_RequestFormPermissionsNode" : {
      "type" : "object",
      "title" : "RequestFormPermissionsNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "reqPermissions" : {
"description" : "Member variable declarion section",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionReqNode"
}
            },
            "data" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FormDataItemNode"
}
            },
            "recipients" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RecipientNode"
}
            }
          }
        }
      ],
      "example" : {
  "reqPermissions" : [ {
    "id" : "...",
    "entityType" : "...",
    "proxyFor" : "..."
  }, {
    "id" : "...",
    "entityType" : "...",
    "proxyFor" : "..."
  } ],
  "data" : [ {
    "key" : "...",
    "value" : [ { }, { } ]
  }, {
    "key" : "...",
    "value" : [ { }, { } ]
  } ],
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ]
},
      "description" : "This Object class is used to map the request data coming from the client.\nUsing for only new request forms."
    }
    ,
    "json_RequestNode" : {
      "type" : "object",
      "title" : "RequestNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "effDate" : {
"description" : "",
"type" : "number"
            },
            "expDate" : {
"description" : "",
"type" : "number"
            },
            "reason" : {
"description" : "",
"type" : "string"
            },
            "sodJustification" : {
"description" : "",
"type" : "string"
            },
            "reqPermissions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionReqNode"
}
            },
            "recipients" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RecipientNode"
}
            },
            "process" : {
"description" : "",
"$ref" : "#/definitions/json_ProcessNode"
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "effDate" : 12345,
  "expDate" : 12345,
  "reason" : "...",
  "sodJustification" : "...",
  "reqPermissions" : [ {
    "id" : "...",
    "entityType" : "...",
    "proxyFor" : "..."
  }, {
    "id" : "...",
    "entityType" : "...",
    "proxyFor" : "..."
  } ],
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "process" : {
    "correlationId" : "...",
    "isSoDoverrideRequested" : true,
    "processId" : "...",
    "activityId" : "...",
    "requestAction" : "...",
    "initiator" : "...",
    "requestId" : "...",
    "sods" : [ "...", "..." ],
    "guid" : "...",
    "dataItems" : [ {
      "name" : "...",
      "value" : [ "...", "..." ]
    }, {
      "name" : "...",
      "value" : [ "...", "..." ]
    } ],
    "sodOverride" : [ "...", "..." ]
  },
  "proxyUser" : "..."
},
      "description" : "Request Node"
    }
    ,
    "json_RequestOperationResponseListNode" : {
      "type" : "object",
      "title" : "RequestOperationResponseListNode",
          "properties" : {
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "OperationNodes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RequestOperationUserResponseNode"
}
            }
          },
      "example" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
},
      "description" : "List of response nodes with success indicator."
    }
    ,
    "json_RequestOperationUserResponseNode" : {
      "type" : "object",
      "title" : "RequestOperationUserResponseNode",
          "properties" : {
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "succeeded" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode"
}
            },
            "failed" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode"
}
            },
            "sods" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SodNode_nodes"
}
            },
            "userDn" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ],
  "userDn" : "..."
},
      "description" : "JAXB representation of a response to a operation response. Operations can\ninclude several actions."
    }
    ,
    "json_RequestSettingNode" : {
      "type" : "object",
      "title" : "RequestSettingNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "requestListSort" : {
"description" : "",
"type" : "string"
            },
            "requestListSortDesc" : {
"description" : "",
"type" : "boolean"
            },
            "defaultColumns" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParamNode_nodes"
}
            },
            "columnsForUserOverride" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParamNode_nodes"
}
            },
            "allColumns" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParamNode_nodes"
}
            },
            "requestListColumnsOverride" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "requestListSort" : "...",
  "requestListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "requestListColumnsOverride" : true
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_ResourceMappingRequestNode" : {
      "type" : "object",
      "title" : "ResourceMappingRequestNode",
          "properties" : {
            "roleId" : {
"description" : "",
"type" : "string"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "mappedResources" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResourceNode"
}
            }
          },
      "example" : {
  "roleId" : "...",
  "arraySize" : 12345,
  "mappedResources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ]
},
      "description" : "Holds the representation of Resource mapping request."
    }
    ,
    "json_ResourceNameListResponseNode" : {
      "type" : "object",
      "title" : "ResourceNameListResponseNode",
          "properties" : {
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "resources" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResourceNameNode"
}
            }
          },
      "example" : {
  "arraySize" : 12345,
  "resources" : [ {
    "name" : "...",
    "isNameExist" : true,
    "suggestedName" : "...",
    "resourceNames" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    } ]
  }, {
    "name" : "...",
    "isNameExist" : true,
    "suggestedName" : "...",
    "resourceNames" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    } ]
  } ]
},
      "description" : ""
    }
    ,
    "json_ResourceNameNode" : {
      "type" : "object",
      "title" : "ResourceNameNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "isNameExist" : {
"description" : "",
"type" : "boolean"
            },
            "suggestedName" : {
"description" : "",
"type" : "string"
            },
            "resourceNames" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResourceNode"
}
            }
          },
      "example" : {
  "name" : "...",
  "isNameExist" : true,
  "suggestedName" : "...",
  "resourceNames" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_ResourceNode" : {
      "type" : "object",
      "title" : "ResourceNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "driver" : {
"description" : "",
"type" : "string"
            },
            "categories" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CategoryNode"
}
            },
            "owners" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OwnerNode"
}
            },
            "subContainer" : {
"description" : "",
"type" : "string"
            },
            "approvalOverRide" : {
"description" : "",
"type" : "boolean"
            },
            "approvalRequired" : {
"description" : "",
"type" : "boolean"
            },
            "approvalIsStandard" : {
"description" : "",
"type" : "boolean"
            },
            "approvers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ApproverNode"
}
            },
            "requestDef" : {
"description" : "",
"type" : "string"
            },
            "requestDefName" : {
"description" : "",
"type" : "string"
            },
            "quorum" : {
"description" : "",
"type" : "string"
            },
            "revokeRequired" : {
"description" : "",
"type" : "boolean"
            },
            "revokeEqualsGrant" : {
"description" : "",
"type" : "boolean"
            },
            "revokeApprovalIsStandard" : {
"description" : "",
"type" : "boolean"
            },
            "revokeApprovers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ApproverNode"
}
            },
            "revokeRequestDef" : {
"description" : "",
"type" : "string"
            },
            "revokeRequestDefName" : {
"description" : "",
"type" : "string"
            },
            "revokeQuorum" : {
"description" : "",
"type" : "string"
            },
            "provisioningRequestDef" : {
"description" : "",
"type" : "string"
            },
            "mappingDescription" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "string"
            },
            "entitlements" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementNode"
}
            },
            "entitlementValues" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_EntitlementValueNode"
}
            },
            "resourceParameters" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResourceParamNode"
}
            },
            "isActive" : {
"description" : "",
"type" : "boolean"
            },
            "allowMultiple" : {
"description" : "",
"type" : "boolean"
            },
            "isExisted" : {
"description" : "",
"type" : "boolean"
            },
            "entityKey" : {
"description" : "",
"type" : "string"
            },
            "localizedNames" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LocalizedNameNode"
}
            },
            "localizedDescriptions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LocalizedDescNode"
}
            },
            "otherAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            },
            "otherModifiedAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeModifiedValueNode"
}
            },
            "managedBy" : {
"description" : "",
"type" : "number"
            },
            "expiresAfter" : {
"description" : "",
"type" : "string"
            },
            "isExpirationRequired" : {
"description" : "",
"type" : "boolean"
            },
            "resourceWeightage" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "driver" : "...",
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "subContainer" : "...",
  "approvalOverRide" : true,
  "approvalRequired" : true,
  "approvalIsStandard" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "requestDef" : "...",
  "requestDefName" : "...",
  "quorum" : "...",
  "revokeRequired" : true,
  "revokeEqualsGrant" : true,
  "revokeApprovalIsStandard" : true,
  "revokeApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "revokeRequestDef" : "...",
  "revokeRequestDefName" : "...",
  "revokeQuorum" : "...",
  "provisioningRequestDef" : "...",
  "mappingDescription" : "...",
  "status" : "...",
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ],
  "resourceParameters" : [ {
    "id" : "...",
    "multiValue" : true,
    "scope" : "...",
    "binding" : "...",
    "codeMapKey" : "...",
    "localizedDisplayValues" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "type" : "...",
    "displayValue" : "...",
    "entitlementDn" : "...",
    "staticValue" : "...",
    "value" : "...",
    "instance" : true,
    "hide" : true
  }, {
    "id" : "...",
    "multiValue" : true,
    "scope" : "...",
    "binding" : "...",
    "codeMapKey" : "...",
    "localizedDisplayValues" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "type" : "...",
    "displayValue" : "...",
    "entitlementDn" : "...",
    "staticValue" : "...",
    "value" : "...",
    "instance" : true,
    "hide" : true
  } ],
  "isActive" : true,
  "allowMultiple" : true,
  "isExisted" : true,
  "entityKey" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ],
  "managedBy" : 12345,
  "expiresAfter" : "...",
  "isExpirationRequired" : true,
  "resourceWeightage" : "..."
},
      "description" : "Holds the representation of Resource."
    }
    ,
    "json_ResourceParamNode" : {
      "type" : "object",
      "title" : "ResourceParamNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "multiValue" : {
"description" : "",
"type" : "boolean"
            },
            "scope" : {
"description" : "",
"type" : "string"
            },
            "binding" : {
"description" : "",
"type" : "string"
            },
            "codeMapKey" : {
"description" : "",
"type" : "string"
            },
            "localizedDisplayValues" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LocalizedNameNode"
}
            },
            "type" : {
"description" : "",
"type" : "string"
            },
            "displayValue" : {
"description" : "",
"type" : "string"
            },
            "entitlementDn" : {
"description" : "",
"type" : "string"
            },
            "staticValue" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            },
            "instance" : {
"description" : "",
"type" : "boolean"
            },
            "hide" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "id" : "...",
  "multiValue" : true,
  "scope" : "...",
  "binding" : "...",
  "codeMapKey" : "...",
  "localizedDisplayValues" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "type" : "...",
  "displayValue" : "...",
  "entitlementDn" : "...",
  "staticValue" : "...",
  "value" : "...",
  "instance" : true,
  "hide" : true
},
      "description" : ""
    }
    ,
    "json_ResourcesListResponseNode" : {
      "type" : "object",
      "title" : "ResourcesListResponseNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "resources" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResourceNode"
}
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            },
            "total" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
},
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "json_Response" : {
      "type" : "object",
      "title" : "Response",
          "properties" : {
            "location" : {
"description" : "",
"type" : "string"
            },
            "statusInfo" : {
"description" : "",
"$ref" : "#/definitions/json_StatusType"
            },
            "allowedMethods" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "length" : {
"description" : "",
"type" : "number"
            },
            "entity" : {
"description" : "",
"type" : "object"
            },
            "entityTag" : {
"description" : "",
"$ref" : "#/definitions/json_EntityTag"
            },
            "mediaType" : {
"description" : "",
"$ref" : "#/definitions/json_MediaType"
            },
            "cookies" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_NewCookie"
}
            },
            "language" : {
"description" : "",
"$ref" : "#/definitions/json_Locale"
            },
            "links" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Link"
}
            },
            "lastModified" : {
"description" : "",
"type" : "number"
            },
            "metadata" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "object"
}
}
            },
            "status" : {
"description" : "",
"type" : "number"
            },
            "headers" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "object"
}
}
            },
            "date" : {
"description" : "",
"type" : "number"
            },
            "stringHeaders" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "string"
}
}
            }
          },
      "example" : {
  "location" : "...",
  "statusInfo" : {
    "reasonPhrase" : "...",
    "statusCode" : 12345,
    "family" : "INFORMATIONAL"
  },
  "allowedMethods" : [ "...", "..." ],
  "length" : 12345,
  "entity" : { },
  "entityTag" : {
    "weak" : true,
    "value" : "..."
  },
  "mediaType" : {
    "wildcardType" : true,
    "type" : "...",
    "wildcardSubtype" : true,
    "parameters" : {
      "property1" : "...",
      "property2" : "..."
    },
    "subtype" : "..."
  },
  "cookies" : {
    "property1" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    },
    "property2" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    }
  },
  "language" : {
    "displayVariant" : "...",
    "country" : "...",
    "unicodeLocaleAttributes" : [ "...", "..." ],
    "displayScript" : "...",
    "extensionKeys" : [ "...", "..." ],
    "language" : "...",
    "displayName" : "...",
    "ISOCountries" : [ "...", "..." ],
    "ISO3Country" : "...",
    "displayLanguage" : "...",
    "ISO3Language" : "...",
    "displayCountry" : "...",
    "availableLocales" : [ { }, { } ],
    "ISOLanguages" : [ "...", "..." ],
    "unicodeLocaleKeys" : [ "...", "..." ],
    "default" : { },
    "variant" : "...",
    "script" : "..."
  },
  "links" : [ {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  }, {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  } ],
  "lastModified" : 12345,
  "metadata" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "status" : 12345,
  "headers" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "date" : 12345,
  "stringHeaders" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  }
},
      "description" : ""
    }
    ,
    "json_ResponseListNode" : {
      "type" : "object",
      "title" : "ResponseListNode",
          "properties" : {
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "succeeded" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode_nodes"
}
            },
            "failed" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode_nodes"
}
            }
          },
      "example" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ],
  "failed" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ]
},
      "description" : "List of response nodes with success indicator."
    }
    ,
    "json_ResponseListNode_nodes" : {
      "type" : "object",
      "title" : "ResponseListNode",
          "properties" : {
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "succeeded" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode"
}
            },
            "failed" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResponseNode"
}
            },
            "sods" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SodNode_nodes"
}
            }
          },
      "example" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
},
      "description" : "List of response nodes with success indicator."
    }
    ,
    "json_ResponseNode" : {
      "type" : "object",
      "title" : "ResponseNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "entityType" : {
"description" : "",
"type" : "string"
            },
            "reason" : {
"description" : "",
"type" : "string"
            },
            "instanceId" : {
"description" : "",
"type" : "string"
            },
            "requestId" : {
"description" : "",
"type" : "string"
            },
            "errCode" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            },
            "retry" : {
"description" : "",
"type" : "boolean"
            },
            "revokeFrom" : {
"description" : "",
"type" : "string"
            },
            "assignFromUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserNode"
}
            },
            "assignToUsers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserNode"
}
            }
          },
      "example" : {
  "id" : "...",
  "entityType" : "...",
  "reason" : "...",
  "instanceId" : "...",
  "requestId" : "...",
  "errCode" : "...",
  "name" : "...",
  "dn" : "...",
  "retry" : true,
  "revokeFrom" : "...",
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ]
},
      "description" : "JAXB representation of a singular action response"
    }
    ,
    "json_ResponseNode_nodes" : {
      "type" : "object",
      "title" : "ResponseNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "reason" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "name" : "...",
  "reason" : "..."
},
      "description" : "JAXB representation of a singular action response"
    }
    ,
    "json_RestAdminException" : {
      "type" : "object",
      "title" : "RestAdminException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_LocalizedException"
        },
        {
        }
      ],
      "example" : {
  "message" : "...",
  "bundleId" : { },
  "localizedMessage" : "...",
  "locString" : {
    "bundleId" : { },
    "params" : [ { }, { } ],
    "key" : {
      "requiredNumArgs" : 12345
    },
    "args" : [ "...", "..." ]
  },
  "messageKey" : {
    "requiredNumArgs" : 12345
  },
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ]
},
      "description" : "Exception class to be used to throw customized exception for rest admin\nmodule. The exception message must be localized in the user's locale."
    }
    ,
    "json_RestCatalogValidationException" : {
      "type" : "object",
      "title" : "RestCatalogValidationException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_Exception"
        },
        {
        }
      ],
      "example" : {
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "message" : "...",
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ],
  "localizedMessage" : "..."
},
      "description" : "Temporal exception for process validation errors in bulk requests.  This needs to be caught and processed in the REST service.\nThe exception message must be localized in the user's locale."
    }
    ,
    "json_RestServiceException" : {
      "type" : "object",
      "title" : "RestServiceException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_LocalizedException"
        },
        {
          "properties" : {
            "errorResponseSubcode" : {
"description" : "Return error response sub code.",
"$ref" : "#/definitions/json_ErrorResponseSubcode"
            }
          }
        }
      ],
      "example" : {
  "errorResponseSubcode" : "NOT_FOUND_DB",
  "message" : "...",
  "bundleId" : { },
  "localizedMessage" : "...",
  "locString" : {
    "bundleId" : { },
    "params" : [ { }, { } ],
    "key" : {
      "requiredNumArgs" : 12345
    },
    "args" : [ "...", "..." ]
  },
  "messageKey" : {
    "requiredNumArgs" : 12345
  },
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ]
},
      "description" : "Rest service Exception"
    }
    ,
    "json_RestValidationException" : {
      "type" : "object",
      "title" : "RestValidationException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_Exception"
        },
        {
        }
      ],
      "example" : {
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "message" : "...",
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ],
  "localizedMessage" : "..."
},
      "description" : "Temporal exception for process validation errors in bulk requests.  This needs to be caught and processed in the REST service.\nThe exception message must be localized in the user's locale."
    }
    ,
    "json_RevokeAssignmentListNode" : {
      "type" : "object",
      "title" : "RevokeAssignmentListNode",
          "properties" : {
            "revokeAssignments" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RevokeAssignmentNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "revokeAssignments" : [ {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  }, {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  } ],
  "arraySize" : 12345
},
      "description" : "Revoke assignment list node"
    }
    ,
    "json_RevokeAssignmentNode" : {
      "type" : "object",
      "title" : "RevokeAssignmentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "assignmentDomain" : {
"description" : "",
"type" : "string"
            },
            "identity" : {
"description" : "",
"type" : "string"
            },
            "isAllPermissions" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "assignmentDomain" : "...",
  "identity" : "...",
  "isAllPermissions" : true
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_RoleLevel" : {
      "type" : "object",
      "title" : "RoleLevel",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "level" : {
"description" : "",
"type" : "number"
            },
            "cn" : {
"description" : "",
"type" : "string"
            },
            "localizedNames" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LocalizedNameNode"
}
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "level" : 12345,
  "cn" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ]
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_RoleNode" : {
      "type" : "object",
      "title" : "RoleNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "requester" : {
"description" : "",
"type" : "string"
            },
            "approval" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionApprovalNode"
            },
            "categories" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CategoryNode"
}
            },
            "owners" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OwnerNode"
}
            },
            "approvalRequestDef" : {
"description" : "",
"type" : "string"
            },
            "approvalRequestDefName" : {
"description" : "",
"type" : "string"
            },
            "revokeRequestDef" : {
"description" : "",
"type" : "string"
            },
            "approvalApprovers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ApproverNode"
}
            },
            "approvalQuorum" : {
"description" : "",
"type" : "string"
            },
            "level" : {
"description" : "",
"type" : "number"
            },
            "roleLevel" : {
"description" : "",
"$ref" : "#/definitions/json_RoleLevel"
            },
            "subContainer" : {
"description" : "",
"type" : "string"
            },
            "approvalIsStandard" : {
"description" : "",
"type" : "boolean"
            },
            "approvalRequired" : {
"description" : "",
"type" : "boolean"
            },
            "revokeRequired" : {
"description" : "",
"type" : "boolean"
            },
            "requestDescription" : {
"description" : "",
"type" : "string"
            },
            "localizedNames" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LocalizedNameNode"
}
            },
            "localizedDescriptions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LocalizedDescNode"
}
            },
            "status" : {
"description" : "valid values are STATUS_CREATeED (50) or STATUS_DELETE_PENDING (15)",
"type" : "number"
            },
            "otherAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeNode"
}
            },
            "otherModifiedAttributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeModifiedValueNode"
}
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "requester" : "...",
  "approval" : {
    "startTime" : 12345,
    "endTime" : 12345,
    "processId" : "...",
    "sodJustification" : "...",
    "activities" : [ {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    }, {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    } ]
  },
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "revokeRequestDef" : "...",
  "approvalApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalQuorum" : "...",
  "level" : 12345,
  "roleLevel" : {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  },
  "subContainer" : "...",
  "approvalIsStandard" : true,
  "approvalRequired" : true,
  "revokeRequired" : true,
  "requestDescription" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "status" : 12345,
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ]
},
      "description" : "Holds the representation of Role."
    }
    ,
    "json_RoleResourceSettingsNode" : {
      "type" : "object",
      "title" : "RoleResourceSettingsNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "roleRequestContainer" : {
"description" : "",
"type" : "string"
            },
            "defaultRoleRequestDef" : {
"description" : "",
"type" : "string"
            },
            "roleAssignmentGracePeriod" : {
"description" : "",
"type" : "number"
            },
            "roleLevels" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RoleLevel"
}
            },
            "resourceContainer" : {
"description" : "",
"type" : "string"
            },
            "resourceRequestContainer" : {
"description" : "",
"type" : "string"
            },
            "defaultResourceGrantRequestDef" : {
"description" : "",
"type" : "string"
            },
            "defaultResourceRevokeRequestDef" : {
"description" : "",
"type" : "string"
            },
            "queryTimeout" : {
"description" : "",
"type" : "number"
            },
            "queryRefreshRate" : {
"description" : "",
"type" : "number"
            },
            "concatDisplayElements" : {
"description" : "",
"type" : "boolean"
            },
            "queryDisplayElements" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "sodContainer" : {
"description" : "",
"type" : "string"
            },
            "defaultSODRequestDef" : {
"description" : "",
"type" : "string"
            },
            "defaultSODRequestDefName" : {
"description" : "",
"type" : "string"
            },
            "sodQuorum" : {
"description" : "",
"type" : "string"
            },
            "sodApprovers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ApproverNode"
}
            },
            "reportContainer" : {
"description" : "",
"type" : "string"
            },
            "roleToRoleApproval" : {
"description" : "",
"type" : "boolean"
            },
            "roleToGroupApproval" : {
"description" : "",
"type" : "boolean"
            },
            "roleToContainerApproval" : {
"description" : "",
"type" : "boolean"
            },
            "roleContainer" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "roleRequestContainer" : "...",
  "defaultRoleRequestDef" : "...",
  "roleAssignmentGracePeriod" : 12345,
  "roleLevels" : [ {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  }, {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  } ],
  "resourceContainer" : "...",
  "resourceRequestContainer" : "...",
  "defaultResourceGrantRequestDef" : "...",
  "defaultResourceRevokeRequestDef" : "...",
  "queryTimeout" : 12345,
  "queryRefreshRate" : 12345,
  "concatDisplayElements" : true,
  "queryDisplayElements" : [ "...", "..." ],
  "sodContainer" : "...",
  "defaultSODRequestDef" : "...",
  "defaultSODRequestDefName" : "...",
  "sodQuorum" : "...",
  "sodApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "reportContainer" : "...",
  "roleToRoleApproval" : true,
  "roleToGroupApproval" : true,
  "roleToContainerApproval" : true,
  "roleContainer" : "..."
},
      "description" : "Holds the representation of roles and resources settings configuration"
    }
    ,
    "json_RolesListResponseNode" : {
      "type" : "object",
      "title" : "RolesListResponseNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "roles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RoleNode"
}
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            },
            "total" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
},
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "json_RuntimeException" : {
      "type" : "object",
      "title" : "RuntimeException",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_Exception"
        },
        {
        }
      ],
      "example" : {
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "message" : "...",
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ],
  "localizedMessage" : "..."
},
      "description" : ""
    }
    ,
    "json_SinglePermReqNode" : {
      "type" : "object",
      "title" : "SinglePermReqNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "entityType" : {
"description" : "",
"type" : "string"
            },
            "effDate" : {
"description" : "",
"type" : "number"
            },
            "expDate" : {
"description" : "",
"type" : "number"
            },
            "reason" : {
"description" : "",
"type" : "string"
            },
            "sodJustification" : {
"description" : "",
"type" : "string"
            },
            "permReqParams" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParameterNode"
}
            },
            "recipients" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RecipientNode"
}
            },
            "dataItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AfDataItemNode_nodes"
}
            },
            "isBulkApproval" : {
"description" : "",
"type" : "boolean"
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "entityType" : "...",
  "effDate" : 12345,
  "expDate" : 12345,
  "reason" : "...",
  "sodJustification" : "...",
  "permReqParams" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "isBulkApproval" : true,
  "proxyUser" : "..."
},
      "description" : "Request Node"
    }
    ,
    "json_SodApprovalTypeNode" : {
      "type" : "string",
      "title" : "SodApprovalTypeNode",
          "enum" : [
            "allowWithWorkflow",
            "alwaysAllow"
          ],
      "description" : "Sod Approval Type Node"
    }
    ,
    "json_SodGroupNode" : {
      "type" : "object",
      "title" : "SodGroupNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "name" : "..."
},
      "description" : ""
    }
    ,
    "json_SodListNode" : {
      "type" : "object",
      "title" : "SodListNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "sods" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SodNode_nodes"
}
            }
          },
      "example" : {
  "id" : "...",
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
},
      "description" : "List of response nodes with success indicator."
    }
    ,
    "json_SodNode" : {
      "type" : "object",
      "title" : "SodNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "roles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RoleNode"
}
            },
            "roleLevel" : {
"description" : "Role level of the SOD",
"type" : "string"
            },
            "sodApprovalType" : {
"description" : "",
"$ref" : "#/definitions/json_SodApprovalTypeNode"
            },
            "isDefaultApproversUsed" : {
"description" : "",
"type" : "boolean"
            },
            "approvers" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ApproverNode"
}
            },
            "approvalRequestDef" : {
"description" : "",
"type" : "string"
            },
            "approvalRequestDefName" : {
"description" : "",
"type" : "string"
            },
            "approvalQuorum" : {
"description" : "",
"type" : "string"
            },
            "hasConflicts" : {
"description" : "",
"type" : "boolean"
            },
            "localizedNames" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LocalizedNameNode"
}
            },
            "localizedDescriptions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LocalizedDescNode"
}
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "roleLevel" : "...",
  "sodApprovalType" : "alwaysAllow",
  "isDefaultApproversUsed" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "approvalQuorum" : "...",
  "hasConflicts" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ]
},
      "description" : "Holds the representation of SOD."
    }
    ,
    "json_SodNode_nodes" : {
      "type" : "object",
      "title" : "SodNode",
          "properties" : {
            "sodId" : {
"description" : "",
"type" : "string"
            },
            "sodName" : {
"description" : "",
"type" : "string"
            },
            "sodDescription" : {
"description" : "",
"type" : "string"
            },
            "perm1Name" : {
"description" : "",
"type" : "string"
            },
            "perm2Name" : {
"description" : "",
"type" : "string"
            },
            "userList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserNode"
}
            },
            "groupList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SodGroupNode"
}
            },
            "recipientdn" : {
"description" : "",
"type" : "string"
            },
            "recipientname" : {
"description" : "",
"type" : "string"
            },
            "inheritedRole" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "sodId" : "...",
  "sodName" : "...",
  "sodDescription" : "...",
  "perm1Name" : "...",
  "perm2Name" : "...",
  "userList" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "groupList" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "recipientdn" : "...",
  "recipientname" : "...",
  "inheritedRole" : "..."
},
      "description" : "Sod conflict java bean"
    }
    ,
    "json_SodViolationListNode" : {
      "type" : "object",
      "title" : "SodViolationListNode",
          "properties" : {
            "sodId" : {
"description" : "",
"type" : "string"
            },
            "sodViolations" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SodViolationNode"
}
            }
          },
      "example" : {
  "sodId" : "...",
  "sodViolations" : [ {
    "sodId" : "...",
    "type" : "..."
  }, {
    "sodId" : "...",
    "type" : "..."
  } ]
},
      "description" : "Sod violations for the given sod dn"
    }
    ,
    "json_SodViolationNode" : {
      "type" : "object",
      "title" : "SodViolationNode",
          "properties" : {
            "sodId" : {
"description" : "",
"type" : "string"
            },
            "type" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "sodId" : "...",
  "type" : "..."
},
      "description" : "Sod violation java bean"
    }
    ,
    "json_SodsListResponseNode" : {
      "type" : "object",
      "title" : "SodsListResponseNode",
          "properties" : {
            "sods" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SodNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "sods" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "roles" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    } ],
    "roleLevel" : "...",
    "sodApprovalType" : "alwaysAllow",
    "isDefaultApproversUsed" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "approvalQuorum" : "...",
    "hasConflicts" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "roles" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    } ],
    "roleLevel" : "...",
    "sodApprovalType" : "alwaysAllow",
    "isDefaultApproversUsed" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "approvalQuorum" : "...",
    "hasConflicts" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345
},
      "description" : ""
    }
    ,
    "json_StackTraceElement" : {
      "type" : "object",
      "title" : "StackTraceElement",
          "properties" : {
            "nativeMethod" : {
"description" : "",
"type" : "boolean"
            },
            "fileName" : {
"description" : "",
"type" : "string"
            },
            "lineNumber" : {
"description" : "",
"type" : "number"
            },
            "className" : {
"description" : "",
"type" : "string"
            },
            "methodName" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "nativeMethod" : true,
  "fileName" : "...",
  "lineNumber" : 12345,
  "className" : "...",
  "methodName" : "..."
},
      "description" : ""
    }
    ,
    "json_StatusType" : {
      "type" : "object",
      "title" : "StatusType",
          "properties" : {
            "reasonPhrase" : {
"description" : "",
"type" : "string"
            },
            "statusCode" : {
"description" : "",
"type" : "number"
            },
            "family" : {
"description" : "",
"$ref" : "#/definitions/json_Family"
            }
          },
      "example" : {
  "reasonPhrase" : "...",
  "statusCode" : 12345,
  "family" : "OTHER"
},
      "description" : ""
    }
    ,
    "json_SubRoleRequestNode" : {
      "type" : "object",
      "title" : "SubRoleRequestNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "requestDescription" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : "...",
  "requestDescription" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_SubRolesListRequestNode" : {
      "type" : "object",
      "title" : "SubRolesListRequestNode",
          "properties" : {
            "roleId" : {
"description" : "",
"type" : "string"
            },
            "subRoles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SubRoleRequestNode"
}
            },
            "parentRoles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SubRoleRequestNode"
}
            }
          },
      "example" : {
  "roleId" : "...",
  "subRoles" : [ {
    "id" : "...",
    "requestDescription" : "..."
  }, {
    "id" : "...",
    "requestDescription" : "..."
  } ],
  "parentRoles" : [ {
    "id" : "...",
    "requestDescription" : "..."
  }, {
    "id" : "...",
    "requestDescription" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_SupportedLocaleNode" : {
      "type" : "object",
      "title" : "SupportedLocaleNode",
          "properties" : {
            "locale" : {
"description" : "",
"type" : "string"
            },
            "localeDisplayName" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "locale" : "...",
  "localeDisplayName" : "..."
},
      "description" : ""
    }
    ,
    "json_SupportedLocalesListNode" : {
      "type" : "object",
      "title" : "SupportedLocalesListNode",
          "properties" : {
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "supportedLocales" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SupportedLocaleNode"
}
            }
          },
      "example" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "supportedLocales" : [ {
    "locale" : "...",
    "localeDisplayName" : "..."
  }, {
    "locale" : "...",
    "localeDisplayName" : "..."
  } ]
},
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "json_TargetGroupNode" : {
      "type" : "object",
      "title" : "TargetGroupNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "teamDn" : {
"description" : "",
"type" : "string"
            },
            "groupdDns" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "teamDn" : "...",
  "groupdDns" : [ "...", "..." ]
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_TargetSetListNode" : {
      "type" : "object",
      "title" : "TargetSetListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "teams" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TargetSetNode"
}
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "totalCount" : {
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "teams" : [ {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  }, {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  } ],
  "arraySize" : 12345,
  "totalCount" : 12345,
  "nextIndex" : 12345
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_TargetSetNode" : {
      "type" : "object",
      "title" : "TargetSetNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "dn" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "recipients" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RecipientNode"
}
            },
            "requestors" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RecipientNode"
}
            },
            "permissionList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionNode"
}
            },
            "excludeRoles" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionNode"
}
            },
            "excludeResources" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionNode"
}
            },
            "excludeProvisioningRequests" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PermissionNode"
}
            },
            "allUsers" : {
"description" : "",
"type" : "boolean"
            },
            "includeManager" : {
"description" : "",
"type" : "boolean"
            },
            "localizedNames" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeLocaleInfo"
}
            },
            "localizedDescriptions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttributeLocaleInfo"
}
            },
            "readOnly" : {
"description" : "",
"type" : "boolean"
            },
            "domainTypes" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
},
      "description" : "java bean populated targset"
    }
    ,
    "json_TargetSetPermissionReqNode" : {
      "type" : "object",
      "title" : "TargetSetPermissionReqNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "targetSetDnList" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "useExcludePermList" : {
"description" : "",
"type" : "boolean"
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "targetSetDnList" : [ "...", "..." ],
  "useExcludePermList" : true,
  "proxyUser" : "..."
},
      "description" : "Requested permission node"
    }
    ,
    "json_TaskSettingNode" : {
      "type" : "object",
      "title" : "TaskSettingNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "taskListSort" : {
"description" : "",
"type" : "string"
            },
            "taskListSortDesc" : {
"description" : "",
"type" : "boolean"
            },
            "defaultColumns" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParamNode_nodes"
}
            },
            "columnsForUserOverride" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParamNode_nodes"
}
            },
            "columnsForSort" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParamNode_nodes"
}
            },
            "allColumns" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ParamNode_nodes"
}
            },
            "taskListColumnsOverride" : {
"description" : "",
"type" : "boolean"
            },
            "taskDetailOpenOverride" : {
"description" : "",
"type" : "boolean"
            },
            "taskDetailClaim" : {
"description" : "",
"type" : "boolean"
            },
            "taskDetailClaimOverride" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "taskListSort" : "...",
  "taskListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForSort" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "taskListColumnsOverride" : true,
  "taskDetailOpenOverride" : true,
  "taskDetailClaim" : true,
  "taskDetailClaimOverride" : true
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_TaskSubmissionNode" : {
      "type" : "object",
      "title" : "TaskSubmissionNode",
          "properties" : {
            "afTaskNode" : {
"description" : "",
"$ref" : "#/definitions/json_AfTaskActionNode"
            },
            "primaryPrincipal" : {
"description" : "",
"type" : "string"
            },
            "comment" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "afTaskNode" : {
    "tasks" : [ {
      "taskId" : "...",
      "link" : "...",
      "processName" : "...",
      "processId" : "...",
      "activityName" : "...",
      "createTime" : 12345,
      "expirationTime" : 12345,
      "recipient" : "...",
      "recipientType" : "...",
      "recipientName" : "...",
      "initiator" : "...",
      "initiatorName" : "...",
      "comments" : [ { }, { } ],
      "bulkApprovable" : true,
      "approvalForm" : "...",
      "approvalFormId" : "...",
      "dataItems" : [ { }, { } ],
      "taskClaimed" : true,
      "addresseetype" : "...",
      "claimedby" : "...",
      "addresseeEntityType" : "...",
      "addressee" : "...",
      "assignedTo" : "...",
      "priority" : "...",
      "delegatedTask" : true,
      "proxyUser" : "...",
      "assignStatus" : "...",
      "returnAddressee" : "...",
      "confirmationNumber" : "...",
      "isNewForm" : true,
      "currentAddressee" : "..."
    }, {
      "taskId" : "...",
      "link" : "...",
      "processName" : "...",
      "processId" : "...",
      "activityName" : "...",
      "createTime" : 12345,
      "expirationTime" : 12345,
      "recipient" : "...",
      "recipientType" : "...",
      "recipientName" : "...",
      "initiator" : "...",
      "initiatorName" : "...",
      "comments" : [ { }, { } ],
      "bulkApprovable" : true,
      "approvalForm" : "...",
      "approvalFormId" : "...",
      "dataItems" : [ { }, { } ],
      "taskClaimed" : true,
      "addresseetype" : "...",
      "claimedby" : "...",
      "addresseeEntityType" : "...",
      "addressee" : "...",
      "assignedTo" : "...",
      "priority" : "...",
      "delegatedTask" : true,
      "proxyUser" : "...",
      "assignStatus" : "...",
      "returnAddressee" : "...",
      "confirmationNumber" : "...",
      "isNewForm" : true,
      "currentAddressee" : "..."
    } ],
    "approver" : "...",
    "action" : "...",
    "comment" : "...",
    "proxyUser" : "...",
    "success" : true,
    "succeeded" : [ {
      "taskId" : "...",
      "link" : "...",
      "processName" : "...",
      "processId" : "...",
      "activityName" : "...",
      "createTime" : 12345,
      "expirationTime" : 12345,
      "recipient" : "...",
      "recipientType" : "...",
      "recipientName" : "...",
      "initiator" : "...",
      "initiatorName" : "...",
      "comments" : [ { }, { } ],
      "bulkApprovable" : true,
      "approvalForm" : "...",
      "approvalFormId" : "...",
      "dataItems" : [ { }, { } ],
      "taskClaimed" : true,
      "addresseetype" : "...",
      "claimedby" : "...",
      "addresseeEntityType" : "...",
      "addressee" : "...",
      "assignedTo" : "...",
      "priority" : "...",
      "delegatedTask" : true,
      "proxyUser" : "...",
      "assignStatus" : "...",
      "returnAddressee" : "...",
      "confirmationNumber" : "...",
      "isNewForm" : true,
      "currentAddressee" : "..."
    }, {
      "taskId" : "...",
      "link" : "...",
      "processName" : "...",
      "processId" : "...",
      "activityName" : "...",
      "createTime" : 12345,
      "expirationTime" : 12345,
      "recipient" : "...",
      "recipientType" : "...",
      "recipientName" : "...",
      "initiator" : "...",
      "initiatorName" : "...",
      "comments" : [ { }, { } ],
      "bulkApprovable" : true,
      "approvalForm" : "...",
      "approvalFormId" : "...",
      "dataItems" : [ { }, { } ],
      "taskClaimed" : true,
      "addresseetype" : "...",
      "claimedby" : "...",
      "addresseeEntityType" : "...",
      "addressee" : "...",
      "assignedTo" : "...",
      "priority" : "...",
      "delegatedTask" : true,
      "proxyUser" : "...",
      "assignStatus" : "...",
      "returnAddressee" : "...",
      "confirmationNumber" : "...",
      "isNewForm" : true,
      "currentAddressee" : "..."
    } ],
    "failed" : [ {
      "taskId" : "...",
      "link" : "...",
      "processName" : "...",
      "processId" : "...",
      "activityName" : "...",
      "createTime" : 12345,
      "expirationTime" : 12345,
      "recipient" : "...",
      "recipientType" : "...",
      "recipientName" : "...",
      "initiator" : "...",
      "initiatorName" : "...",
      "comments" : [ { }, { } ],
      "bulkApprovable" : true,
      "approvalForm" : "...",
      "approvalFormId" : "...",
      "dataItems" : [ { }, { } ],
      "taskClaimed" : true,
      "addresseetype" : "...",
      "claimedby" : "...",
      "addresseeEntityType" : "...",
      "addressee" : "...",
      "assignedTo" : "...",
      "priority" : "...",
      "delegatedTask" : true,
      "proxyUser" : "...",
      "assignStatus" : "...",
      "returnAddressee" : "...",
      "confirmationNumber" : "...",
      "isNewForm" : true,
      "currentAddressee" : "..."
    }, {
      "taskId" : "...",
      "link" : "...",
      "processName" : "...",
      "processId" : "...",
      "activityName" : "...",
      "createTime" : 12345,
      "expirationTime" : 12345,
      "recipient" : "...",
      "recipientType" : "...",
      "recipientName" : "...",
      "initiator" : "...",
      "initiatorName" : "...",
      "comments" : [ { }, { } ],
      "bulkApprovable" : true,
      "approvalForm" : "...",
      "approvalFormId" : "...",
      "dataItems" : [ { }, { } ],
      "taskClaimed" : true,
      "addresseetype" : "...",
      "claimedby" : "...",
      "addresseeEntityType" : "...",
      "addressee" : "...",
      "assignedTo" : "...",
      "priority" : "...",
      "delegatedTask" : true,
      "proxyUser" : "...",
      "assignStatus" : "...",
      "returnAddressee" : "...",
      "confirmationNumber" : "...",
      "isNewForm" : true,
      "currentAddressee" : "..."
    } ],
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ]
  },
  "primaryPrincipal" : "...",
  "comment" : "..."
},
      "description" : ""
    }
    ,
    "json_TerminateInfoNode" : {
      "type" : "object",
      "title" : "TerminateInfoNode",
          "properties" : {
            "processes" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "comment" : {
"description" : "",
"type" : "string"
            },
            "primaryPrincipal" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "processes" : [ "...", "..." ],
  "comment" : "...",
  "primaryPrincipal" : "..."
},
      "description" : ""
    }
    ,
    "json_TerminateResponseNode" : {
      "type" : "object",
      "title" : "TerminateResponseNode",
          "properties" : {
            "failedProcesses" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "success" : {
"description" : "",
"type" : "boolean"
            },
            "message" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "failedProcesses" : [ "...", "..." ],
  "success" : true,
  "message" : "..."
},
      "description" : ""
    }
    ,
    "json_ThreadInfoNode" : {
      "type" : "object",
      "title" : "ThreadInfoNode",
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "state" : {
"description" : "",
"type" : "string"
            },
            "cpuTimeInMilliSec" : {
"description" : "",
"type" : "number"
            },
            "stackTrace" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "state" : "...",
  "cpuTimeInMilliSec" : 12345.0,
  "stackTrace" : "..."
},
      "description" : "Node class containing basic information about a thread"
    }
    ,
    "json_ThreadInfoResponseNode" : {
      "type" : "object",
      "title" : "ThreadInfoResponseNode",
          "properties" : {
            "topMostCPUConsumingThread" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ThreadInfoNode"
}
            },
            "threadStateCounts" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ThreadStateNode"
}
            }
          },
      "example" : {
  "topMostCPUConsumingThread" : [ {
    "name" : "...",
    "state" : "...",
    "cpuTimeInMilliSec" : 12345.0,
    "stackTrace" : "..."
  }, {
    "name" : "...",
    "state" : "...",
    "cpuTimeInMilliSec" : 12345.0,
    "stackTrace" : "..."
  } ],
  "threadStateCounts" : [ {
    "state" : "...",
    "count" : 12345
  }, {
    "state" : "...",
    "count" : 12345
  } ]
},
      "description" : "Node class to generate thread information response"
    }
    ,
    "json_ThreadStateNode" : {
      "type" : "object",
      "title" : "ThreadStateNode",
          "properties" : {
            "state" : {
"description" : "",
"type" : "string"
            },
            "count" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "state" : "...",
  "count" : 12345
},
      "description" : ""
    }
    ,
    "json_Throwable" : {
      "type" : "object",
      "title" : "Throwable",
          "properties" : {
            "cause" : {
"description" : "",
"$ref" : "#/definitions/json_Throwable"
            },
            "suppressed" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Throwable"
}
            },
            "message" : {
"description" : "",
"type" : "string"
            },
            "stackTrace" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_StackTraceElement"
}
            },
            "localizedMessage" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    }, {
      "nativeMethod" : true,
      "fileName" : "...",
      "lineNumber" : 12345,
      "className" : "...",
      "methodName" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "message" : "...",
  "stackTrace" : [ {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  }, {
    "nativeMethod" : true,
    "fileName" : "...",
    "lineNumber" : 12345,
    "className" : "...",
    "methodName" : "..."
  } ],
  "localizedMessage" : "..."
},
      "description" : ""
    }
    ,
    "json_UiItemListNode" : {
      "type" : "object",
      "title" : "UiItemListNode",
          "properties" : {
            "items" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UiItemNode"
}
            }
          },
      "example" : {
  "items" : [ {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  }, {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  } ]
},
      "description" : "List of ui items"
    }
    ,
    "json_UiItemNode" : {
      "type" : "object",
      "title" : "UiItemNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "image" : {
"description" : "",
"type" : "string"
            },
            "idmdashImage" : {
"description" : "",
"type" : "string"
            },
            "itemId" : {
"description" : "",
"type" : "number"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "desc" : {
"description" : "",
"type" : "string"
            },
            "subType" : {
"description" : "",
"type" : "string"
            },
            "entityType" : {
"description" : "",
"type" : "string"
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "itemOrder" : {
"description" : "",
"type" : "number"
            },
            "appUrl" : {
"description" : "",
"type" : "string"
            },
            "idmdashAppUrl" : {
"description" : "",
"type" : "string"
            },
            "apiUrl" : {
"description" : "",
"type" : "string"
            },
            "bulkRequestable" : {
"description" : "",
"type" : "boolean"
            },
            "itemCategoryId" : {
"description" : "",
"type" : "number"
            },
            "parentMenuKey" : {
"description" : "",
"type" : "string"
            },
            "menuOrder" : {
"description" : "",
"type" : "string"
            },
            "menuKey" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "image" : "...",
  "idmdashImage" : "...",
  "itemId" : 12345,
  "name" : "...",
  "desc" : "...",
  "subType" : "...",
  "entityType" : "...",
  "id" : "...",
  "itemOrder" : 12345,
  "appUrl" : "...",
  "idmdashAppUrl" : "...",
  "apiUrl" : "...",
  "bulkRequestable" : true,
  "itemCategoryId" : 12345,
  "parentMenuKey" : "...",
  "menuOrder" : "...",
  "menuKey" : "..."
},
      "description" : "JAXB representation of a ui configuration item node"
    }
    ,
    "json_UpdateDirXMLEntitlementResultResponse" : {
      "type" : "object",
      "title" : "UpdateDirXMLEntitlementResultResponse",
          "properties" : {
            "isSuccess" : {
"description" : "",
"type" : "boolean"
            },
            "errorCode" : {
"description" : "",
"type" : "number"
            },
            "message" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "isSuccess" : true,
  "errorCode" : 12345,
  "message" : "..."
},
      "description" : ""
    }
    ,
    "json_UriBuilder" : {
      "type" : "object",
      "title" : "UriBuilder",
      "example" : { },
      "description" : ""
    }
    ,
    "json_UserDefaultAttrNode_nodes" : {
      "type" : "object",
      "title" : "UserDefaultAttrNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "key" : {
"description" : "",
"type" : "string"
            },
            "values" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "action" : {
"description" : "",
"type" : "string"
            },
            "hidden" : {
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
"description" : "",
"type" : "boolean"
            },
            "dataType" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "key" : "...",
  "values" : [ "...", "..." ],
  "action" : "...",
  "hidden" : true,
  "isRequired" : true,
  "dataType" : "..."
},
      "description" : "Holds the representation of the default User Attributes"
    }
    ,
    "json_UserDefaultAttrNode" : {
      "type" : "object",
      "title" : "UserDefaultAttrNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "name" : {
"description" : "",
"type" : "string"
            },
            "key" : {
"description" : "",
"type" : "string"
            },
            "values" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "action" : {
"description" : "",
"type" : "string"
            },
            "hidden" : {
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
"description" : "",
"type" : "boolean"
            },
            "dataType" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "key" : "...",
  "values" : [ "...", "..." ],
  "action" : "...",
  "hidden" : true,
  "isRequired" : true,
  "dataType" : "..."
},
      "description" : "Holds the representation of the default User Attributes"
    }
    ,
    "json_UserDefaultNode" : {
      "type" : "object",
      "title" : "UserDefaultNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "attributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserDefaultAttrNode_nodes"
}
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "attributes" : [ {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  }, {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  } ]
},
      "description" : "Holds the representation of default user."
    }
    ,
    "json_UserEntitlementInfoNode" : {
      "type" : "object",
      "title" : "UserEntitlementInfoNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "entitlementValue" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementValueNode"
            }
          },
      "example" : {
  "id" : "...",
  "name" : "...",
  "entitlementValue" : {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_UserInfoBean" : {
      "type" : "object",
      "title" : "UserInfoBean",
          "properties" : {
            "self" : {
"description" : "",
"type" : "boolean"
            },
            "helpDeskUser" : {
"description" : "",
"type" : "boolean"
            },
            "proxy" : {
"description" : "",
"type" : "boolean"
            },
            "addressees" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "delegated" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "provAdmin" : {
"description" : "",
"type" : "boolean"
            },
            "allAddressees" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "proxyUser" : {
"description" : "",
"type" : "string"
            },
            "primaryPrincipal" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "self" : true,
  "helpDeskUser" : true,
  "proxy" : true,
  "addressees" : [ "...", "..." ],
  "delegated" : [ { }, { } ],
  "provAdmin" : true,
  "allAddressees" : [ "...", "..." ],
  "proxyUser" : "...",
  "primaryPrincipal" : "..."
},
      "description" : ""
    }
    ,
    "json_UserInfoListNode" : {
      "type" : "object",
      "title" : "UserInfoListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "users" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserInfoNode"
}
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "totalCount" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "users" : [ {
    "dn" : "...",
    "image" : "...",
    "imageURL" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "groupMemberof" : [ "...", "..." ]
  }, {
    "dn" : "...",
    "image" : "...",
    "imageURL" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "groupMemberof" : [ "...", "..." ]
  } ],
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "totalCount" : 12345
},
      "description" : "List of user info nodes"
    }
    ,
    "json_UserInfoNode" : {
      "type" : "object",
      "title" : "UserInfoNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "image" : {
"description" : "",
"type" : "string"
            },
            "imageURL" : {
"description" : "",
"type" : "string"
            },
            "attributes" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AttrNode"
}
            },
            "groupMemberof" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "image" : "...",
  "imageURL" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  } ],
  "groupMemberof" : [ "...", "..." ]
},
      "description" : "Holds the representation of UserInfo."
    }
    ,
    "json_UserInfoResponseNode" : {
      "type" : "object",
      "title" : "UserInfoResponseNode",
          "properties" : {
            "DN" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "DN" : "...",
  "value" : "..."
},
      "description" : ""
    }
    ,
    "json_UserListNode_nodes" : {
      "type" : "object",
      "title" : "UserListNode",
          "properties" : {
            "users" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserNode_nodes_catalog"
}
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "token" : {
"description" : "",
"type" : "string"
            },
            "reason" : {
"description" : "",
"type" : "string"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "users" : [ {
    "id" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "cn" : "..."
  }, {
    "id" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "cn" : "..."
  } ],
  "nextIndex" : 12345,
  "token" : "...",
  "reason" : "...",
  "arraySize" : 12345
},
      "description" : "List of User Node(s)."
    }
    ,
    "json_UserListNode" : {
      "type" : "object",
      "title" : "UserListNode",
          "properties" : {
            "members" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserNode"
}
            },
            "nextIndex" : {
"description" : "",
"type" : "number"
            },
            "arraySize" : {
"description" : "",
"type" : "number"
            },
            "reason" : {
"description" : "",
"type" : "string"
            },
            "token" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "members" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "reason" : "...",
  "token" : "..."
},
      "description" : "List of User Node(s)."
    }
    ,
    "json_UserNode_nodes" : {
      "type" : "object",
      "title" : "UserNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_UserNode" : {
      "type" : "object",
      "title" : "UserNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "name" : {
"description" : "",
"type" : "string"
            },
            "firstName" : {
"description" : "",
"type" : "string"
            },
            "lastName" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "name" : "...",
  "firstName" : "...",
  "lastName" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_UserNode_nodes_catalog" : {
      "type" : "object",
      "title" : "UserNode",
          "properties" : {
            "id" : {
"description" : "",
"type" : "string"
            },
            "firstName" : {
"description" : "",
"type" : "string"
            },
            "lastName" : {
"description" : "",
"type" : "string"
            },
            "cn" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "cn" : "..."
},
      "description" : ""
    }
    ,
    "json_UserRenameNode" : {
      "type" : "object",
      "title" : "UserRenameNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes"
        },
        {
          "properties" : {
            "oldUserDn" : {
"description" : "",
"type" : "string"
            },
            "newUserDn" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "oldUserDn" : "...",
  "newUserDn" : "..."
},
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_UserResourceNode" : {
      "type" : "object",
      "title" : "UserResourceNode",
          "properties" : {
            "newResources" : {
"description" : "",
"type" : "number"
            },
            "resourcesCount" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "newResources" : 12345,
  "resourcesCount" : 12345
},
      "description" : ""
    }
    ,
    "json_UserRoleNode" : {
      "type" : "object",
      "title" : "UserRoleNode",
          "properties" : {
            "expiryRoles" : {
"description" : "",
"type" : "number"
            },
            "newRoles" : {
"description" : "",
"type" : "number"
            },
            "rolesCount" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "expiryRoles" : 12345,
  "newRoles" : 12345,
  "rolesCount" : 12345
},
      "description" : ""
    }
    ,
    "json_UserTaskNode" : {
      "type" : "object",
      "title" : "UserTaskNode",
          "properties" : {
            "expiryTasksCount" : {
"description" : "",
"type" : "number"
            },
            "newTasks" : {
"description" : "",
"type" : "number"
            },
            "cliamedTasks" : {
"description" : "",
"type" : "number"
            },
            "reassignedTasks" : {
"description" : "",
"type" : "number"
            },
            "delegatedTasks" : {
"description" : "",
"type" : "number"
            },
            "tasksCount" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "expiryTasksCount" : 12345,
  "newTasks" : 12345,
  "cliamedTasks" : 12345,
  "reassignedTasks" : 12345,
  "delegatedTasks" : 12345,
  "tasksCount" : 12345
},
      "description" : ""
    }
    ,
    "json_UsersGroupMemberShipNode" : {
      "type" : "object",
      "title" : "UsersGroupMemberShipNode",
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "groupMemberof" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "dn" : "...",
  "groupMemberof" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_ValueCode" : {
      "type" : "object",
      "title" : "ValueCode",
          "properties" : {
            "Value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "Value" : "..."
},
      "description" : ""
    }
    ,
    "json_WFApprovalNode" : {
      "type" : "object",
      "title" : "WFApprovalNode",
          "properties" : {
            "approvalFormDN" : {
"description" : "",
"type" : "string"
            },
            "approvalDataItem" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DataItemInputNode"
}
            }
          },
      "example" : {
  "approvalFormDN" : "...",
  "approvalDataItem" : [ {
    "type" : "...",
    "name" : "...",
    "source" : "...",
    "target" : "...",
    "controlType" : "...",
    "targetType" : "..."
  }, {
    "type" : "...",
    "name" : "...",
    "source" : "...",
    "target" : "...",
    "controlType" : "...",
    "targetType" : "..."
  } ]
},
      "description" : "Pojo for approval Node"
    }
    ,
    "json_WFCreateDataNode" : {
      "type" : "object",
      "title" : "WFCreateDataNode",
          "properties" : {
            "key" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "key" : "...",
  "value" : "..."
},
      "description" : "Data Node Input."
    }
    ,
    "json_WFCreateNode" : {
      "type" : "object",
      "title" : "WFCreateNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "template" : {
"description" : "",
"type" : "string"
            },
            "cn" : {
"description" : "",
"type" : "string"
            },
            "data" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WFCreateDataNode"
}
            },
            "prdName" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WFCreateDataNode"
}
            },
            "prdDescription" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WFCreateDataNode"
}
            },
            "requestInfo" : {
"description" : "",
"$ref" : "#/definitions/json_WFRequestNode"
            },
            "approveInfo" : {
"description" : "",
"$ref" : "#/definitions/json_WFApprovalNode"
            },
            "wfData" : {
"description" : "",
"type" : "string"
            },
            "isLoggingRequired" : {
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "template" : "...",
  "cn" : "...",
  "data" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "prdName" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "prdDescription" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "requestInfo" : {
    "requesterFormDN" : "...",
    "requestDataItem" : [ {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    }, {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    } ]
  },
  "approveInfo" : {
    "approvalFormDN" : "...",
    "approvalDataItem" : [ {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    }, {
      "type" : "...",
      "name" : "...",
      "source" : "...",
      "target" : "...",
      "controlType" : "...",
      "targetType" : "..."
    } ]
  },
  "wfData" : "...",
  "isLoggingRequired" : true
},
      "description" : "Workflow Creation Node."
    }
    ,
    "json_WFDataItemNode" : {
      "type" : "object",
      "title" : "WFDataItemNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "fieldKey" : {
"description" : "",
"type" : "string"
            },
            "dataType" : {
"description" : "",
"type" : "string"
            },
            "controlType" : {
"description" : "",
"type" : "string"
            },
            "targetType" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "fieldKey" : "...",
  "dataType" : "...",
  "controlType" : "...",
  "targetType" : "..."
},
      "description" : "Workflow Template Node."
    }
    ,
    "json_WFDataItemsListNode" : {
      "type" : "object",
      "title" : "WFDataItemsListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "dataItems" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WFDataItemNode"
}
            },
            "size" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "dataItems" : [ {
    "fieldKey" : "...",
    "dataType" : "...",
    "controlType" : "...",
    "targetType" : "..."
  }, {
    "fieldKey" : "...",
    "dataType" : "...",
    "controlType" : "...",
    "targetType" : "..."
  } ],
  "size" : 12345
},
      "description" : "Workflow template List Node."
    }
    ,
    "json_WFDataListNode" : {
      "type" : "object",
      "title" : "WFDataListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "prdTemplates" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WFDataNode"
}
            },
            "size" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "prdTemplates" : [ {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  }, {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  } ],
  "size" : 12345
},
      "description" : "Workflow template List Node."
    }
    ,
    "json_WFDataNode" : {
      "type" : "object",
      "title" : "WFDataNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "dn" : {
"description" : "",
"type" : "string"
            },
            "templateName" : {
"description" : "",
"type" : "string"
            },
            "description" : {
"description" : "",
"type" : "string"
            },
            "cn" : {
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "dn" : "...",
  "templateName" : "...",
  "description" : "...",
  "cn" : "..."
},
      "description" : "Workflow Template Node."
    }
    ,
    "json_WFFormsListNode" : {
      "type" : "object",
      "title" : "WFFormsListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XSSValidationNode_nodes_catalog"
        },
        {
          "properties" : {
            "worfklowFormsList" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WFDataNode"
}
            },
            "size" : {
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "worfklowFormsList" : [ {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  }, {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  } ],
  "size" : 12345
},
      "description" : "Workflow template List Node."
    }
    ,
    "json_WFRequestNode" : {
      "type" : "object",
      "title" : "WFRequestNode",
          "properties" : {
            "requesterFormDN" : {
"description" : "",
"type" : "string"
            },
            "requestDataItem" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DataItemInputNode"
}
            }
          },
      "example" : {
  "requesterFormDN" : "...",
  "requestDataItem" : [ {
    "type" : "...",
    "name" : "...",
    "source" : "...",
    "target" : "...",
    "controlType" : "...",
    "targetType" : "..."
  }, {
    "type" : "...",
    "name" : "...",
    "source" : "...",
    "target" : "...",
    "controlType" : "...",
    "targetType" : "..."
  } ]
},
      "description" : "Pojo for Request Info"
    }
    ,
    "json_WorkEntriesRespNode" : {
      "type" : "object",
      "title" : "WorkEntriesRespNode",
          "properties" : {
            "workentries" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WorkEntryRespNode"
}
            },
            "totalSize" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "workentries" : [ {
    "activityId" : "...",
    "activityName" : "...",
    "addressee" : "...",
    "assignmentType" : 12345,
    "availableActions" : [ {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    }, {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "recipient" : "...",
    "initiator" : "...",
    "proxyFor" : "...",
    "statusDisplayName" : "...",
    "excludePrincipals" : true
  }, {
    "activityId" : "...",
    "activityName" : "...",
    "addressee" : "...",
    "assignmentType" : 12345,
    "availableActions" : [ {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    }, {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "recipient" : "...",
    "initiator" : "...",
    "proxyFor" : "...",
    "statusDisplayName" : "...",
    "excludePrincipals" : true
  } ],
  "totalSize" : 12345
},
      "description" : ""
    }
    ,
    "json_WorkEntriesResponseNode" : {
      "type" : "object",
      "title" : "WorkEntriesResponseNode",
          "properties" : {
            "workEntries" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WorkEntryResponseNode"
}
            }
          },
      "example" : {
  "workEntries" : [ {
    "activityId" : "...",
    "activityName" : "...",
    "Addressee" : {
      "DN" : "...",
      "value" : "..."
    },
    "assignmentType" : 12345,
    "availableActions" : [ {
      "code" : "...",
      "value" : "..."
    }, {
      "code" : "...",
      "value" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "proxyFor" : "..."
  }, {
    "activityId" : "...",
    "activityName" : "...",
    "Addressee" : {
      "DN" : "...",
      "value" : "..."
    },
    "assignmentType" : 12345,
    "availableActions" : [ {
      "code" : "...",
      "value" : "..."
    }, {
      "code" : "...",
      "value" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "proxyFor" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_WorkEntryActionNode" : {
      "type" : "object",
      "title" : "WorkEntryActionNode",
          "properties" : {
            "code" : {
"description" : "",
"type" : "string"
            },
            "value" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "code" : "...",
  "value" : "..."
},
      "description" : "JAXB representation WF task operation/action like approve/deny/re-assign"
    }
    ,
    "json_WorkEntryRespNode" : {
      "type" : "object",
      "title" : "WorkEntryRespNode",
          "properties" : {
            "activityId" : {
"description" : "",
"type" : "string"
            },
            "activityName" : {
"description" : "",
"type" : "string"
            },
            "addressee" : {
"description" : "",
"type" : "string"
            },
            "assignmentType" : {
"description" : "",
"type" : "number"
            },
            "availableActions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ActionImpl"
}
            },
            "creationTime" : {
"description" : "",
"type" : "number"
            },
            "expirationTime" : {
"description" : "",
"type" : "number"
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "owner" : {
"description" : "",
"type" : "string"
            },
            "priority" : {
"description" : "",
"type" : "number"
            },
            "processId" : {
"description" : "",
"type" : "string"
            },
            "requestId" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "number"
            },
            "legalDisclaimer" : {
"description" : "",
"type" : "string"
            },
            "digitalSignatureType" : {
"description" : "",
"type" : "string"
            },
            "processVersion" : {
"description" : "",
"type" : "string"
            },
            "completionTime" : {
"description" : "",
"type" : "number"
            },
            "recipient" : {
"description" : "",
"type" : "string"
            },
            "initiator" : {
"description" : "",
"type" : "string"
            },
            "proxyFor" : {
"description" : "",
"type" : "string"
            },
            "statusDisplayName" : {
"description" : "",
"type" : "string"
            },
            "excludePrincipals" : {
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "activityId" : "...",
  "activityName" : "...",
  "addressee" : "...",
  "assignmentType" : 12345,
  "availableActions" : [ {
    "actionValue" : 12345,
    "digitalSignatureRequired" : true,
    "digitalSignatureType" : "..."
  }, {
    "actionValue" : 12345,
    "digitalSignatureRequired" : true,
    "digitalSignatureType" : "..."
  } ],
  "creationTime" : 12345,
  "expirationTime" : 12345,
  "id" : "...",
  "owner" : "...",
  "priority" : 12345,
  "processId" : "...",
  "requestId" : "...",
  "status" : 12345,
  "legalDisclaimer" : "...",
  "digitalSignatureType" : "...",
  "processVersion" : "...",
  "completionTime" : 12345,
  "recipient" : "...",
  "initiator" : "...",
  "proxyFor" : "...",
  "statusDisplayName" : "...",
  "excludePrincipals" : true
},
      "description" : ""
    }
    ,
    "json_WorkEntryResponseNode" : {
      "type" : "object",
      "title" : "WorkEntryResponseNode",
          "properties" : {
            "activityId" : {
"description" : "",
"type" : "string"
            },
            "activityName" : {
"description" : "",
"type" : "string"
            },
            "Addressee" : {
"description" : "",
"$ref" : "#/definitions/json_UserInfoResponseNode"
            },
            "assignmentType" : {
"description" : "",
"type" : "number"
            },
            "availableActions" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_WorkEntryActionNode"
}
            },
            "creationTime" : {
"description" : "",
"type" : "number"
            },
            "expirationTime" : {
"description" : "",
"type" : "number"
            },
            "id" : {
"description" : "",
"type" : "string"
            },
            "owner" : {
"description" : "",
"type" : "string"
            },
            "priority" : {
"description" : "",
"type" : "number"
            },
            "processId" : {
"description" : "",
"type" : "string"
            },
            "requestId" : {
"description" : "",
"type" : "string"
            },
            "status" : {
"description" : "",
"type" : "number"
            },
            "legalDisclaimer" : {
"description" : "",
"type" : "string"
            },
            "digitalSignatureType" : {
"description" : "",
"type" : "string"
            },
            "processVersion" : {
"description" : "",
"type" : "string"
            },
            "completionTime" : {
"description" : "",
"type" : "number"
            },
            "Recipient" : {
"description" : "",
"$ref" : "#/definitions/json_UserInfoResponseNode"
            },
            "Initiator" : {
"description" : "",
"$ref" : "#/definitions/json_UserInfoResponseNode"
            },
            "proxyFor" : {
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "activityId" : "...",
  "activityName" : "...",
  "Addressee" : {
    "DN" : "...",
    "value" : "..."
  },
  "assignmentType" : 12345,
  "availableActions" : [ {
    "code" : "...",
    "value" : "..."
  }, {
    "code" : "...",
    "value" : "..."
  } ],
  "creationTime" : 12345,
  "expirationTime" : 12345,
  "id" : "...",
  "owner" : "...",
  "priority" : 12345,
  "processId" : "...",
  "requestId" : "...",
  "status" : 12345,
  "legalDisclaimer" : "...",
  "digitalSignatureType" : "...",
  "processVersion" : "...",
  "completionTime" : 12345,
  "Recipient" : {
    "DN" : "...",
    "value" : "..."
  },
  "Initiator" : {
    "DN" : "...",
    "value" : "..."
  },
  "proxyFor" : "..."
},
      "description" : ""
    }
    ,
    "json_WorkflowStatusNode" : {
      "type" : "object",
      "title" : "WorkflowStatusNode",
          "properties" : {
            "engineStatus" : {
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "engineStatus" : 12345
},
      "description" : "To make workflow engine to start or stop. It updates the status of workflow engine."
    }
    ,
    "json_XSSValidationNode_nodes_catalog" : {
      "type" : "object",
      "title" : "XSSValidationNode",
      "example" : { },
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_XSSValidationNode_nodes" : {
      "type" : "object",
      "title" : "XSSValidationNode",
      "example" : { },
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "json_XSSValidationNode" : {
      "type" : "object",
      "title" : "XSSValidationNode",
      "example" : { },
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_cprsConfigNode" : {
      "type" : "object",
      "title" : "cprsConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "cleanupTimeInDays" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "enableCprs" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "pollingInterval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_cprsDeltaAssignmentList" : {
      "type" : "object",
      "title" : "cprsDeltaAssignmentList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "arraySize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "deltaAssignmentsList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_cprsDeltaAssignmentsNode"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "totalHits" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_cprsDeltaAssignmentsNode" : {
      "type" : "object",
      "title" : "cprsDeltaAssignmentsNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "entitlementDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entitlementValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "firstName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "instanceGuId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lastName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "logicalSystemId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "source" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "userDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_cprsRequestNode" : {
      "type" : "object",
      "title" : "cprsRequestNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "deltaAssignmentsList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_cprsDeltaAssignmentsNode"
            },
            "driverDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entitlementDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isMigrate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "logicalSystem" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "opType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_commentListNode" : {
      "type" : "object",
      "title" : "commentListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "commentNode" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_commentNode"
            },
            "listCommentNode" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_commentNode"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_commentNode" : {
      "type" : "object",
      "title" : "commentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "activityId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "activityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "author" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "authorType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "commentId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "commentText" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "comments" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "messageId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "principal" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sequenceNumber" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "systemComment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "timestamp" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "userComment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "userInfo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userInfoBean"
            },
            "workId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_adminSettingsNode" : {
      "type" : "object",
      "title" : "adminSettingsNode",
      "allOf" : [
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of admin settings request. It is used to read and write settings into JSON file"
    }
    ,
    "xml_ns0_afCommentNode" : {
      "type" : "object",
      "title" : "afCommentNode",
      "allOf" : [
        {
          "properties" : {
            "activity" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "comment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "commentDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "commentFullName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "date" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "msgId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "system" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "user" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of workflow/approval flow comment"
    }
    ,
    "xml_ns0_afDataItemNode" : {
      "type" : "object",
      "title" : "afDataItemNode",
      "allOf" : [
        {
          "properties" : {
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "multiValued" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "readOnly" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "source" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "target" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "valueSet" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "valueType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : "JAXB representation info service attributes"
    }
    ,
    "xml_ns0_afTaskActionNode" : {
      "type" : "object",
      "title" : "afTaskActionNode",
      "required" : ["action"],
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approver" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "comment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataItems" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afDataItemNode"
            },
            "failed" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afTaskNode"
            },
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "succeeded" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afTaskNode"
            },
            "success" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "tasks" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afTaskNode"
            }
          }
        }
      ],
      "description" : "JAXB representation WF task operation/action like approve/deny/re-assign"
    }
    ,
    "xml_ns0_afTaskNode" : {
      "type" : "object",
      "title" : "afTaskNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "activityName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "addressee" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "addresseeEntityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "addresseetype" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvalForm" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvalFormId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assignStatus" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assignedTo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "bulkApprovable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "claimedby" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "comments" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afCommentNode"
            },
            "confirmationNumber" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "currentAddressee" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataItems" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afDataItemNode"
            },
            "delegatedTask" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "expirationTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "initiator" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "initiatorName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isNewForm" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "link" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "priority" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "processId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "processName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipient" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "returnAddressee" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "taskClaimed" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "taskId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation info WF task"
    }
    ,
    "xml_ns0_attrNode" : {
      "type" : "object",
      "title" : "attrNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of the Attribute"
    }
    ,
    "xml_ns0_attributeLocaleInfo" : {
      "type" : "object",
      "title" : "attributeLocaleInfo",
      "allOf" : [
        {
          "properties" : {
            "locale" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_adminAttributeNode" : {
      "type" : "object",
      "title" : "adminAttributeNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "attributeValues" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "object"
            },
            "choiceList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_jaxBMapNode"
            },
            "controlType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "formatType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isClickable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isEditable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isHideable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isMultivalued" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isSearchable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isSortable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lookupAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_lookUpAttributeValueNode"
            },
            "lookupEntity" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "AttributeNode which provide list of values for the virtualEntityAttribute"
    }
    ,
    "xml_ns0_attributesListNode" : {
      "type" : "object",
      "title" : "attributesListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "attributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userDefaultAttrNode"
            },
            "attributesList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminAttributeNode"
            },
            "container" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayPhoto" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "namingAttr" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminAttributeNode"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "primaryAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminAttributeNode"
            },
            "profilePhoto" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "secondaryttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminAttributeNode"
            }
          }
        }
      ],
      "description" : "userInputNode for CreateOpertaion"
    }
    ,
    "xml_ns0_availabilityListNode" : {
      "type" : "object",
      "title" : "availabilityListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "availability" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_availabilityNode"
            },
            "availabilityStatus" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "hasDelegatesAssigned" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "newable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "totalAvailability" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "Node for Availability list"
    }
    ,
    "xml_ns0_availabilityNode" : {
      "type" : "object",
      "title" : "availabilityNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "allRequests" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "availabilityId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "availableRequestDefs" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_requestDefNode"
            },
            "effectiveDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "enableAllRequests" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "expiryDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "expiryDuration" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "expiryDurationUnit" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "hasExpiry" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "hasExpiryDuration" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isNotificationRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "notificationAddresseeType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifyUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "principalUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userNode"
            },
            "requestDefs" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_requestDefNode"
            },
            "teamscope" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Node for Availability definition"
    }
    ,
    "xml_ns0_cartItemAssignmentNode" : {
      "type" : "object",
      "title" : "cartItemAssignmentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "assignedToDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assigneeFullName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "comment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entRef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionAssignmentEntRefNode"
            },
            "instanceId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "reqForm" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionApprovalReqFormNode"
            },
            "sodJustification" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "subtype" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation for cart item assignments"
    }
    ,
    "xml_ns0_cartItemNode" : {
      "type" : "object",
      "title" : "cartItemNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "itemAssignees" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_cartItemAssignmentNode"
            },
            "itemDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "itemFullname" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "itemType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation for cart items"
    }
    ,
    "xml_ns0_cartNode" : {
      "type" : "object",
      "title" : "cartNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "cartAction" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "cartItems" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_cartItemNode"
            },
            "cartOwner" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "JAXB representation for cart item assignments"
    }
    ,
    "xml_ns0_categoryNode" : {
      "type" : "object",
      "title" : "categoryNode",
      "allOf" : [
        {
          "properties" : {
            "categoryId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "categoryName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of a DAL category"
    }
    ,
    "xml_ns0_clientNode" : {
      "type" : "object",
      "title" : "clientNode",
      "allOf" : [
        {
          "properties" : {
            "config" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isDefault" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "matchCondition" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of UserInfo."
    }
    ,
    "xml_ns0_columnPreferenceNodeList" : {
      "type" : "object",
      "title" : "columnPreferenceNodeList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "columns" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isPreferenceAvailable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_containerNode" : {
      "type" : "object",
      "title" : "containerNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "level" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "searchScope" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_dashboardPreferenceNodeList" : {
      "type" : "object",
      "title" : "dashboardPreferenceNodeList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dashboardCustomizations" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dashboardWidgetsAccess" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_jaxBMapNode"
            },
            "isDashboardCustomized" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_dataItemInputNode" : {
      "type" : "object",
      "title" : "dataItemInputNode",
      "allOf" : [
        {
          "properties" : {
            "controlType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "source" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "target" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "targetType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Node for handling Data Items"
    }
    ,
    "xml_ns0_dataItemNode" : {
      "type" : "object",
      "title" : "dataItemNode",
      "allOf" : [
        {
          "properties" : {
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "This class will be used to carry data items for permission request in external application."
    }
    ,
    "xml_ns0_delegationAdminConfigNode" : {
      "type" : "object",
      "title" : "delegationAdminConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "allRequests" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "availabilityNotfTemplate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "availabilityRetentionTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "delegateNotfTemplate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "delegationRetentionTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "JAXB representation of delegation Admin configuration."
    }
    ,
    "xml_ns0_delegationListNode" : {
      "type" : "object",
      "title" : "delegationListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "delegations" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_delegationNode"
            },
            "totalDelegations" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_delegationNode" : {
      "type" : "object",
      "title" : "delegationNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "allRequests" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "assignFromContainers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_containerNode"
            },
            "assignFromGroups" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_groupNode"
            },
            "assignFromUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userNode"
            },
            "assignToRelationship" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_relationshipNode"
            },
            "assignToUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userNode"
            },
            "assignmentId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "createAvailability" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "effectiveDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "expiryDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "isExpires" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isNotificationRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "notificationAddresseeType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifyUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestDefs" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_requestDefNode"
            },
            "teamscope" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "delegation node"
    }
    ,
    "xml_ns0_deleteEntityListNode" : {
      "type" : "object",
      "title" : "deleteEntityListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "count" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "items" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_deleteEntityVONode"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_deleteEntityVONode" : {
      "type" : "object",
      "title" : "deleteEntityVONode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_deleteGroupNode" : {
      "type" : "object",
      "title" : "deleteGroupNode",
      "allOf" : [
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_emailBasedApprovalNode" : {
      "type" : "object",
      "title" : "emailBasedApprovalNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "approvePhrase" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeLocaleInfo"
            },
            "cleanupTimeInDays" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "denyPhrase" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeLocaleInfo"
            },
            "email" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "emailApprovalTurnOn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "emailContentOption" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "failureMailTemplate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "fieldLabels" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_jaxBMapNode"
            },
            "folder" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "host" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isProxyAuthRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isProxyEnabled" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "notifyAuthPassword" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifyAuthRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "notifyAuthUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifyDefaultFromAddress" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifyHost" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifyImageUrl" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifyPort" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifyProtocol" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifySecurePort" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifySecureProtocol" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifySignKeyAlias" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifySignKeyPassword" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifySignPassword" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifySignPath" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifySignature" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "notifySmtpHost" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifySmtpTls" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "pollingInterval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "port" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "proxyHost" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "proxyPassword" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "proxyPort" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "replyEmail" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requireAuthentication" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "serverType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sslEnabled" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "successMailTemplate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "tokenExpirationTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "useDefaultPort" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "Email based approval node to get and update admin configuration"
    }
    ,
    "xml_ns0_entityAttributeNode" : {
      "type" : "object",
      "title" : "entityAttributeNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "attributeValues" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "choiceList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_jaxBMapNode"
            },
            "controlType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "formatType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isClickable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isEditable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isHideable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isMultivalued" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isSearchable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isSelected" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isSortable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lookupAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_lookUpAttributeValueNode"
            },
            "lookupEntity" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "rangeEnd" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "rangeStart" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "AttributeNode which provide list of values for the virtualEntityAttribute"
    }
    ,
    "xml_ns0_entityDefinitionNode" : {
      "type" : "object",
      "title" : "entityDefinitionNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "attributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entityAttributeNode"
            },
            "display" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "editKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isCreatable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isEditable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isRemovable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isViewable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "namingAttribute" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_formDataItemNode" : {
      "type" : "object",
      "title" : "formDataItemNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : "JAXB representation of a parameter node with key-value pair"
    }
    ,
    "xml_ns0_GCVNode" : {
      "type" : "object",
      "title" : "GCVNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : "JAXB node for global configuration variable. type - integer, real, string,\nboolean, enum, password-ref, list or structured values - list containing the\nrespective gcv value"
    }
    ,
    "xml_ns0_groupNode" : {
      "type" : "object",
      "title" : "groupNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "container" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "members" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "membersAction" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_igConfigurationNode" : {
      "type" : "object",
      "title" : "igConfigurationNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "adminPassword" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "adminUserName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "host" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "showIgApprovals" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "showIgRequestCatalog" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "Ig configuration node to get and update ig configuration"
    }
    ,
    "xml_ns0_itemCategoryNode" : {
      "type" : "object",
      "title" : "itemCategoryNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "categoryName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "desc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "image" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "itemCategoryId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "itemCategoryOrder" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "items" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_uiItemNode"
            },
            "subType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of a configuration item category node"
    }
    ,
    "xml_ns0_jaxBMapNode" : {
      "type" : "object",
      "title" : "jaxBMapNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Node to Handle Map operation for jerseyFrameWork"
    }
    ,
    "xml_ns0_localeNode" : {
      "type" : "object",
      "title" : "localeNode",
      "allOf" : [
        {
          "properties" : {
            "link" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localeKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "modifiedLocale" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "userDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "userPreferredLocales" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of a locale node"
    }
    ,
    "xml_ns0_lookUpAttributeValueNode" : {
      "type" : "object",
      "title" : "lookUpAttributeValueNode",
      "allOf" : [
        {
          "properties" : {
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lookupAttrKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lookupAttrValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_menuItem" : {
      "type" : "object",
      "title" : "menuItem",
      "allOf" : [
        {
          "properties" : {
            "context" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "mapName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "menuName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "menuOrder" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "subMenuList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_menuItem"
            }
          }
        }
      ],
      "description" : "Menu Item class provide 4 details. First menuName, which basically contains\nthe Menu Display name. Second mapName, which basically contains the Menu\nidentity name, using to know the authorization of that page. Third context,\nwhich basically contains the url part. Fourth subMenuList, which basically\ncontains the list of the sub menu comes under it."
    }
    ,
    "xml_ns0_menuItemListNode" : {
      "type" : "object",
      "title" : "menuItemListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "menuItems" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_menuItem"
            }
          }
        }
      ],
      "description" : "After construction each menu items add into this list and send back as a\nresponse to client."
    }
    ,
    "xml_ns0_messageNode" : {
      "type" : "object",
      "title" : "messageNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "driverImage" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "driverName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "message" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of FullName."
    }
    ,
    "xml_ns0_nameNode" : {
      "type" : "object",
      "title" : "nameNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of FullName."
    }
    ,
    "xml_ns0_nameNodeList" : {
      "type" : "object",
      "title" : "nameNodeList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "names" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_nameNode"
            }
          }
        }
      ],
      "description" : "List of Full Name Node(s)."
    }
    ,
    "xml_ns0_navPagesRightsListNode" : {
      "type" : "object",
      "title" : "navPagesRightsListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "areaDefault" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "areaDefaultDisplayName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "navPageRights" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_jaxBMapNode"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_operationResponseNode" : {
      "type" : "object",
      "title" : "operationResponseNode",
      "allOf" : [
        {
          "properties" : {
            "failed" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_responseNode"
            },
            "succeeded" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_responseNode"
            },
            "success" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "JAXB representation of a response to a operation response.  Operations can include several actions."
    }
    ,
    "xml_ns0_organizationalChartInputNode" : {
      "type" : "object",
      "title" : "organizationalChartInputNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "primaryAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "secondaryAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_PCRSRequestNode" : {
      "type" : "object",
      "title" : "PCRSRequestNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "entitlementValues" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entitlementValueNode"
            },
            "entitlements" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entitlementNode"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isGrant" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "permissionInApp" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userEntitlementInfoNode"
            }
          }
        }
      ],
      "description" : "Holds the representation of PCRS Request."
    }
    ,
    "xml_ns0_parameterNode" : {
      "type" : "object",
      "title" : "parameterNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of a parameter node with key-value pair"
    }
    ,
    "xml_ns0_permissionApprovalActivityNode" : {
      "type" : "object",
      "title" : "permissionApprovalActivityNode",
      "allOf" : [
        {
          "properties" : {
            "actionTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "activity_action" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "user" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of approval activity"
    }
    ,
    "xml_ns0_permissionApprovalNode" : {
      "type" : "object",
      "title" : "permissionApprovalNode",
      "allOf" : [
        {
          "properties" : {
            "activities" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionApprovalActivityNode"
            },
            "endTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "processId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sodJustification" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "startTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "JAXB representation of approval"
    }
    ,
    "xml_ns0_permissionApprovalReqFormNode" : {
      "type" : "object",
      "title" : "permissionApprovalReqFormNode",
      "allOf" : [
        {
          "properties" : {
            "params" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionAssignmentParameterNode"
            }
          }
        }
      ],
      "description" : "JAXB representation Permission Assignment parameters"
    }
    ,
    "xml_ns0_permissionAssignmentCauseNode" : {
      "type" : "object",
      "title" : "permissionAssignmentCauseNode",
      "allOf" : [
        {
          "properties" : {
            "approval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionApprovalNode"
            },
            "assignedTo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "confirmNo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "effectiveDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "entRef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionAssignmentEntRefNode"
            },
            "expirationDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "groupContainerInfo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionGroupOrContainerNode"
            },
            "instanceId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "removable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "reqDesc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "reqForm" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionApprovalReqFormNode"
            },
            "requestDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "requester" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requesterName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sodJustification" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sources" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sourcesDetails" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionAssignmentSourceDetails"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "subtype" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation permission cause"
    }
    ,
    "xml_ns0_permissionAssignmentEntRefNode" : {
      "type" : "object",
      "title" : "permissionAssignmentEntRefNode",
      "allOf" : [
        {
          "properties" : {
            "entDesc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "params" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionAssignmentParameterNode"
            }
          }
        }
      ],
      "description" : "JAXB representation Permission Assignment Entitlement Ref"
    }
    ,
    "xml_ns0_permissionAssignmentListNode" : {
      "type" : "object",
      "title" : "permissionAssignmentListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "assignments" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionAssignmentNode"
            },
            "correlationId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "currentIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "endIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "isRemoveFromCart" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "reason" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "token" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "total" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "totalPermissionCount" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "List of permission assignments."
    }
    ,
    "xml_ns0_permissionAssignmentNode" : {
      "type" : "object",
      "title" : "permissionAssignmentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "assignmentTo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assignmentToList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_cartItemAssignmentNode"
            },
            "assignmentType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "bulkRemovable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "categories" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_categoryNode"
            },
            "cause" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionAssignmentCauseNode"
            },
            "causes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionAssignmentCauseNode"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "effectiveDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "entityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "expiryDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "initialRequestDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "instanceId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isDirectAssignment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "link" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "reqDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "requestedBy" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionAssignmentCauseNode"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "JAXB representation of a permission assignments.  Permissions that can be assigned to users include roles and resources."
    }
    ,
    "xml_ns0_permissionAssignmentParameterNode" : {
      "type" : "object",
      "title" : "permissionAssignmentParameterNode",
      "allOf" : [
        {
          "properties" : {
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation Permission Assignment parameters"
    }
    ,
    "xml_ns0_permissionAssignmentSourceDetails" : {
      "type" : "object",
      "title" : "permissionAssignmentSourceDetails",
      "allOf" : [
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Bean to have details of Permission Assignment Source Details"
    }
    ,
    "xml_ns0_permissionBeanNode" : {
      "type" : "object",
      "title" : "permissionBeanNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "authObjDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the m_authObjDN.",
"type" : "string"
            },
            "domainType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the domainType.",
"type" : "string"
            },
            "excluded" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "objClass" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the objClass.",
"type" : "string"
            },
            "objType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the objType.",
"type" : "string"
            },
            "permission" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the m_permission.",
"type" : "string"
            },
            "permissionDisplay" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the m_permissionDisplay.",
"type" : "string"
            },
            "resolvedAuthObjDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Returns the m_resolvedAuthObjDN.",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_permissionCategoryNode" : {
      "type" : "object",
      "title" : "permissionCategoryNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Mapped JSON class for storing category information."
    }
    ,
    "xml_ns0_permissionChangeNode" : {
      "type" : "object",
      "title" : "permissionChangeNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "eventId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "newPermId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "operation" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "timestamp" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB/Jersey node for permission index change.\nIn this version only REMOVE operation is supported."
    }
    ,
    "xml_ns0_permissionChangeOperationNode" : {
      "type" : "object",
      "title" : "permissionChangeOperationNode",
      "allOf" : [
        {
          "properties" : {
            "permIndexChange" : {
              "xml" : {
                "name" : "permIndexChanges",
                "wrapped" : true,
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionChangeNode"
            }
          }
        }
      ],
      "description" : "Request node for a list of permission index changes"
    }
    ,
    "xml_ns0_permissionGroupOrContainerNode" : {
      "type" : "object",
      "title" : "permissionGroupOrContainerNode",
      "allOf" : [
        {
          "properties" : {
            "approval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionApprovalNode"
            },
            "groupDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "reqDesc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requester" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of approval"
    }
    ,
    "xml_ns0_permissionListNode" : {
      "type" : "object",
      "title" : "permissionListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "arraySize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "excludeProvisioningRequests" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "excludeResources" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "excludeRoles" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "permissions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionNode"
            },
            "teamDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_permissionNode" : {
      "type" : "object",
      "title" : "permissionNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "bulkRequestable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "categories" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataItems" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afDataItemNode"
            },
            "desc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "edition" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "excluded" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "expiresAfter" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isExpirationRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isNewForm" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "link" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "multiAssignable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "objClass" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permParams" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionParamNode"
            },
            "permission" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestForm" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestFormId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "teams" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB node for information about a permission as returned from a Permission\nIndex search. See the REST spec for further details."
    }
    ,
    "xml_ns0_permissionParamNode" : {
      "type" : "object",
      "title" : "permissionParamNode",
      "allOf" : [
        {
          "properties" : {
            "codemapKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entitlementDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "hidden" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "multivalue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "optionQueryUrl" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "static" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "valueLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Permission Parameter Node"
    }
    ,
    "xml_ns0_permissionReqNode" : {
      "type" : "object",
      "title" : "permissionReqNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "entityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "proxyFor" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Requested permission node"
    }
    ,
    "xml_ns0_permissionRequestHistoryFilterNode" : {
      "type" : "object",
      "title" : "permissionRequestHistoryFilterNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "reason" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientContainers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientGroups" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requesters" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of request history filter request. It is used to filter the results of permission request history"
    }
    ,
    "xml_ns0_permissionRequestHistoryListNode" : {
      "type" : "object",
      "title" : "permissionRequestHistoryListNode",
      "allOf" : [
        {
          "properties" : {
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "requests" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionRequestHistoryNode"
            },
            "total" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "totalSize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "List of permission request history"
    }
    ,
    "xml_ns0_permissionRequestHistoryNode" : {
      "type" : "object",
      "title" : "permissionRequestHistoryNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "comments" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afCommentNode"
            },
            "confirmationNumber" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "effectiveDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "entityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "expirationDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "link" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "processState" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "proxyUserFullName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "reason" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipient" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "requestOper" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "requestState" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "requestStatus" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requester" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requesterName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requesterType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "retractable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB/Jersey node for permission request history"
    }
    ,
    "xml_ns0_prdApprovalNode" : {
      "type" : "object",
      "title" : "prdApprovalNode",
      "allOf" : [
        {
          "properties" : {
            "approvalDataItem" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_dataItemInputNode"
            },
            "approvalFormDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvalOrder" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "approvalTimeout" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approversType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "escalationAdressee" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "escalationAdresseeType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "escalationTimeout" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "timeOutAction" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Pojo for approval Node"
    }
    ,
    "xml_ns0_prdCreateDataNode" : {
      "type" : "object",
      "title" : "prdCreateDataNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Data Node Input."
    }
    ,
    "xml_ns0_prdCreateNode" : {
      "type" : "object",
      "title" : "prdCreateNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "approvalType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approveInfo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_prdApprovalNode"
            },
            "cn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "data" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_prdCreateDataNode"
            },
            "isCustomTemplate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isLoggingRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isNotificationRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "permissionDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permissionType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "prdDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_prdCreateDataNode"
            },
            "prdName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_prdCreateDataNode"
            },
            "processType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestInfo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_prdRequestNode"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "template" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "trustees" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "wfData" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Workflow Creation Node."
    }
    ,
    "xml_ns0_prdRequestNode" : {
      "type" : "object",
      "title" : "prdRequestNode",
      "allOf" : [
        {
          "properties" : {
            "requestDataItem" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_dataItemInputNode"
            },
            "requesterFormDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Pojo for Request Info"
    }
    ,
    "xml_ns0_preferencesNode" : {
      "type" : "object",
      "title" : "preferencesNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "columns" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isPreferenceAvailable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "openFormInPopUp" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "settingFor" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Used for task/request settings"
    }
    ,
    "xml_ns0_principalListNode" : {
      "type" : "object",
      "title" : "principalListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "principals" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "PrincipalsListNode for specifying all principals in the REST api."
    }
    ,
    "xml_ns0_processNode" : {
      "type" : "object",
      "title" : "processNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "activityId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "correlationId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataItems" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_dataItemNode"
            },
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "initiator" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isSoDoverrideRequested" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "processId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestAction" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sodOverride" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sods" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Workflow Process Node"
    }
    ,
    "xml_ns0_provisioningRequestNode" : {
      "type" : "object",
      "title" : "provisioningRequestNode",
      "allOf" : [
        {
          "properties" : {
            "flowStrategy" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "operation" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "prdCN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "prdCategory" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "prdDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_prdCreateDataNode"
            },
            "prdName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_prdCreateDataNode"
            },
            "prdStatus" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "processFlowXML" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "processType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestXML" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "trustees" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "wfData" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "xmlData" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_provisioningStatusListNode" : {
      "type" : "object",
      "title" : "provisioningStatusListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "provisioningStatusList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_provisioningStatus"
            }
          }
        }
      ],
      "description" : "Pojo for Provisioning status List."
    }
    ,
    "xml_ns0_proxyDefNode" : {
      "type" : "object",
      "title" : "proxyDefNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "assignedUserDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assignedUserName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assignedUserteamList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_targetSetNode"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "editable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "expirytime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isNotificationRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "notificationAddresseeType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "notifyUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "proxyForContainers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_proxyFor"
            },
            "proxyForGroups" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_proxyFor"
            },
            "proxyForUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_proxyFor"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_queryNode" : {
      "type" : "object",
      "title" : "queryNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entityKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "parameters" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_queryParameterNode"
            },
            "returnAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_queryParameterNode" : {
      "type" : "object",
      "title" : "queryParameterNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_recipientNode" : {
      "type" : "object",
      "title" : "recipientNode",
      "allOf" : [
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isGroupAssignment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "targetSetList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_targetSetNode"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "java bean populated targetset"
    }
    ,
    "xml_ns0_relationshipNode" : {
      "type" : "object",
      "title" : "relationshipNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "displayName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sourceAttributeKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sourceEntityKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "targetAttributeKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "targetEntityKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_requestDefNode" : {
      "type" : "object",
      "title" : "requestDefNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of FullName."
    }
    ,
    "xml_ns0_requestFormPermissionsNode" : {
      "type" : "object",
      "title" : "requestFormPermissionsNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "data" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_formDataItemNode"
            },
            "recipients" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_recipientNode"
            },
            "reqPermissions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Member variable declarion section",
"$ref" : "#/definitions/xml_ns0_permissionReqNode"
            }
          }
        }
      ],
      "description" : "This Object class is used to map the request data coming from the client.\nUsing for only new request forms."
    }
    ,
    "xml_ns0_requestNode" : {
      "type" : "object",
      "title" : "requestNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "effDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "expDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "process" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_processNode"
            },
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "reason" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipients" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_recipientNode"
            },
            "reqPermissions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionReqNode"
            },
            "sodJustification" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Request Node"
    }
    ,
    "xml_ns0_responseNode" : {
      "type" : "object",
      "title" : "responseNode",
      "allOf" : [
        {
          "properties" : {
            "assignFromUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userNode"
            },
            "assignToUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userNode"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "errCode" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "instanceId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "reason" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "retry" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "revokeFrom" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of a singular action response"
    }
    ,
    "xml_ns0_singlePermReqNode" : {
      "type" : "object",
      "title" : "singlePermReqNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dataItems" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afDataItemNode"
            },
            "effDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "entityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "expDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isBulkApproval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "permReqParams" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_parameterNode"
            },
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "reason" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipients" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_recipientNode"
            },
            "sodJustification" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Request Node"
    }
    ,
    "xml_ns0_targetGroupNode" : {
      "type" : "object",
      "title" : "targetGroupNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "groupdDns" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "teamDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_targetSetListNode" : {
      "type" : "object",
      "title" : "targetSetListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "arraySize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "teams" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_targetSetNode"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_targetSetNode" : {
      "type" : "object",
      "title" : "targetSetNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "allUsers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "domainTypes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "excludeProvisioningRequests" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionNode"
            },
            "excludeResources" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionNode"
            },
            "excludeRoles" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionNode"
            },
            "includeManager" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "localizedDescriptions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeLocaleInfo"
            },
            "localizedNames" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeLocaleInfo"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permissionList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionNode"
            },
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "readOnly" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "recipients" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_recipientNode"
            },
            "requestors" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_recipientNode"
            }
          }
        }
      ],
      "description" : "java bean populated targset"
    }
    ,
    "xml_ns0_targetSetPermissionReqNode" : {
      "type" : "object",
      "title" : "targetSetPermissionReqNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "targetSetDnList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "useExcludePermList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "Requested permission node"
    }
    ,
    "xml_ns0_taskSubmissionNode" : {
      "type" : "object",
      "title" : "taskSubmissionNode",
      "allOf" : [
        {
          "properties" : {
            "afTaskNode" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_afTaskActionNode"
            },
            "comment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "primaryPrincipal" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_terminateInfoNode" : {
      "type" : "object",
      "title" : "terminateInfoNode",
      "allOf" : [
        {
          "properties" : {
            "comment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "primaryPrincipal" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "processes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_uiItemListNode" : {
      "type" : "object",
      "title" : "uiItemListNode",
      "allOf" : [
        {
          "properties" : {
            "items" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_uiItemNode"
            }
          }
        }
      ],
      "description" : "List of ui items"
    }
    ,
    "xml_ns0_uiItemNode" : {
      "type" : "object",
      "title" : "uiItemNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "apiUrl" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "appUrl" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "bulkRequestable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "desc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "idmdashAppUrl" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "idmdashImage" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "image" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "itemCategoryId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "itemOrder" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "menuKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "menuOrder" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "parentMenuKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "subType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation of a ui configuration item node"
    }
    ,
    "xml_ns0_userDefaultAttrNode" : {
      "type" : "object",
      "title" : "userDefaultAttrNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "hidden" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of the default User Attributes"
    }
    ,
    "xml_ns0_userDefaultNode" : {
      "type" : "object",
      "title" : "userDefaultNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "attributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userDefaultAttrNode"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of default user."
    }
    ,
    "xml_ns0_userEntitlementInfoNode" : {
      "type" : "object",
      "title" : "userEntitlementInfoNode",
      "allOf" : [
        {
          "properties" : {
            "entitlementValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entitlementValueNode"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_userInfoListNode" : {
      "type" : "object",
      "title" : "userInfoListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "arraySize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_userInfoNode"
            }
          }
        }
      ],
      "description" : "List of user info nodes"
    }
    ,
    "xml_ns0_userInfoNode" : {
      "type" : "object",
      "title" : "userInfoNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "attributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attrNode"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "groupMemberof" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "image" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "imageURL" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of UserInfo."
    }
    ,
    "xml_ns0_userNode" : {
      "type" : "object",
      "title" : "userNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "firstName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lastName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_userRenameNode" : {
      "type" : "object",
      "title" : "userRenameNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "newUserDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "oldUserDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_WFApprovalNode" : {
      "type" : "object",
      "title" : "WFApprovalNode",
      "allOf" : [
        {
          "properties" : {
            "approvalDataItem" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_dataItemInputNode"
            },
            "approvalFormDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Pojo for approval Node"
    }
    ,
    "xml_ns0_WFCreateDataNode" : {
      "type" : "object",
      "title" : "WFCreateDataNode",
      "allOf" : [
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Data Node Input."
    }
    ,
    "xml_ns0_WFCreateNode" : {
      "type" : "object",
      "title" : "WFCreateNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "approveInfo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_WFApprovalNode"
            },
            "cn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "data" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_WFCreateDataNode"
            },
            "isLoggingRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "prdDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_WFCreateDataNode"
            },
            "prdName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_WFCreateDataNode"
            },
            "requestInfo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_WFRequestNode"
            },
            "template" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "wfData" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Workflow Creation Node."
    }
    ,
    "xml_ns0_WFDataItemNode" : {
      "type" : "object",
      "title" : "WFDataItemNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "controlType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "fieldKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "targetType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Workflow Template Node."
    }
    ,
    "xml_ns0_WFDataItemsListNode" : {
      "type" : "object",
      "title" : "WFDataItemsListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "dataItems" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_WFDataItemNode"
            },
            "size" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "Workflow template List Node."
    }
    ,
    "xml_ns0_WFDataListNode" : {
      "type" : "object",
      "title" : "WFDataListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "prdTemplates" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_WFDataNode"
            },
            "size" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "Workflow template List Node."
    }
    ,
    "xml_ns0_WFDataNode" : {
      "type" : "object",
      "title" : "WFDataNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "cn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "templateName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Workflow Template Node."
    }
    ,
    "xml_ns0_WFFormsListNode" : {
      "type" : "object",
      "title" : "WFFormsListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "size" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "worfklowFormsList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_WFDataNode"
            }
          }
        }
      ],
      "description" : "Workflow template List Node."
    }
    ,
    "xml_ns0_WFRequestNode" : {
      "type" : "object",
      "title" : "WFRequestNode",
      "allOf" : [
        {
          "properties" : {
            "requestDataItem" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_dataItemInputNode"
            },
            "requesterFormDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Pojo for Request Info"
    }
    ,
    "xml_ns0_XSSValidationNode" : {
      "type" : "object",
      "title" : "XSSValidationNode",
      "allOf" : [
        {
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_paginationParam" : {
      "type" : "object",
      "title" : "paginationParam",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "orderBy" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "pageSize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "sortBy" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "startIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_adminAssignmentNode" : {
      "type" : "object",
      "title" : "adminAssignmentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "adminType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "adminTypeKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assignee" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assigneeDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assignmentType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "assignmentTypeKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "comment" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "domain" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "domainType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "effectiveDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "expirationDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_adminAfDataItem" : {
      "type" : "object",
      "title" : "adminAfDataItem",
      "allOf" : [
        {
          "properties" : {
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "multiValued" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "readOnly" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "valueType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB representation info service attributes"
    }
    ,
    "xml_ns0_attributeNode" : {
      "type" : "object",
      "title" : "attributeNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "attributeValues" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "object"
            },
            "choiceList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminJaxbMapNode"
            },
            "controlType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "formatType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isClickable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isEditable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isHideable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isMultivalued" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isSearchable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isSortable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "AttributeNode which provide list of values for the virtualEntityAttribute"
    }
    ,
    "xml_ns0_adminAttributesListNode" : {
      "type" : "object",
      "title" : "adminAttributesListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "attributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminUserAttribute"
            },
            "attributesList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeNode"
            },
            "container" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayPhoto" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "namingAttr" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeNode"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "primaryAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeNode"
            },
            "secondaryttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeNode"
            }
          }
        }
      ],
      "description" : "userInputNode for CreateOpertaion"
    }
    ,
    "xml_ns0_cacheConfigNode" : {
      "type" : "object",
      "title" : "cacheConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "clusterCurrentProps" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "clusterEnabled" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "clusterEnabledCurrentValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "clusterPermIndexCurrentProps" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "clusterProps" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "currentEvictionPolicyClass" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "currentGroupID" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "currentMaxNodes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "currentPermIndexGroupID" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "currentTimeToLive" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "currentWakeUpInterval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "evictionPolicyClass" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "groupID" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localClusterEnabled" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localClusterProps" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localEvictionPolicyClass" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localGroupID" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localLockAcquTimeout" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localMaxNodes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localTimeToLiveSeconds" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localWakeUpIntervalSeconds" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lockAcquCurrentTimeout" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lockAcquTimeout" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "maxNodes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permIndexClusterEnabled" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permIndexClusterEnabledCurrentValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permIndexClusterProps" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permIndexGroupID" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "timeToLiveSeconds" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "wakeUpIntervalSeconds" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_cefConfigNode" : {
      "type" : "object",
      "title" : "cefConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "destinationHost" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "destinationPort" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "intermediateStoragePath" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "keyStorePWD" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "keyStorePath" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "protocol" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "useTLS" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_customizeCacheNode" : {
      "type" : "object",
      "title" : "customizeCacheNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "cacheActive" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "cacheEnable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "cacheReadonly" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "cacheValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "enableLocalMaxage" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "enableLocalMaxnodes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "enableLocalTimetolive" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "globalMaxage" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "globalMaxnodes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "globalTimetolive" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "loacalTimetolive" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localMaxage" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "localMaxnodes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "maxageCurrent" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "maxnodesCurrent" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "timetoliveCurrent" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_adminDriver" : {
      "type" : "object",
      "title" : "adminDriver",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of Drivers."
    }
    ,
    "xml_ns0_engineConfigNode" : {
      "type" : "object",
      "title" : "engineConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "cleanupInterval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "completedProcessTimeout" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "enableEmailNotification" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "engineId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "heartbeatFactor" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "heartbeatInterval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "initialPoolSize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "keepAliveTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "maxPoolSize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "maxShutdownTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "minPoolSize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "pendingInterval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "processCacheInitialCapacity" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "processCacheLoadFactor" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "processCacheMaxCapacity" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "retryQueueInterval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "userActivityTimeout" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "webServiceActivityTimeout" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "Holds the engine configuration object"
    }
    ,
    "xml_ns0_generalDispSettingNode" : {
      "type" : "object",
      "title" : "generalDispSettingNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "defaultRowsPerPage" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "newRequestDefaultSortByOption" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "optionsRowsPerPage" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_adminJaxbMapNode" : {
      "type" : "object",
      "title" : "adminJaxbMapNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Node to Handle Map operation for jerseyFrameWork"
    }
    ,
    "xml_ns0_jaxBMapNodeList" : {
      "type" : "object",
      "title" : "jaxBMapNodeList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "mapList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminJaxbMapNode"
            }
          }
        }
      ],
      "description" : "provides list of map mainly ment for jersey response"
    }
    ,
    "xml_ns0_logConfigurationResponseNode" : {
      "type" : "object",
      "title" : "logConfigurationResponseNode",
      "allOf" : [
        {
          "properties" : {
            "cefConfigs" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_cefConfigNode"
            },
            "changeAllLogs" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "enableCEF" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "globalLogLevel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "logConfigurations" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_logNode"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "persist" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "total" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "totalSize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "JAXB node for a log configurations list. Details in the REST spec."
    }
    ,
    "xml_ns0_logNode" : {
      "type" : "object",
      "title" : "logNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "logAdditivity" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "logLevel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "packageConfigured" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_packageNode"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_packageNode" : {
      "type" : "object",
      "title" : "packageNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "packageDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "packageName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_adminParamType" : {
      "type" : "object",
      "title" : "adminParamType",
      "allOf" : [
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_adminPermissionsList" : {
      "type" : "object",
      "title" : "adminPermissionsList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "arraySize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "assignedToDN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "permissions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminPerminfo"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_adminPerminfo" : {
      "type" : "object",
      "title" : "adminPerminfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "bulkRequestable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "categories" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataItems" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminAfDataItem"
            },
            "desc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "edition" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entityType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "expiresAfter" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isExpirationRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "link" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "multiAssignable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "objClass" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "permParams" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminPermParameter"
            },
            "permission" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestForm" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "JAXB node for information about a permission as returned from a Permission\nIndex search. See the REST spec for further details."
    }
    ,
    "xml_ns0_adminPermParameter" : {
      "type" : "object",
      "title" : "adminPermParameter",
      "allOf" : [
        {
          "properties" : {
            "codemapKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entitlementDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "hidden" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "multivalue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "optionQueryUrl" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "static" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "valueLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Permission Parameter Node"
    }
    ,
    "xml_ns0_proxyConfigNode" : {
      "type" : "object",
      "title" : "proxyConfigNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "proxyNotfTemplate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "proxyRetentionTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "JAXB representation of proxy Admin configuration."
    }
    ,
    "xml_ns0_proxyDelSettingsNode" : {
      "type" : "object",
      "title" : "proxyDelSettingsNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "cleanUpSeviceActivationInteval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "cleanupChoice" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lastCleanUpDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "scheduledCleanUpDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "syncServiceActivationInterval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "JAXB representation of proxy Admin configuration."
    }
    ,
    "xml_ns0_requestSettingNode" : {
      "type" : "object",
      "title" : "requestSettingNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "allColumns" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminParamType"
            },
            "columnsForUserOverride" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminParamType"
            },
            "defaultColumns" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminParamType"
            },
            "requestListColumnsOverride" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "requestListSort" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestListSortDesc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_revokeAssignmentNode" : {
      "type" : "object",
      "title" : "revokeAssignmentNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "assignmentDomain" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "identity" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isAllPermissions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_taskSettingNode" : {
      "type" : "object",
      "title" : "taskSettingNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "allColumns" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminParamType"
            },
            "columnsForSort" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminParamType"
            },
            "columnsForUserOverride" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminParamType"
            },
            "defaultColumns" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminParamType"
            },
            "taskDetailClaim" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "taskDetailClaimOverride" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "taskDetailOpenOverride" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "taskListColumnsOverride" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "taskListSort" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "taskListSortDesc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_adminUserAttribute" : {
      "type" : "object",
      "title" : "adminUserAttribute",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_adminXSSValidation"
        },
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "hidden" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of the default User Attributes"
    }
    ,
    "xml_ns0_adminXSSValidation" : {
      "type" : "object",
      "title" : "adminXSSValidation",
      "allOf" : [
        {
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_approverNode" : {
      "type" : "object",
      "title" : "approverNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sequence" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_assignmentStatusNode" : {
      "type" : "object",
      "title" : "assignmentStatusNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "approvalProcessId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "correlationID" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dns" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "dynamicParams" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_dynamicParamListNode"
            },
            "effectiveDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "expiryDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "grant" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "instanceGuId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "names" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientDns" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientFullName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_recipientNode"
            },
            "recipientType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipientTypeSubContainer" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "requestDate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requesterDisplayName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requesterDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "source" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "statusCode" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "statusDisplay" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_attributeModifiedValueNode" : {
      "type" : "object",
      "title" : "attributeModifiedValueNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isEditable" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isMultivalued" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of the other attribute changed values"
    }
    ,
    "xml_ns0_catalogUserNode" : {
      "type" : "object",
      "title" : "catalogUserNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "firstName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "lastName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_catalogCategories" : {
      "type" : "object",
      "title" : "catalogCategories",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_catalogContainer" : {
      "type" : "object",
      "title" : "catalogContainer",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "level" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_DNNode" : {
      "type" : "object",
      "title" : "DNNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Node to Handle Map operation for jerseyFrameWork"
    }
    ,
    "xml_ns0_driverNode" : {
      "type" : "object",
      "title" : "driverNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "entitlements" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entitlementNode"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestFrom" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of Drivers."
    }
    ,
    "xml_ns0_dynamicParamListNode" : {
      "type" : "object",
      "title" : "dynamicParamListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "dynamicParamList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_dynamicParamNode"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_dynamicParamNode" : {
      "type" : "object",
      "title" : "dynamicParamNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "paramLabel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "paramName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "paramValues" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_entitlementListNode" : {
      "type" : "object",
      "title" : "entitlementListNode",
      "allOf" : [
        {
          "properties" : {
            "entitlements" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entitlementNode"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "viewID" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "List of EntitlementNode items"
    }
    ,
    "xml_ns0_entitlementNode" : {
      "type" : "object",
      "title" : "entitlementNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "correlationId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "driverName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entitlementType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isInvalidValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isSingleValued" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "paramDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "paramLogicSystem" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "paramType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "paramTypes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_paramNode"
            },
            "parameter" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "parameterName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "parameterValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "parameters" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestAgent" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "resourceCN" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "resourceDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "resourceName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "views" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entitlementViewValue"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_entitlementValueNode" : {
      "type" : "object",
      "title" : "entitlementValueNode",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "driver" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entitlementName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "param" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "paramType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "resourceDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "resourceName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "valueDisplayName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "views" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entitlementViewValueNode"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_entitlementViewValue" : {
      "type" : "object",
      "title" : "entitlementViewValue",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "queryKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "viewID" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Class to model entitlement views or logical systems"
    }
    ,
    "xml_ns0_entitlementViewValueNode" : {
      "type" : "object",
      "title" : "entitlementViewValueNode",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entitlementName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "queryKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "viewID" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_localizedDescNode" : {
      "type" : "object",
      "title" : "localizedDescNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "desc" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "locale" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_localizedNameNode" : {
      "type" : "object",
      "title" : "localizedNameNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "locale" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_ownerNode" : {
      "type" : "object",
      "title" : "ownerNode",
      "allOf" : [
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_paramNode" : {
      "type" : "object",
      "title" : "paramNode",
      "allOf" : [
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_resourceNode" : {
      "type" : "object",
      "title" : "resourceNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "allowMultiple" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "approvalIsStandard" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "approvalOverRide" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "approvalRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "approvers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_approverNode"
            },
            "categories" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_catalogCategories"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "driver" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entitlementValues" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entitlementValueNode"
            },
            "entitlements" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_entitlementNode"
            },
            "entityKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "expiresAfter" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isActive" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isExisted" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "isExpirationRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "localizedDescriptions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_localizedDescNode"
            },
            "localizedNames" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_localizedNameNode"
            },
            "managedBy" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "mappingDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminAttributeNode"
            },
            "otherModifiedAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeModifiedValueNode"
            },
            "owners" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_ownerNode"
            },
            "provisioningRequestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "quorum" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestDefName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "resourceParameters" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_resourceParamNode"
            },
            "resourceWeightage" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "revokeApprovalIsStandard" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "revokeApprovers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_approverNode"
            },
            "revokeEqualsGrant" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "revokeQuorum" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "revokeRequestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "revokeRequestDefName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "revokeRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "subContainer" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of Resource."
    }
    ,
    "xml_ns0_resourceParamNode" : {
      "type" : "object",
      "title" : "resourceParamNode",
      "allOf" : [
        {
          "properties" : {
            "binding" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "codeMapKey" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "displayValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "entitlementDn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "hide" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "instance" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "localizedDisplayValues" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_localizedNameNode"
            },
            "multiValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "scope" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "staticValue" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_resourcesListResponseNode" : {
      "type" : "object",
      "title" : "resourcesListResponseNode",
      "allOf" : [
        {
          "properties" : {
            "arraySize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_resourceNode"
            },
            "total" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "totalSize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "xml_ns0_roleLevel" : {
      "type" : "object",
      "title" : "roleLevel",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "cn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "level" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "localizedNames" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_localizedNameNode"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_roleNode" : {
      "type" : "object",
      "title" : "roleNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "approval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_permissionApprovalNode"
            },
            "approvalApprovers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_approverNode"
            },
            "approvalIsStandard" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "approvalQuorum" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvalRequestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvalRequestDefName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvalRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "categories" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_catalogCategories"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "level" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "localizedDescriptions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_localizedDescNode"
            },
            "localizedNames" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_localizedNameNode"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_adminAttributeNode"
            },
            "otherModifiedAttributes" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_attributeModifiedValueNode"
            },
            "owners" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_ownerNode"
            },
            "requestDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requester" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "revokeRequestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "revokeRequired" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "roleLevel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_roleLevel"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "valid values are STATUS_CREATeED (50) or STATUS_DELETE_PENDING (15)",
"type" : "number"
            },
            "subContainer" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of Role."
    }
    ,
    "xml_ns0_roleResourceSettingsNode" : {
      "type" : "object",
      "title" : "roleResourceSettingsNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "concatDisplayElements" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "defaultResourceGrantRequestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "defaultResourceRevokeRequestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "defaultRoleRequestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "defaultSODRequestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "defaultSODRequestDefName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "queryDisplayElements" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "queryRefreshRate" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "queryTimeout" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "reportContainer" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "resourceContainer" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "resourceRequestContainer" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "roleAssignmentGracePeriod" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "roleContainer" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "roleLevels" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_roleLevel"
            },
            "roleRequestContainer" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "roleToContainerApproval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "roleToGroupApproval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "roleToRoleApproval" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "sodApprovers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_approverNode"
            },
            "sodContainer" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "sodQuorum" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Holds the representation of roles and resources settings configuration"
    }
    ,
    "xml_ns0_rolesListResponseNode" : {
      "type" : "object",
      "title" : "rolesListResponseNode",
      "allOf" : [
        {
          "properties" : {
            "arraySize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_roleNode"
            },
            "total" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "totalSize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : "JAXB node for a Permission Index search response. Details in the REST spec."
    }
    ,
    "xml_ns0_sodApprovalType" : {
      "type" : "string",
      "title" : "sodApprovalType",
          "enum" : [
            "allowWithWorkflow",
            "alwaysAllow"
          ],
      "description" : "Sod Approval Type Node"
    }
    ,
    "xml_ns0_sodNode" : {
      "type" : "object",
      "title" : "sodNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "approvalQuorum" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvalRequestDef" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvalRequestDefName" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "approvers" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_approverNode"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "hasConflicts" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "isDefaultApproversUsed" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "localizedDescriptions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_localizedDescNode"
            },
            "localizedNames" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_localizedNameNode"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "roleLevel" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "Role level of the SOD",
"type" : "string"
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_roleNode"
            },
            "sodApprovalType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_sodApprovalType"
            }
          }
        }
      ],
      "description" : "Holds the representation of SOD."
    }
    ,
    "xml_ns0_sodsListResponseNode" : {
      "type" : "object",
      "title" : "sodsListResponseNode",
      "allOf" : [
        {
          "properties" : {
            "arraySize" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "nextIndex" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "sods" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_sodNode"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_subRoleRequestNode" : {
      "type" : "object",
      "title" : "subRoleRequestNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_catalogXSSValidation"
        },
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestDescription" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_catalogXSSValidation" : {
      "type" : "object",
      "title" : "catalogXSSValidation",
      "allOf" : [
        {
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields.\nAny input node that represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_faultCode" : {
      "type" : "object",
      "title" : "faultCode",
      "allOf" : [
        {
          "properties" : {
            "Subcode" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_valueCode"
            },
            "Value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_ncacFault" : {
      "type" : "object",
      "title" : "ncacFault",
      "allOf" : [
        {
          "properties" : {
            "Code" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_faultCode"
            },
            "Reason" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_reasonCode"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_reasonCode" : {
      "type" : "object",
      "title" : "reasonCode",
      "allOf" : [
        {
          "properties" : {
            "Text" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_valueCode" : {
      "type" : "object",
      "title" : "valueCode",
      "allOf" : [
        {
          "properties" : {
            "Value" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_userInfoBean" : {
      "type" : "object",
      "title" : "userInfoBean",
      "allOf" : [
        {
          "properties" : {
            "addressees" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "allAddressees" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "delegated" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "object"
            },
            "helpDeskUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "primaryPrincipal" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "provAdmin" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "proxy" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "proxyUser" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "self" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_proxyDefinitionListNode" : {
      "type" : "object",
      "title" : "proxyDefinitionListNode",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "configureProxy" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            },
            "proxyDefinitions" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_proxyDefNode"
            },
            "userType" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_proxyFor" : {
      "type" : "object",
      "title" : "proxyFor",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XSSValidationNode"
        },
        {
          "properties" : {
            "dn" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "targetSetList" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_targetSetNode"
            },
            "username" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "An abstract class that does XSS validation on its text fields. Any input node\nthat represents user input for a HTTP PUT/POST should extend this class."
    }
    ,
    "xml_ns0_provisioningStatus" : {
      "type" : "object",
      "title" : "provisioningStatus",
      "allOf" : [
        {
          "properties" : {
            "activityId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "correlationId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"$ref" : "#/definitions/xml_ns0_provisioningStatusId"
            },
            "message" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "provisioningTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "recipient" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "resultTime" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "state" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            },
            "statusId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "versionNo" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_provisioningStatusId" : {
      "type" : "object",
      "title" : "provisioningStatusId",
      "allOf" : [
        {
          "properties" : {
            "activityId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "requestId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            },
            "statusId" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_IDelegatorItem" : {
      "type" : "object",
      "title" : "IDelegatorItem",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_response" : {
      "type" : "object",
      "title" : "response",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_JSONObject" : {
      "type" : "object",
      "title" : "JSONObject",
      "allOf" : [
        {
          "properties" : {
            "escapeForwardSlashAlways" : {
              "xml" : {
                "namespace" : ""
              },
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
  },
  "paths": {
    "\/assignments" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to revoke roles and resources assigned to the logged-in user.",
        "description" : "The objective of this API is to revoke roles and resources assigned to the logged-in user.\nThis API takes the list of the permissions and logged-in user details as input params.\nThen the API use the logged-in user-dn to revoke the listed roles and resources.\n\nRequest permission revocation for roles and resources assigned to the logged-in user.",
        "operationId" : "resource_Access_removeLoggedInUserPermissionAssignments_DELETE",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "JSON payload that includes the resource(s) and roles(s) that need to be revoked from the logged-in user",
"$ref" : "#/definitions/json_PermissionAssignmentListNode"
            },
            "description" : "JSON payload that includes the resource(s) and roles(s) that need to be revoked from the logged-in user"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "entityType" : "...",
  "reason" : "...",
  "instanceId" : "...",
  "requestId" : "...",
  "errCode" : "...",
  "name" : "...",
  "dn" : "...",
  "retry" : true,
  "revokeFrom" : "...",
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while revoking permission from user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "entityType" : "...",
  "reason" : "...",
  "instanceId" : "...",
  "requestId" : "...",
  "errCode" : "...",
  "name" : "...",
  "dn" : "...",
  "retry" : true,
  "revokeFrom" : "...",
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ]
}
            },
            "description" : "Internal exception while revoking permission from user"
          },
          "204" : {
            "schema" : {
"description" : "status of each revocation request, or NCAC error response if major exception occurs.",
"$ref" : "#/definitions/json_ResponseNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "entityType" : "...",
  "reason" : "...",
  "instanceId" : "...",
  "requestId" : "...",
  "errCode" : "...",
  "name" : "...",
  "dn" : "...",
  "retry" : true,
  "revokeFrom" : "...",
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ]
}
            },
            "description" : "status of each revocation request, or NCAC error response if major exception occurs."
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to provide the permission assignment of logged-in user.",
        "description" : "The objective of this API is to provide the permission assignment of logged-in user.\nThis API takes the logged-in user DN as input parameter.\nBased on this parameter API finds the assigned permissions of that corresponding DN.\nThis API supports Searching, Sorting, Pagination on the fetched data.\nThis API supports caching technology also in two different ways, and it can achieve from the client side input parameters.<\/br>\n1. Refresh and reload the new data into the cache.<\/br>\n2. is cache bypass<\/br>",
        "operationId" : "resource_Access_getLoggedInUserPermissionAssignments_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "forceRefresh",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "force a refresh of the permission assignment from the IDV, do not\nuse what may have already been cached"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "index to start from"
          },
          {
            "name" : "noCache",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Do not cache permission assignments in server side cache"
          },
          {
            "name" : "q",
            "in" : "query",
            "type" : "string",
            "description" : "search permission name or description containing this text"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "number of assignments to return in one batch"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "sort on name or description column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "asc=Ascending, desc=Descending"
          },
          {
            "name" : "token",
            "in" : "query",
            "type" : "string",
            "description" : "token used for caching result set, client should use this in\nsubsequent calls to take advantage of caching"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting permission assignments",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "Internal exception while getting permission assignments"
          },
          "200" : {
            "schema" : {
"description" : "permission assignments",
"$ref" : "#/definitions/json_PermissionAssignmentListNode"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "permission assignments"
          }
        }
      }
    }
    ,
    "\/availability" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Removes availability configuration for the given availability id.",
        "description" : "Removes availability configuration for the given availability id. Bulk\nremoval is also supported. <\/br>",
        "operationId" : "resource_Access_removeAvailability_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "list of availability nodes with availability id which needs to be\nremoved.",
"$ref" : "#/definitions/json_AvailabilityListNode"
            },
            "description" : "list of availability nodes with availability id which needs to be\nremoved."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Error in deleting availability configuration ",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "Error in deleting availability configuration "
          },
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AvailabilityListNode"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : ""
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Gets the availability definitions for the logged-in user.",
        "description" : "Gets the availability definitions for the logged-in user.",
        "operationId" : "resource_Access_getLoggedInUserAvailabilty_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting availability definitions.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "Internal exception while getting availability definitions."
          },
          "200" : {
            "schema" : {
"description" : "list of availability.",
"$ref" : "#/definitions/json_AvailabilityListNode"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "list of availability."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Create availability based Delegation.",
        "description" : "Create availability based Delegation.",
        "operationId" : "resource_Access_createAvailabilityDelegation_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "availability node which will be used to create delegation.",
"$ref" : "#/definitions/json_AvailabilityNode"
            },
            "description" : "availability node which will be used to create delegation."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "hasExpiry" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "availableRequestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "allRequests" : true,
  "enableAllRequests" : true,
  "principalUser" : {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  },
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "hasExpiryDuration" : true,
  "expiryDuration" : "...",
  "expiryDurationUnit" : "...",
  "teamscope" : "...",
  "type" : "...",
  "availabilityId" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Error in creating delgation ",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "hasExpiry" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "availableRequestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "allRequests" : true,
  "enableAllRequests" : true,
  "principalUser" : {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  },
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "hasExpiryDuration" : true,
  "expiryDuration" : "...",
  "expiryDurationUnit" : "...",
  "teamscope" : "...",
  "type" : "...",
  "availabilityId" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ]
}
            },
            "description" : "Error in creating delgation "
          },
          "201" : {
            "schema" : {
"description" : "delegation details with assignment id.",
"$ref" : "#/definitions/json_AvailabilityNode"
            },
            "examples" : {
              "application/json" : {
  "hasExpiry" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "availableRequestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "allRequests" : true,
  "enableAllRequests" : true,
  "principalUser" : {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  },
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "hasExpiryDuration" : true,
  "expiryDuration" : "...",
  "expiryDurationUnit" : "...",
  "teamscope" : "...",
  "type" : "...",
  "availabilityId" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ]
}
            },
            "description" : "delegation details with assignment id."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Modify the Availability Delegation Definition.",
        "description" : "Modify the Availability Delegation Definition.",
        "operationId" : "resource_Access_updateAvailability_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "AvailabilityNode which holds fields of availability.",
"$ref" : "#/definitions/json_AvailabilityNode"
            },
            "description" : "AvailabilityNode which holds fields of availability."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "hasExpiry" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "availableRequestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "allRequests" : true,
  "enableAllRequests" : true,
  "principalUser" : {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  },
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "hasExpiryDuration" : true,
  "expiryDuration" : "...",
  "expiryDurationUnit" : "...",
  "teamscope" : "...",
  "type" : "...",
  "availabilityId" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Error in updating availability ",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "hasExpiry" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "availableRequestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "allRequests" : true,
  "enableAllRequests" : true,
  "principalUser" : {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  },
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "hasExpiryDuration" : true,
  "expiryDuration" : "...",
  "expiryDurationUnit" : "...",
  "teamscope" : "...",
  "type" : "...",
  "availabilityId" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ]
}
            },
            "description" : "Error in updating availability "
          },
          "204" : {
            "schema" : {
"description" : "ResponseNode object. If success else return error response.",
"$ref" : "#/definitions/json_AvailabilityNode"
            },
            "examples" : {
              "application/json" : {
  "hasExpiry" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "availableRequestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "allRequests" : true,
  "enableAllRequests" : true,
  "principalUser" : {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  },
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "hasExpiryDuration" : true,
  "expiryDuration" : "...",
  "expiryDurationUnit" : "...",
  "teamscope" : "...",
  "type" : "...",
  "availabilityId" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ]
}
            },
            "description" : "ResponseNode object. If success else return error response."
          }
        }
      }
    }
    ,
    "\/config" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Reads a particular setting from client settings for the given client id.",
        "description" : "Reads a particular setting from client settings for the given client id.\nKey must be formed starting from root key of the client settings with sub\nkeys separated by \".\". Value could be simple object or JSON array. Value\nfrom the settings will be returned as JSON key/value pair",
        "operationId" : "resource_Access_getAdminSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to load corresponding settings for retrieving value of\nthe key (Required)"
          },
          {
            "name" : "key",
            "in" : "query",
            "type" : "string",
            "description" : "Settings key. Expected format - {section}.{key} eg:\ncustomization.displayPhoto (Required)"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception due to incorrect details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception due to incorrect details"
          },
          "200" : {
            "schema" : {
"description" : "Settings of a key in json format",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Settings of a key in json format"
          }
        }
      }
    }
    ,
    "\/counts" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "REST end point to get the user/role/resource counts.",
        "description" : "REST end point to get the user/role/resource counts<br>\ncount will be computed only for the configured container in cleint settings",
        "operationId" : "resource_Access_getCounts_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "resources",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : "If true resource count will be computed"
          },
          {
            "name" : "roles",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : "If true roles count will be computed"
          },
          {
            "name" : "users",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : "If true users count will be computed"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/dashboard" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To get the logged-in user tasks, roles and resources count.",
        "description" : "To get the logged-in user tasks, roles and resources count. - Total\nRoles/Resources/Tasks count. - Count of Tasks / Roles which are going to\nexpire. - Count of claimed tasks.",
        "operationId" : "resource_Access_getUserDashboardCount_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "Client id mapped to the logged in user"
          },
          {
            "name" : "isNewlyAssignedCount",
            "in" : "query",
            "default" : "true",
            "type" : "boolean",
            "description" : "Return newly assigned tasks / roles / resources count."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while counting for dashboard view",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "rolesData" : {
    "expiryRoles" : 12345,
    "newRoles" : 12345,
    "rolesCount" : 12345
  },
  "resourcesData" : {
    "newResources" : 12345,
    "resourcesCount" : 12345
  },
  "tasksData" : {
    "expiryTasksCount" : 12345,
    "newTasks" : 12345,
    "cliamedTasks" : 12345,
    "reassignedTasks" : 12345,
    "delegatedTasks" : 12345,
    "tasksCount" : 12345
  },
  "requestData" : {
    "requestPending" : 12345,
    "requestDenied" : 12345,
    "requestApproved" : 12345,
    "totalRequest" : 12345,
    "requestForOthersPending" : 12345,
    "requestForOthersDenied" : 12345,
    "requestForOthersApproved" : 12345,
    "totalRequestForOthers" : 12345,
    "requestHasMore" : true,
    "otherRequestHasMore" : true
  },
  "helpdeskData" : {
    "openTickets" : 12345,
    "helpdeskProfileNames" : [ "...", "..." ]
  }
}
            },
            "description" : "Internal exception while counting for dashboard view"
          },
          "200" : {
            "schema" : {
"description" : "Tasks, Roles and Resources expire / claimed/ total counts.",
"$ref" : "#/definitions/json_CountsNode"
            },
            "examples" : {
              "application/json" : {
  "rolesData" : {
    "expiryRoles" : 12345,
    "newRoles" : 12345,
    "rolesCount" : 12345
  },
  "resourcesData" : {
    "newResources" : 12345,
    "resourcesCount" : 12345
  },
  "tasksData" : {
    "expiryTasksCount" : 12345,
    "newTasks" : 12345,
    "cliamedTasks" : 12345,
    "reassignedTasks" : 12345,
    "delegatedTasks" : 12345,
    "tasksCount" : 12345
  },
  "requestData" : {
    "requestPending" : 12345,
    "requestDenied" : 12345,
    "requestApproved" : 12345,
    "totalRequest" : 12345,
    "requestForOthersPending" : 12345,
    "requestForOthersDenied" : 12345,
    "requestForOthersApproved" : 12345,
    "totalRequestForOthers" : 12345,
    "requestHasMore" : true,
    "otherRequestHasMore" : true
  },
  "helpdeskData" : {
    "openTickets" : 12345,
    "helpdeskProfileNames" : [ "...", "..." ]
  }
}
            },
            "description" : "Tasks, Roles and Resources expire / claimed/ total counts."
          }
        }
      }
    }
    ,
    "\/delegation" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Remove delegation for the given delegation dn.",
        "description" : "Remove delegation for the given delegation dn. Bulk delegation is also\nsupported. <\/br>\nSample Request Payload : {\"delegations\":[{\n\"assignmentId\":\"cn=2170832c96034b6a8624ddba2d923a9b,cn=DelegateeDefs,cn=AppConfig,cn=UserApplication,cn=driverset1,o=system\"\n}]}",
        "operationId" : "resource_Access_removeDelegation_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "list of delegation nodes which need to be removed.",
"$ref" : "#/definitions/json_DelegationListNode"
            },
            "description" : "list of delegation nodes which need to be removed."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "delegations" : [ {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  }, {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  } ],
  "totalDelegations" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Error in creating delgation ",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "delegations" : [ {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  }, {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  } ],
  "totalDelegations" : 12345
}
            },
            "description" : "Error in creating delgation "
          },
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DelegationListNode"
            },
            "examples" : {
              "application/json" : {
  "delegations" : [ {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  }, {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  } ],
  "totalDelegations" : 12345
}
            },
            "description" : ""
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get the delegation assignments for the logged-in user.",
        "description" : "Get the delegation assignments for the logged-in user.",
        "operationId" : "resource_Access_getLoggedInUserDelegationAssignments_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting Manager and direct reporter's of the user.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "delegations" : [ {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  }, {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  } ],
  "totalDelegations" : 12345
}
            },
            "description" : "Internal exception while getting Manager and direct reporter's of the user."
          },
          "200" : {
            "schema" : {
"description" : "list of delegations.",
"$ref" : "#/definitions/json_DelegationListNode"
            },
            "examples" : {
              "application/json" : {
  "delegations" : [ {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  }, {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  } ],
  "totalDelegations" : 12345
}
            },
            "description" : "list of delegations."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Create new delegation.",
        "description" : "Create new delegation",
        "operationId" : "resource_Access_createDelegation_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "delegation node which will be used to create delegation.",
"$ref" : "#/definitions/json_DelegationNode"
            },
            "description" : "delegation node which will be used to create delegation."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "assignmentId" : "...",
  "isExpires" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "assignToRelationship" : {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  },
  "allRequests" : true,
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignFromGroups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "assignFromContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "teamscope" : "...",
  "type" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ],
  "createAvailability" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Error in creating delgation ",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "assignmentId" : "...",
  "isExpires" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "assignToRelationship" : {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  },
  "allRequests" : true,
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignFromGroups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "assignFromContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "teamscope" : "...",
  "type" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ],
  "createAvailability" : true
}
            },
            "description" : "Error in creating delgation "
          },
          "201" : {
            "schema" : {
"description" : "delegation details with assignment id.",
"$ref" : "#/definitions/json_DelegationNode"
            },
            "examples" : {
              "application/json" : {
  "assignmentId" : "...",
  "isExpires" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "assignToRelationship" : {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  },
  "allRequests" : true,
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignFromGroups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "assignFromContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "teamscope" : "...",
  "type" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ],
  "createAvailability" : true
}
            },
            "description" : "delegation details with assignment id."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Update the given delegation.",
        "description" : "Update the given delegation.",
        "operationId" : "resource_Access_updateDelegation_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "delegation node which need to be updated.",
"$ref" : "#/definitions/json_DelegationNode"
            },
            "description" : "delegation node which need to be updated."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "assignmentId" : "...",
  "isExpires" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "assignToRelationship" : {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  },
  "allRequests" : true,
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignFromGroups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "assignFromContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "teamscope" : "...",
  "type" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ],
  "createAvailability" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Error in creating delgation ",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "assignmentId" : "...",
  "isExpires" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "assignToRelationship" : {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  },
  "allRequests" : true,
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignFromGroups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "assignFromContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "teamscope" : "...",
  "type" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ],
  "createAvailability" : true
}
            },
            "description" : "Error in creating delgation "
          },
          "204" : {
            "schema" : {
"description" : "updated delegation details.",
"$ref" : "#/definitions/json_DelegationNode"
            },
            "examples" : {
              "application/json" : {
  "assignmentId" : "...",
  "isExpires" : true,
  "requestDefs" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "assignToRelationship" : {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  },
  "allRequests" : true,
  "assignFromUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "assignFromGroups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "assignFromContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "assignToUsers" : [ {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "firstName" : "...",
    "lastName" : "..."
  } ],
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "teamscope" : "...",
  "type" : "...",
  "isNotificationRequired" : true,
  "notificationAddresseeType" : "...",
  "notifyUsers" : [ "...", "..." ],
  "createAvailability" : true
}
            },
            "description" : "updated delegation details."
          }
        }
      }
    }
    ,
    "\/featuredItems" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Delete's list of featured items.",
        "description" : "Delete's list of featured items. Response contains details about\nsuccessfully deleted items and those items failed to get deleted.<br>\nNote: <br>\n1) Featured Item - References user permissions.<br>\n2) \"itemId\" is mandatory parameter.",
        "operationId" : "resource_Access_deleteItems_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of featured items node that needs to be deleted.",
"$ref" : "#/definitions/json_UiItemListNode"
            },
            "description" : "- List of featured items node that needs to be deleted."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting featured items.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while deleting featured items."
          },
          "204" : {
            "schema" : {
"description" : "\"itemId\" of deleted featured items.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "\"itemId\" of deleted featured items."
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Return's the list of featured items allowed for the logged in user,\nsorted by categories.",
        "description" : "Return's the list of featured items allowed for the logged in user,\nsorted by categories. <br>\nNote: Featured items are editable if logged in user is an administrator\n(For administrator response parameter \"editable\" will be true).",
        "operationId" : "resource_Access_getFeaturedItems_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting featured items.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "itemCategories" : [ {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  }, {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  } ],
  "uncategorizedItems" : [ {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  }, {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  } ],
  "editable" : true
}
            },
            "description" : "Internal exception while getting featured items."
          },
          "200" : {
            "schema" : {
"description" : "list of featured items allowed for user, sorted by categories.",
"$ref" : "#/definitions/json_ItemsByCategoryNode"
            },
            "examples" : {
              "application/json" : {
  "itemCategories" : [ {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  }, {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  } ],
  "uncategorizedItems" : [ {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  }, {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  } ],
  "editable" : true
}
            },
            "description" : "list of featured items allowed for user, sorted by categories."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Add's list of featured items.",
        "description" : "Add's list of featured items. Response contains details about\nsuccessfully added items and those items failed to get added.<br>\nNote:<br>\n1) Featured Item - References user permissions.<br>\n2) A valid permission DN is mandatory in the \"id\" parameter.",
        "operationId" : "resource_Access_addItems_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of featured items node that needs to be added.",
"$ref" : "#/definitions/json_UiItemListNode"
            },
            "description" : "- List of featured items node that needs to be added."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while adding featured items.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while adding featured items."
          },
          "201" : {
            "schema" : {
"description" : "list of added featured permissions.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "list of added featured permissions."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Update's list of featured items.",
        "description" : "Update's list of featured items. Response contains details about\nsuccessfully updated items and those items failed to get updated.<br>\nNote: <br>\n1) Featured Item - References user permissions.<br>\n2) \"itemId\" is mandatory parameter.",
        "operationId" : "resource_Access_updateItems_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of featured item node that needs to be updated.",
"$ref" : "#/definitions/json_UiItemListNode"
            },
            "description" : "- List of featured item node that needs to be updated."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating featured items.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while updating featured items."
          },
          "204" : {
            "schema" : {
"description" : "list of updated featured items.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "list of updated featured items."
          }
        }
      }
    }
    ,
    "\/forms" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Fetch workflow form for the given id.",
        "description" : "Fetch workflow form for the given id",
        "operationId" : "resource_Access_getFormDetails_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "formContainer",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "id",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "task id if approval form or form id if request form"
          },
          {
            "name" : "pid",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "proxyFor",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "recipient",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching permission index",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while searching permission index"
          },
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/groups" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Delete group for the passed payload object which contains dn.",
        "description" : "Delete group for the passed payload object which contains dn.",
        "operationId" : "resource_Access_removeGroupByID_DELETE",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "contains dn of group which have to delete.",
"$ref" : "#/definitions/json_DeleteGroupNode"
            },
            "description" : "contains dn of group which have to delete."
          }
        ],
        "responses" : {
          "412" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while removing group",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while removing group"
          },
          "204" : {
            "schema" : {
"description" : "dn of the group which got deleted successfully.",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "dn of the group which got deleted successfully."
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Rest Api to list Groups, lists groups in chunks as pages.",
        "description" : "Rest Api to list Groups, lists groups in chunks as pages",
        "operationId" : "resource_Access_searchGroups_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "User input search string against group description"
          },
          {
            "name" : "searchCount",
            "in" : "query",
            "type" : "string",
            "description" : "If {true} Api will respond with group count<br\\>\nelse search result"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Size of the page"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "ASC",
            "type" : "string",
            "description" : "Order of sorting"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching for groups",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "groups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "reason" : "...",
  "totalCount" : 12345
}
            },
            "description" : "Internal exception while searching for groups"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_GroupListNode"
            },
            "examples" : {
              "application/json" : {
  "groups" : [ {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "description" : "...",
    "members" : [ "...", "..." ],
    "container" : "...",
    "membersAction" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "reason" : "...",
  "totalCount" : 12345
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Create group with passed name, container and description values.",
        "description" : "Create group with passed name, container and description values.",
        "operationId" : "resource_Access_createGroup_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "contains groupID(name), description, container.",
"$ref" : "#/definitions/json_GroupNode"
            },
            "description" : "contains groupID(name), description, container."
          }
        ],
        "responses" : {
          "412" : {
            "schema" : {
"description" : "XSS validation failure or invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "description" : "...",
  "members" : [ "...", "..." ],
  "container" : "...",
  "membersAction" : "..."
}
            },
            "description" : "XSS validation failure or invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting group members",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "description" : "...",
  "members" : [ "...", "..." ],
  "container" : "...",
  "membersAction" : "..."
}
            },
            "description" : "Internal exception while getting group members"
          },
          "201" : {
            "schema" : {
"description" : "Newly created group object with dn.",
"$ref" : "#/definitions/json_GroupNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "description" : "...",
  "members" : [ "...", "..." ],
  "container" : "...",
  "membersAction" : "..."
}
            },
            "description" : "Newly created group object with dn."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Modify the existing group,e.",
        "description" : "Modify the existing group,e.g. add or remove the member, modify\ndescription. Group dn is mandatory.",
        "operationId" : "resource_Access_modifyGroup_PUT",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "group object having values which has to be modified.",
"$ref" : "#/definitions/json_GroupNode"
            },
            "description" : "group object having values which has to be modified."
          }
        ],
        "responses" : {
          "412" : {
            "schema" : {
"description" : "XSS validation failure or invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "description" : "...",
  "members" : [ "...", "..." ],
  "container" : "...",
  "membersAction" : "..."
}
            },
            "description" : "XSS validation failure or invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting group members",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "description" : "...",
  "members" : [ "...", "..." ],
  "container" : "...",
  "membersAction" : "..."
}
            },
            "description" : "Internal exception while getting group members"
          },
          "204" : {
            "schema" : {
"description" : "Updated group object",
"$ref" : "#/definitions/json_GroupNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "description" : "...",
  "members" : [ "...", "..." ],
  "container" : "...",
  "membersAction" : "..."
}
            },
            "description" : "Updated group object"
          }
        }
      }
    }
    ,
    "\/helpdesk" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To get the configured HelpDesk users based on the client that user belong\nto.",
        "description" : "To get the configured HelpDesk users based on the client that user belong\nto",
        "operationId" : "resource_Access_getHelpDeskUsers_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "userDN",
            "in" : "query",
            "type" : "string",
            "description" : "User for whom HelpDesk user list prepared"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting helpdesk users...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while getting helpdesk users..."
          },
          "200" : {
            "schema" : {
"description" : "HelpDesk user details",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "HelpDesk user details"
          }
        }
      }
    }
    ,
    "\/notifyService" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To indicate the user about the some of the notification's such as\nexpiring roles/tasks and newly assigned roles/tasks.",
        "description" : "To indicate the user about the some of the notification's such as\nexpiring roles/tasks and newly assigned roles/tasks. <br>\nNote: <br>\n1) New tasks/roles will be fetched based on last logged in time. <br>\n2) Expiring roles/tasks will be fetched based on the \"NotificationExpiry\"\nin the settings page.",
        "operationId" : "resource_Access_getNotificationItems_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "Client Id of logged in user,based on which \"NotificationExpiry\"\ntime is fetched (Optional)."
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Authorization exception while getting user's notification.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "totalCount" : 12345,
  "newResourcesCount" : 12345,
  "newRolesCount" : 12345,
  "newTasksCount" : 12345,
  "newHelpdeskTasksCount" : 12345,
  "notificationsList" : [ {
    "type" : "...",
    "name" : "...",
    "action" : "...",
    "navigation" : "..."
  }, {
    "type" : "...",
    "name" : "...",
    "action" : "...",
    "navigation" : "..."
  } ]
}
            },
            "description" : "Authorization exception while getting user's notification."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user's notification.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "totalCount" : 12345,
  "newResourcesCount" : 12345,
  "newRolesCount" : 12345,
  "newTasksCount" : 12345,
  "newHelpdeskTasksCount" : 12345,
  "notificationsList" : [ {
    "type" : "...",
    "name" : "...",
    "action" : "...",
    "navigation" : "..."
  }, {
    "type" : "...",
    "name" : "...",
    "action" : "...",
    "navigation" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting user's notification."
          },
          "200" : {
            "schema" : {
"description" : "Newly added roles/tasks and expiring roles/tasks.",
"$ref" : "#/definitions/json_NotificationServiceNode"
            },
            "examples" : {
              "application/json" : {
  "totalCount" : 12345,
  "newResourcesCount" : 12345,
  "newRolesCount" : 12345,
  "newTasksCount" : 12345,
  "newHelpdeskTasksCount" : 12345,
  "notificationsList" : [ {
    "type" : "...",
    "name" : "...",
    "action" : "...",
    "navigation" : "..."
  }, {
    "type" : "...",
    "name" : "...",
    "action" : "...",
    "navigation" : "..."
  } ]
}
            },
            "description" : "Newly added roles/tasks and expiring roles/tasks."
          }
        }
      }
    }
    ,
    "\/orgChart" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get the Manager and direct reporter's of the specified user.",
        "description" : "Get the Manager and direct reporter's of the specified user. <br>\nNote: The attribute \"directReportee\" is used to identify the manger's\nhierarchy therefore for the user whom you are requesting OrgChart will\nnot have this attribute.",
        "operationId" : "resource_Access_getOrgChart_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "Client Id of logged in user,based on which user specific client\nconfiguration is fetched. This client configuration will have\nquick Info attributes (Primary attributes and Secondary\nattributes) details (Optional)."
          },
          {
            "name" : "dn",
            "in" : "query",
            "type" : "string",
            "description" : "DN of the user for whom OrgChart information is being fetched\n(Required)."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting Manager and direct reporter's of the user.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "userQuickInfo" : {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  },
  "reportees" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ],
  "totalNumberOfReportees" : 12345,
  "managers" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ]
}
            },
            "description" : "Internal exception while getting Manager and direct reporter's of the user."
          },
          "200" : {
            "schema" : {
"description" : "Manager's and Direct reportee's for the user along with primary\nand secondary attributes.",
"$ref" : "#/definitions/json_OrganizationalChartListNode"
            },
            "examples" : {
              "application/json" : {
  "userQuickInfo" : {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  },
  "reportees" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ],
  "totalNumberOfReportees" : 12345,
  "managers" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ]
}
            },
            "description" : "Manager's and Direct reportee's for the user along with primary\nand secondary attributes."
          }
        }
      }
    }
    ,
    "\/permissions" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to provide the list of permissions for a user with TypeDown search enabled.",
        "description" : "The objective of this API is to provide the list of permissions for a user with TypeDown search enabled.\nSearching, Sorting, Pagination are possible using input params.",
        "operationId" : "resource_Access_searchPermissionIndex_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "columns -  Response attributes."
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "The (1-based) ordinal of the place to start or resume the search."
          },
          {
            "name" : "proxyUser",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "pageSize no entriesrequired in the response"
          },
          {
            "name" : "sortByName",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "sortByName if true results will be sorted by collation false-> by relavence."
          },
          {
            "name" : "type",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "permission type(which follows permission index storage typeCode{ROLE,RESOURCE,PRD})"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching permission index",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while searching permission index"
          },
          "200" : {
            "schema" : {
"description" : "response",
"$ref" : "#/definitions/json_PermissionsSearchResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "response"
          }
        }
      }
    }
    ,
    "\/preference" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Rest API to delete user column prefernce.",
        "description" : "Rest API to delete user column prefernce",
        "operationId" : "resource_Access_deletePreferences_DELETE",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "attribute",
            "in" : "query",
            "type" : "string",
            "description" : "Preference attribute"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting user preferences",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ],
  "settingFor" : "...",
  "openFormInPopUp" : true
}
            },
            "description" : "Internal exception while deleting user preferences"
          },
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PreferencesNode"
            },
            "examples" : {
              "application/json" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ],
  "settingFor" : "...",
  "openFormInPopUp" : true
}
            },
            "description" : ""
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Retrives user configured column preferences.",
        "description" : "Retrives user configured column preferences",
        "operationId" : "resource_Access_getUserColumnPrefs_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "attribute",
            "in" : "query",
            "default" : "All",
            "type" : "string",
            "description" : "nothing but userPrefernce type example : All, Assigned to me etc"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user column preferences",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ],
  "settingFor" : "...",
  "openFormInPopUp" : true
}
            },
            "description" : "Internal exception while getting user column preferences"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PreferencesNode"
            },
            "examples" : {
              "application/json" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ],
  "settingFor" : "...",
  "openFormInPopUp" : true
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Updates user column preference with preference type.",
        "description" : "Updates user column preference with preference type",
        "operationId" : "resource_Access_setUserColumnPrefs_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [
          {
            "name" : "attribute",
            "in" : "query",
            "type" : "string",
            "description" : "Nothing but userPreference type"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PreferencesNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while setting user column preferences",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "location" : "...",
  "statusInfo" : {
    "reasonPhrase" : "...",
    "statusCode" : 12345,
    "family" : "REDIRECTION"
  },
  "allowedMethods" : [ "...", "..." ],
  "length" : 12345,
  "entity" : { },
  "entityTag" : {
    "weak" : true,
    "value" : "..."
  },
  "mediaType" : {
    "wildcardType" : true,
    "type" : "...",
    "wildcardSubtype" : true,
    "parameters" : {
      "property1" : "...",
      "property2" : "..."
    },
    "subtype" : "..."
  },
  "cookies" : {
    "property1" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    },
    "property2" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    }
  },
  "language" : {
    "displayVariant" : "...",
    "country" : "...",
    "unicodeLocaleAttributes" : [ "...", "..." ],
    "displayScript" : "...",
    "extensionKeys" : [ "...", "..." ],
    "language" : "...",
    "displayName" : "...",
    "ISOCountries" : [ "...", "..." ],
    "ISO3Country" : "...",
    "displayLanguage" : "...",
    "ISO3Language" : "...",
    "displayCountry" : "...",
    "availableLocales" : [ { }, { } ],
    "ISOLanguages" : [ "...", "..." ],
    "unicodeLocaleKeys" : [ "...", "..." ],
    "default" : { },
    "variant" : "...",
    "script" : "..."
  },
  "links" : [ {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  }, {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  } ],
  "lastModified" : 12345,
  "metadata" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "status" : 12345,
  "headers" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "date" : 12345,
  "stringHeaders" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  }
}
            },
            "description" : "Internal exception while setting user column preferences"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "location" : "...",
  "statusInfo" : {
    "reasonPhrase" : "...",
    "statusCode" : 12345,
    "family" : "INFORMATIONAL"
  },
  "allowedMethods" : [ "...", "..." ],
  "length" : 12345,
  "entity" : { },
  "entityTag" : {
    "weak" : true,
    "value" : "..."
  },
  "mediaType" : {
    "wildcardType" : true,
    "type" : "...",
    "wildcardSubtype" : true,
    "parameters" : {
      "property1" : "...",
      "property2" : "..."
    },
    "subtype" : "..."
  },
  "cookies" : {
    "property1" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    },
    "property2" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    }
  },
  "language" : {
    "displayVariant" : "...",
    "country" : "...",
    "unicodeLocaleAttributes" : [ "...", "..." ],
    "displayScript" : "...",
    "extensionKeys" : [ "...", "..." ],
    "language" : "...",
    "displayName" : "...",
    "ISOCountries" : [ "...", "..." ],
    "ISO3Country" : "...",
    "displayLanguage" : "...",
    "ISO3Language" : "...",
    "displayCountry" : "...",
    "availableLocales" : [ { }, { } ],
    "ISOLanguages" : [ "...", "..." ],
    "unicodeLocaleKeys" : [ "...", "..." ],
    "default" : { },
    "variant" : "...",
    "script" : "..."
  },
  "links" : [ {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  }, {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  } ],
  "lastModified" : 12345,
  "metadata" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "status" : 12345,
  "headers" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "date" : 12345,
  "stringHeaders" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  }
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/relationships" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get team relationship.",
        "description" : "Get team relationship",
        "operationId" : "resource_Access_getTeamRelationships_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting team relationship",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "relationships" : [ {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  }, {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting team relationship"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RelationshipListNode"
            },
            "examples" : {
              "application/json" : {
  "relationships" : [ {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  }, {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/rob" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get the logged in user is authorized for request on Behalf feature.",
        "description" : "Get the logged in user is authorized for request on Behalf feature.",
        "operationId" : "resource_Access_hasAccess_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "proxyUser",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while checking for access",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "authorized" : true,
  "readOnly" : true,
  "teamReadOnly" : true,
  "proxyFor" : true,
  "clientId" : "...",
  "clientName" : "...",
  "isAdmin" : true,
  "isRoleAdmin" : true,
  "domains" : [ "...", "..." ],
  "isDelegationTeamMgr" : true,
  "isAvailabilityTeamMgr" : true
}
            },
            "description" : "Internal exception while checking for access"
          },
          "200" : {
            "schema" : {
"description" : "true / false.",
"$ref" : "#/definitions/json_LoggedInUser"
            },
            "examples" : {
              "application/json" : {
  "authorized" : true,
  "readOnly" : true,
  "teamReadOnly" : true,
  "proxyFor" : true,
  "clientId" : "...",
  "clientName" : "...",
  "isAdmin" : true,
  "isRoleAdmin" : true,
  "domains" : [ "...", "..." ],
  "isDelegationTeamMgr" : true,
  "isAvailabilityTeamMgr" : true
}
            },
            "description" : "true / false."
          }
        }
      }
    }
    ,
    "\/supportedlocales" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To get the list of locale`s that are supported by User Application\nserver.",
        "description" : "To get the list of locale`s that are supported by User Application\nserver.",
        "operationId" : "resource_Access_supportedLocales_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting supported locale`s",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "supportedLocales" : [ {
    "locale" : "...",
    "localeDisplayName" : "..."
  }, {
    "locale" : "...",
    "localeDisplayName" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting supported locale`s"
          },
          "200" : {
            "schema" : {
"description" : "list of supported locale`s.",
"$ref" : "#/definitions/json_SupportedLocalesListNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "supportedLocales" : [ {
    "locale" : "...",
    "localeDisplayName" : "..."
  }, {
    "locale" : "...",
    "localeDisplayName" : "..."
  } ]
}
            },
            "description" : "list of supported locale`s."
          }
        }
      }
    }
    ,
    "\/tasks" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Handles user action performed on tasks page.",
        "description" : "Handles user action performed on tasks page. User actions such as\napprove, deny, refuse, claim, release or comment. One or more tasks can\nbe processed based on user action. Response contains results of both\nsucceeded and failed tasks while processing user action in order to\nfeedback to client. With proxy user, task action will be performed in\nproxy context. Note: For Reassign usecase, it is mandatory to send the\nCurrent addreessee DN.",
        "operationId" : "resource_Access_performTaskAction_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Request node contains selected task(s), user action, proxy user\nand comment",
"$ref" : "#/definitions/json_AfTaskActionNode"
            },
            "description" : "Request node contains selected task(s), user action, proxy user\nand comment"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while performing task action",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while performing task action"
          },
          "201" : {
            "schema" : {
"description" : "Response node <OperationResponseNode>",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Response node <OperationResponseNode>"
          }
        }
      }
    }
    ,
    "\/teams" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Delete team(s).",
        "description" : "Delete team(s). One or many teams can be deleted together. Response\ncontains details about successfully removed teams and those teams failed\nto get removed.",
        "operationId" : "resource_Access_deleteTargetSets_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of teams to delete",
"$ref" : "#/definitions/json_TargetSetListNode"
            },
            "description" : "- List of teams to delete"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting teams",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting teams"
          },
          "204" : {
            "schema" : {
"description" : "Team deletion status",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Team deletion status"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Create new team.",
        "description" : "Create new team. It validates team name for proper naming convention,\ndescription and recipient details before creation. On successful\nvalidation, new team will get created and returns team details. It also\nhandles localized name and description.",
        "operationId" : "resource_Access_createTargetSet_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "New team details",
"$ref" : "#/definitions/json_TargetSetNode"
            },
            "description" : "New team details"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating targets",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
}
            },
            "description" : "Internal exception while creating targets"
          },
          "201" : {
            "schema" : {
"description" : "Team details",
"$ref" : "#/definitions/json_TargetSetNode"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
}
            },
            "description" : "Team details"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Update Team details.",
        "description" : "Update Team details. It validates team name for proper naming convention\nand recipient details before update. On successful validation, team\ndetails will get updated and returns updated team details. It also\nhandles localized name and description.",
        "operationId" : "resource_Access_updateTargetSet_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Team details for update - Team DN is mandatory",
"$ref" : "#/definitions/json_TargetSetNode"
            },
            "description" : "Team details for update - Team DN is mandatory"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating team details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
}
            },
            "description" : "Internal exception while updating team details"
          },
          "204" : {
            "schema" : {
"description" : "Updated team details",
"$ref" : "#/definitions/json_TargetSetNode"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
}
            },
            "description" : "Updated team details"
          }
        }
      }
    }
    ,
    "\/user" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Rest end point to delete the user, supports multiple user deletion.",
        "description" : "Rest end point to delete the user, supports multiple user deletion",
        "operationId" : "resource_Access_removeUserEntity_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserListNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting user entity",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting user entity"
          },
          "500" : {
            "schema" : {
"description" : "Internal server error",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal server error"
          },
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "rest Api to Create User enity in eDirectory.",
        "description" : "rest Api to Create User enity in eDirectory",
        "operationId" : "resource_Access_createUser_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "UserInputNode carrier of user input information.",
"$ref" : "#/definitions/json_AttributesListNode"
            },
            "description" : "UserInputNode carrier of user input information."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "firstName" : "...",
  "lastName" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "firstName" : "...",
  "lastName" : "..."
}
            },
            "description" : "Internal exception while creating user"
          },
          "201" : {
            "schema" : {
"description" : "creation response sucess->created userDn, failure->proper error\nmessage",
"$ref" : "#/definitions/json_UserNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "firstName" : "...",
  "lastName" : "..."
}
            },
            "description" : "creation response sucess->created userDn, failure->proper error\nmessage"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Rest end point to Update the existing user.",
        "description" : "Rest end point to Update the existing user<br>",
        "operationId" : "resource_Access_updateUserEntity_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "isProfile",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Update user payload, Holds user information need to be updated in eDirectory",
"$ref" : "#/definitions/json_UserDefaultNode"
            },
            "description" : "Update user payload, Holds user information need to be updated in eDirectory"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "attributes" : [ {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  }, {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating user entity",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "attributes" : [ {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  }, {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  } ]
}
            },
            "description" : "Internal exception while updating user entity"
          },
          "204" : {
            "schema" : {
"description" : "updated user node",
"$ref" : "#/definitions/json_UserDefaultNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "attributes" : [ {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  }, {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  } ]
}
            },
            "description" : "updated user node"
          }
        }
      }
    }
    ,
    "\/workflow" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Validates the Input Parameter and passes the request to WF of PRD\nCreation.",
        "description" : "Validates the Input Parameter and passes the request to WF of PRD\nCreation.",
        "operationId" : "resource_Access_createPRD_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- WorkFlow Create Node",
"$ref" : "#/definitions/json_PrdCreateNode"
            },
            "description" : "- WorkFlow Create Node"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/administration/cprsConfig" : {
      "get" : {
        "tags" : [ "Access" ],
        "description" : "",
        "operationId" : "resource_Access_getCprsConfiguration_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while fetching cprs configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "enableCprs" : true,
  "cleanupTimeInDays" : 12345,
  "pollingInterval" : 12345
}
            },
            "description" : "Internal exception while fetching cprs configuration"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CprsConfigNode"
            },
            "examples" : {
              "application/json" : {
  "enableCprs" : true,
  "cleanupTimeInDays" : 12345,
  "pollingInterval" : 12345
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "description" : "",
        "operationId" : "resource_Access_saveCprsConfigurations_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CprsConfigNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input. XSS validation failed.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "enableCprs" : true,
  "cleanupTimeInDays" : 12345,
  "pollingInterval" : 12345
}
            },
            "description" : "Invalid input. XSS validation failed."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving cprs configuration.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "enableCprs" : true,
  "cleanupTimeInDays" : 12345,
  "pollingInterval" : 12345
}
            },
            "description" : "Internal exception while saving cprs configuration."
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CprsConfigNode"
            },
            "examples" : {
              "application/json" : {
  "enableCprs" : true,
  "cleanupTimeInDays" : 12345,
  "pollingInterval" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/administration/delegation" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get all configuration related to delegation admin configuration such as.",
        "description" : "Get all configuration related to delegation admin configuration such as\n<br />\n<b>allRequests<\/b> : If true allows delegate to act as a delegate for ALL\n<br />\navailable resource categories. <br />\n<b>delegationRetentionTime<\/b> : Retention time for Delegation\nassignments in minutes.<br />\n<b>delegateNotfTemplate<\/b> : Notification template dn will be used to\nsend notification at <br />\nthe time of delegation creation.",
        "operationId" : "resource_Access_getDelegationConfiguration_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting delgation configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "allRequests" : true,
  "delegateNotfTemplate" : "...",
  "delegationRetentionTime" : 12345,
  "availabilityNotfTemplate" : "...",
  "availabilityRetentionTime" : 12345
}
            },
            "description" : "Internal exception while getting delgation configuration"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DelegationAdminConfigNode"
            },
            "examples" : {
              "application/json" : {
  "allRequests" : true,
  "delegateNotfTemplate" : "...",
  "delegationRetentionTime" : 12345,
  "availabilityNotfTemplate" : "...",
  "availabilityRetentionTime" : 12345
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Save or Update delegation such as all request, notification templates etc.",
        "description" : "Save or Update delegation such as all request, notification templates etc.<br />\n<b>allRequests<\/b> : If true allows delegate to act as a delegate for ALL\n<br />\navailable resource categories. <br />\n<b>delegationRetentionTime<\/b> : Retention time for Delegation\nassignments in minutes.<br />\n<b>delegateNotfTemplate<\/b> : Notification template dn will be used to\nsend notification at <br />\nthe time of delegation creation.",
        "operationId" : "resource_Access_saveOrUpdateDelgationConfiguration_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "delegation configuration json object",
"$ref" : "#/definitions/json_DelegationAdminConfigNode"
            },
            "description" : "delegation configuration json object"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input. XSS validation failed.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "allRequests" : true,
  "delegateNotfTemplate" : "...",
  "delegationRetentionTime" : 12345,
  "availabilityNotfTemplate" : "...",
  "availabilityRetentionTime" : 12345
}
            },
            "description" : "Invalid input. XSS validation failed."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving delgation configuration.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "allRequests" : true,
  "delegateNotfTemplate" : "...",
  "delegationRetentionTime" : 12345,
  "availabilityNotfTemplate" : "...",
  "availabilityRetentionTime" : 12345
}
            },
            "description" : "Internal exception while saving delgation configuration."
          },
          "201" : {
            "schema" : {
"description" : "updated delegation admin configuration",
"$ref" : "#/definitions/json_DelegationAdminConfigNode"
            },
            "examples" : {
              "application/json" : {
  "allRequests" : true,
  "delegateNotfTemplate" : "...",
  "delegationRetentionTime" : 12345,
  "availabilityNotfTemplate" : "...",
  "availabilityRetentionTime" : 12345
}
            },
            "description" : "updated delegation admin configuration"
          }
        }
      }
    }
    ,
    "\/administration/emailApproval" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get all configuration related to email based approval such as\napprove/deny phrases, success/failure templates, incoming/outgoing mailbox server\nhost, port, authentication details, email polling interval, enable SSL &\nproxy connection, proxy host and port details.",
        "description" : "Get all configuration related to email based approval such as\napprove/deny phrases, success/failure templates, incoming/outgoing mailbox server\nhost, port, authentication details, email polling interval, enable SSL &\nproxy connection, proxy host and port details.",
        "operationId" : "resource_Access_getEmailBasedApprovalSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting email based approval configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "emailApprovalTurnOn" : true,
  "serverType" : "...",
  "host" : "...",
  "email" : "...",
  "password" : "...",
  "folder" : "...",
  "sslEnabled" : true,
  "requireAuthentication" : true,
  "useDefaultPort" : true,
  "port" : 12345,
  "pollingInterval" : 12345,
  "approvePhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "denyPhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "cleanupTimeInDays" : 12345,
  "successMailTemplate" : "...",
  "failureMailTemplate" : "...",
  "tokenExpirationTime" : 12345,
  "emailContentOption" : 12345,
  "replyEmail" : "...",
  "isProxyEnabled" : true,
  "proxyHost" : "...",
  "proxyPort" : 12345,
  "isProxyAuthRequired" : true,
  "proxyUser" : "...",
  "proxyPassword" : "...",
  "notifyHost" : "...",
  "notifyPort" : "...",
  "notifySecurePort" : "...",
  "notifyProtocol" : "...",
  "notifySecureProtocol" : "...",
  "notifyDefaultFromAddress" : "...",
  "notifySmtpHost" : "...",
  "notifyAuthRequired" : true,
  "notifyAuthUser" : "...",
  "notifyAuthPassword" : "...",
  "notifySmtpTls" : true,
  "notifyImageUrl" : "...",
  "notifySignature" : true,
  "notifySignPath" : "...",
  "notifySignPassword" : "...",
  "notifySignKeyAlias" : "...",
  "notifySignKeyPassword" : "...",
  "fieldLabels" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting email based approval configuration"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EmailBasedApprovalNode"
            },
            "examples" : {
              "application/json" : {
  "emailApprovalTurnOn" : true,
  "serverType" : "...",
  "host" : "...",
  "email" : "...",
  "password" : "...",
  "folder" : "...",
  "sslEnabled" : true,
  "requireAuthentication" : true,
  "useDefaultPort" : true,
  "port" : 12345,
  "pollingInterval" : 12345,
  "approvePhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "denyPhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "cleanupTimeInDays" : 12345,
  "successMailTemplate" : "...",
  "failureMailTemplate" : "...",
  "tokenExpirationTime" : 12345,
  "emailContentOption" : 12345,
  "replyEmail" : "...",
  "isProxyEnabled" : true,
  "proxyHost" : "...",
  "proxyPort" : 12345,
  "isProxyAuthRequired" : true,
  "proxyUser" : "...",
  "proxyPassword" : "...",
  "notifyHost" : "...",
  "notifyPort" : "...",
  "notifySecurePort" : "...",
  "notifyProtocol" : "...",
  "notifySecureProtocol" : "...",
  "notifyDefaultFromAddress" : "...",
  "notifySmtpHost" : "...",
  "notifyAuthRequired" : true,
  "notifyAuthUser" : "...",
  "notifyAuthPassword" : "...",
  "notifySmtpTls" : true,
  "notifyImageUrl" : "...",
  "notifySignature" : true,
  "notifySignPath" : "...",
  "notifySignPassword" : "...",
  "notifySignKeyAlias" : "...",
  "notifySignKeyPassword" : "...",
  "fieldLabels" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Update email based approval configuration such as approve/deny phrases,\nsuccess/failure templates, incoming/outgoing mailbox server host, port,\nauthentication details, email polling interval, enable SSL & proxy\nconnection, proxy host and port details.",
        "description" : "Update email based approval configuration such as approve/deny phrases,\nsuccess/failure templates, incoming/outgoing mailbox server host, port,\nauthentication details, email polling interval, enable SSL & proxy\nconnection, proxy host and port details.",
        "operationId" : "resource_Access_setEmailBasedApprovalSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Email based approval configuration",
"$ref" : "#/definitions/json_EmailBasedApprovalNode"
            },
            "description" : "Email based approval configuration"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input. XSS validation failed.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "emailApprovalTurnOn" : true,
  "serverType" : "...",
  "host" : "...",
  "email" : "...",
  "password" : "...",
  "folder" : "...",
  "sslEnabled" : true,
  "requireAuthentication" : true,
  "useDefaultPort" : true,
  "port" : 12345,
  "pollingInterval" : 12345,
  "approvePhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "denyPhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "cleanupTimeInDays" : 12345,
  "successMailTemplate" : "...",
  "failureMailTemplate" : "...",
  "tokenExpirationTime" : 12345,
  "emailContentOption" : 12345,
  "replyEmail" : "...",
  "isProxyEnabled" : true,
  "proxyHost" : "...",
  "proxyPort" : 12345,
  "isProxyAuthRequired" : true,
  "proxyUser" : "...",
  "proxyPassword" : "...",
  "notifyHost" : "...",
  "notifyPort" : "...",
  "notifySecurePort" : "...",
  "notifyProtocol" : "...",
  "notifySecureProtocol" : "...",
  "notifyDefaultFromAddress" : "...",
  "notifySmtpHost" : "...",
  "notifyAuthRequired" : true,
  "notifyAuthUser" : "...",
  "notifyAuthPassword" : "...",
  "notifySmtpTls" : true,
  "notifyImageUrl" : "...",
  "notifySignature" : true,
  "notifySignPath" : "...",
  "notifySignPassword" : "...",
  "notifySignKeyAlias" : "...",
  "notifySignKeyPassword" : "...",
  "fieldLabels" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Invalid input. XSS validation failed."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving email approval configuration.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "emailApprovalTurnOn" : true,
  "serverType" : "...",
  "host" : "...",
  "email" : "...",
  "password" : "...",
  "folder" : "...",
  "sslEnabled" : true,
  "requireAuthentication" : true,
  "useDefaultPort" : true,
  "port" : 12345,
  "pollingInterval" : 12345,
  "approvePhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "denyPhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "cleanupTimeInDays" : 12345,
  "successMailTemplate" : "...",
  "failureMailTemplate" : "...",
  "tokenExpirationTime" : 12345,
  "emailContentOption" : 12345,
  "replyEmail" : "...",
  "isProxyEnabled" : true,
  "proxyHost" : "...",
  "proxyPort" : 12345,
  "isProxyAuthRequired" : true,
  "proxyUser" : "...",
  "proxyPassword" : "...",
  "notifyHost" : "...",
  "notifyPort" : "...",
  "notifySecurePort" : "...",
  "notifyProtocol" : "...",
  "notifySecureProtocol" : "...",
  "notifyDefaultFromAddress" : "...",
  "notifySmtpHost" : "...",
  "notifyAuthRequired" : true,
  "notifyAuthUser" : "...",
  "notifyAuthPassword" : "...",
  "notifySmtpTls" : true,
  "notifyImageUrl" : "...",
  "notifySignature" : true,
  "notifySignPath" : "...",
  "notifySignPassword" : "...",
  "notifySignKeyAlias" : "...",
  "notifySignKeyPassword" : "...",
  "fieldLabels" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Internal exception while saving email approval configuration."
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EmailBasedApprovalNode"
            },
            "examples" : {
              "application/json" : {
  "emailApprovalTurnOn" : true,
  "serverType" : "...",
  "host" : "...",
  "email" : "...",
  "password" : "...",
  "folder" : "...",
  "sslEnabled" : true,
  "requireAuthentication" : true,
  "useDefaultPort" : true,
  "port" : 12345,
  "pollingInterval" : 12345,
  "approvePhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "denyPhrase" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "cleanupTimeInDays" : 12345,
  "successMailTemplate" : "...",
  "failureMailTemplate" : "...",
  "tokenExpirationTime" : 12345,
  "emailContentOption" : 12345,
  "replyEmail" : "...",
  "isProxyEnabled" : true,
  "proxyHost" : "...",
  "proxyPort" : 12345,
  "isProxyAuthRequired" : true,
  "proxyUser" : "...",
  "proxyPassword" : "...",
  "notifyHost" : "...",
  "notifyPort" : "...",
  "notifySecurePort" : "...",
  "notifyProtocol" : "...",
  "notifySecureProtocol" : "...",
  "notifyDefaultFromAddress" : "...",
  "notifySmtpHost" : "...",
  "notifyAuthRequired" : true,
  "notifyAuthUser" : "...",
  "notifyAuthPassword" : "...",
  "notifySmtpTls" : true,
  "notifyImageUrl" : "...",
  "notifySignature" : true,
  "notifySignPath" : "...",
  "notifySignPassword" : "...",
  "notifySignKeyAlias" : "...",
  "notifySignKeyPassword" : "...",
  "fieldLabels" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/administration/igConfig" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get all configuration related to IG such as\nhost, admin username, admin password &\nshow ig approvals in tasks flag, show ig catalog in request.",
        "description" : "Get all configuration related to IG such as\nhost, admin username, admin password &\nshow ig approvals in tasks flag, show ig catalog in request",
        "operationId" : "resource_Access_getIgConfigurationSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting IG configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "host" : "...",
  "adminUserName" : "...",
  "adminPassword" : "...",
  "showIgApprovals" : true,
  "showIgRequestCatalog" : true
}
            },
            "description" : "Internal exception while getting IG configuration"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_IgConfigurationNode"
            },
            "examples" : {
              "application/json" : {
  "host" : "...",
  "adminUserName" : "...",
  "adminPassword" : "...",
  "showIgApprovals" : true,
  "showIgRequestCatalog" : true
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Update IG configuration such as application URL,\nadmin username, admin password, show ig approvals,\nand show ig request catalog in idm new request self.",
        "description" : "Update IG configuration such as application URL,\nadmin username, admin password, show ig approvals,\nand show ig request catalog in idm new request self.",
        "operationId" : "resource_Access_setIGCondifurationSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "IG configuration",
"$ref" : "#/definitions/json_IgConfigurationNode"
            },
            "description" : "IG configuration"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input. XSS validation failed.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "host" : "...",
  "adminUserName" : "...",
  "adminPassword" : "...",
  "showIgApprovals" : true,
  "showIgRequestCatalog" : true
}
            },
            "description" : "Invalid input. XSS validation failed."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving ig configuration.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "host" : "...",
  "adminUserName" : "...",
  "adminPassword" : "...",
  "showIgApprovals" : true,
  "showIgRequestCatalog" : true
}
            },
            "description" : "Internal exception while saving ig configuration."
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_IgConfigurationNode"
            },
            "examples" : {
              "application/json" : {
  "host" : "...",
  "adminUserName" : "...",
  "adminPassword" : "...",
  "showIgApprovals" : true,
  "showIgRequestCatalog" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assignments/advanced" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to filter the permission assignments based on filter criteria of logged-in user.",
        "description" : "The objective of this API is to filter the permission assignments based on filter criteria of logged-in user.\nThis API takes the logged-in user DN as input parameter.\nBased on this parameter API finds the assigned permissions of that corresponding DN.\nThis API supports Searching, Sorting, Pagination on the fetched data.\nThis API supports caching technology also in two different ways, and it can achieve from the client side input parameters.",
        "operationId" : "resource_Access_getLoggedInUserPermissionAssignmentsBasedOnFilter_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "containerAssigned",
            "in" : "query",
            "type" : "string",
            "description" : "Container DN assigned to role"
          },
          {
            "name" : "description",
            "in" : "query",
            "type" : "string",
            "description" : "Permission description"
          },
          {
            "name" : "effectiveDate",
            "in" : "query",
            "type" : "string",
            "description" : "Effective from date"
          },
          {
            "name" : "expDate",
            "in" : "query",
            "type" : "string",
            "description" : "Expiry date"
          },
          {
            "name" : "forceRefresh",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need force refresh of permission?"
          },
          {
            "name" : "groupAssigned",
            "in" : "query",
            "type" : "string",
            "description" : "Group DN assigned to role"
          },
          {
            "name" : "name",
            "in" : "query",
            "type" : "string",
            "description" : "Name of the permission"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "noCache",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need cache?"
          },
          {
            "name" : "onlyDirectAssignments",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Filter used to fetch only direct assignment."
          },
          {
            "name" : "parameter",
            "in" : "query",
            "type" : "string",
            "description" : "Supplementary parameter"
          },
          {
            "name" : "requestDate",
            "in" : "query",
            "type" : "string",
            "description" : "Request date"
          },
          {
            "name" : "resourceCategories",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "Resource category"
          },
          {
            "name" : "resourceInitialRequestDescription",
            "in" : "query",
            "type" : "string",
            "description" : "Resource request description"
          },
          {
            "name" : "roleCategories",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "Role category"
          },
          {
            "name" : "roleInitialRequestDescription",
            "in" : "query",
            "type" : "string",
            "description" : "Role request description"
          },
          {
            "name" : "roleRelationship",
            "in" : "query",
            "type" : "string",
            "description" : "Inherited child roles"
          },
          {
            "name" : "searchScope",
            "in" : "query",
            "default" : "ALL",
            "type" : "string",
            "description" : "Search scope"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "Selected column for sorting"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Order of sorting"
          },
          {
            "name" : "token",
            "in" : "query",
            "type" : "string",
            "description" : "Used for caching result set, client should use this in subsequent calls to take advantage of caching"
          },
          {
            "name" : "userAssigned",
            "in" : "query",
            "type" : "string",
            "description" : "User DN assigned to role"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while revoking permission from user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "Internal exception while revoking permission from user"
          },
          "200" : {
            "schema" : {
"description" : "Filtered user permission assignments",
"$ref" : "#/definitions/json_PermissionAssignmentListNode"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "Filtered user permission assignments"
          }
        }
      }
    }
    ,
    "\/assignments/identities" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "get assigned Identities for the given permission, given thre permissionId and permissionType.",
        "description" : "get assigned Identities for the given permission, given thre permissionId and permissionType",
        "operationId" : "resource_Access_fetchPermissionUsersAssignment_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "starIndex"
          },
          {
            "name" : "permissionId",
            "in" : "query",
            "type" : "string",
            "description" : "fullDN of the permission"
          },
          {
            "name" : "permissionType",
            "in" : "query",
            "type" : "string",
            "description" : "permissionType of the given Permission"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "20",
            "type" : "integer",
            "description" : "pageSize"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "FirstName",
            "type" : "string",
            "description" : "sortable Column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "order ASC or DESC"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assignments/item" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to provide the permission assignment of logged-in user for a specified permission.",
        "description" : "The objective of this API is to provide the permission assignment of logged-in user for a specified permission.\nThis API takes the logged-in user-dn as input parameter.\nBased on this parameter API finds the assigned resources and roles for the specified permission of that corresponding DN.",
        "operationId" : "resource_Access_getLoggedInUserPermissionAssignment_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "permission node with the id parameter populated with a DN of the\npermission",
"$ref" : "#/definitions/json_PermissionNode"
            },
            "description" : "permission node with the id parameter populated with a DN of the\npermission"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "entityType" : "...",
  "link" : "...",
  "bulkRemovable" : true,
  "categories" : [ {
    "categoryId" : "...",
    "categoryName" : "..."
  }, {
    "categoryId" : "...",
    "categoryName" : "..."
  } ],
  "instanceId" : "...",
  "causes" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  } ],
  "reqDate" : 12345,
  "initialRequestDescription" : "...",
  "status" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  } ],
  "assignmentType" : "...",
  "assignmentTo" : "...",
  "assignmentToList" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  } ],
  "requestedBy" : "...",
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "cause" : {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  },
  "isDirectAssignment" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting permission assignments to user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "entityType" : "...",
  "link" : "...",
  "bulkRemovable" : true,
  "categories" : [ {
    "categoryId" : "...",
    "categoryName" : "..."
  }, {
    "categoryId" : "...",
    "categoryName" : "..."
  } ],
  "instanceId" : "...",
  "causes" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  } ],
  "reqDate" : 12345,
  "initialRequestDescription" : "...",
  "status" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  } ],
  "assignmentType" : "...",
  "assignmentTo" : "...",
  "assignmentToList" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  } ],
  "requestedBy" : "...",
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "cause" : {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  },
  "isDirectAssignment" : true
}
            },
            "description" : "Internal exception while getting permission assignments to user"
          },
          "201" : {
            "schema" : {
"description" : "Permission assignment node",
"$ref" : "#/definitions/json_PermissionAssignmentNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "entityType" : "...",
  "link" : "...",
  "bulkRemovable" : true,
  "categories" : [ {
    "categoryId" : "...",
    "categoryName" : "..."
  }, {
    "categoryId" : "...",
    "categoryName" : "..."
  } ],
  "instanceId" : "...",
  "causes" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  } ],
  "reqDate" : 12345,
  "initialRequestDescription" : "...",
  "status" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  } ],
  "assignmentType" : "...",
  "assignmentTo" : "...",
  "assignmentToList" : [ {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  }, {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "assignedToDn" : "...",
    "assigneeFullName" : "...",
    "comment" : "...",
    "sodJustification" : "...",
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    }
  } ],
  "requestedBy" : "...",
  "effectiveDate" : 12345,
  "expiryDate" : 12345,
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "cause" : {
    "instanceId" : "...",
    "type" : "...",
    "subtype" : "...",
    "removable" : true,
    "sources" : [ "...", "..." ],
    "sourcesDetails" : {
      "name" : "...",
      "dn" : "..."
    },
    "requester" : "...",
    "requesterName" : "...",
    "reqDesc" : "...",
    "status" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "assignedTo" : "...",
    "confirmNo" : "...",
    "sodJustification" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "entRef" : {
      "entName" : "...",
      "entDesc" : "...",
      "params" : [ { }, { } ]
    },
    "reqForm" : {
      "params" : [ { }, { } ]
    },
    "groupContainerInfo" : [ {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    }, {
      "reqDesc" : "...",
      "requester" : "...",
      "groupDN" : "...",
      "approval" : { }
    } ]
  },
  "isDirectAssignment" : true
}
            },
            "description" : "Permission assignment node"
          }
        }
      }
    }
    ,
    "\/assignments/list" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Request permission revocation from assignees, for roles and resources\nassigned to the assignees passed in request payload.",
        "description" : "Request permission revocation from assignees, for roles and resources\nassigned to the assignees passed in request payload",
        "operationId" : "resource_Access_removeUserPermissionAssignmentsFromAssignees_DELETE",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "JSON payload that includes the resource(s) and roles(s) that need\nto be revoked from the assignees list",
"$ref" : "#/definitions/json_PermissionAssignmentListNode"
            },
            "description" : "JSON payload that includes the resource(s) and roles(s) that need\nto be revoked from the assignees list"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while resolving user full name",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while resolving user full name"
          },
          "500" : {
            "schema" : {
"description" : "Internal server error",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal server error"
          },
          "403" : {
            "schema" : {
"description" : "If you are not autorized to perfom this task",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "If you are not autorized to perfom this task"
          },
          "204" : {
            "schema" : {
"description" : "status of each revocation request, or NCAC error response if\nmajor exception occurs.",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "status of each revocation request, or NCAC error response if\nmajor exception occurs."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to provide the permission assignment(all roles and resources) of a user.",
        "description" : "The objective of this API is to provide the permission assignment(all roles and resources) of a user.\nThis API takes the user-dn from the input parameter.\nBased on this user-dn API finds the assigned permissions.\nThis API supports Searching, Sorting, Pagination on the fetched data.\nThis API supports caching technology also in two different ways, and it can achieve from the client side input parameters.",
        "operationId" : "resource_Access_getUserPermissionAssignments_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "forceRefresh",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "force a refresh of the permission assignment from the IDV, do not\nuse what may have already been cached"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "index to start from"
          },
          {
            "name" : "noCache",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Do not cache permission assignments in server side cache"
          },
          {
            "name" : "q",
            "in" : "query",
            "type" : "string",
            "description" : "search permission name or description containing this text"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "number of assignments to return in one batch"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "sort on name or description column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "asc=Ascending, desc=Descending"
          },
          {
            "name" : "token",
            "in" : "query",
            "type" : "string",
            "description" : "token used for caching result set, client should use this in\nsubsequent calls to take advantage of caching"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user permission assignments",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "Internal exception while getting user permission assignments"
          },
          "201" : {
            "schema" : {
"description" : "permission assignments",
"$ref" : "#/definitions/json_PermissionAssignmentListNode"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "permission assignments"
          }
        }
      }
    }
    ,
    "\/availability/list" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Gets the availability definitions for the given user.",
        "description" : "Gets the availability definitions for the given user.",
        "operationId" : "resource_Access_getAvailability_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "UserDN whose availability needs to fetch.",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : "UserDN whose availability needs to fetch."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting availability definitions of user.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "Internal exception while getting availability definitions of user."
          },
          "400" : {
            "schema" : {
"description" : "XSS Validation failure.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "XSS Validation failure."
          },
          "201" : {
            "schema" : {
"description" : "list of availability.",
"$ref" : "#/definitions/json_AvailabilityListNode"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "list of availability."
          }
        }
      }
    }
    ,
    "\/availability/prds" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Retrieves list of available prds for selection while creating availability for a user.",
        "description" : "Retrieves list of available prds for selection while creating availability for a user",
        "operationId" : "resource_Access_fetchAvailabilityPrds_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "userDn",
            "in" : "query",
            "type" : "string",
            "description" : "The userDn details for example(cn=\"uaadmin\",ou=users,o=data)"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while retrieving available prds for create availability",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "Internal exception while retrieving available prds for create availability"
          },
          "400" : {
            "schema" : {
"description" : "XSS Validation failure.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "XSS Validation failure."
          },
          "200" : {
            "schema" : {
"description" : "returns AvailabilityListNode object",
"$ref" : "#/definitions/json_AvailabilityListNode"
            },
            "examples" : {
              "application/json" : {
  "availability" : [ {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  }, {
    "hasExpiry" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "availableRequestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "allRequests" : true,
    "enableAllRequests" : true,
    "principalUser" : {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    },
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "hasExpiryDuration" : true,
    "expiryDuration" : "...",
    "expiryDurationUnit" : "...",
    "teamscope" : "...",
    "type" : "...",
    "availabilityId" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ]
  } ],
  "totalAvailability" : 12345,
  "availabilityStatus" : 12345,
  "hasDelegatesAssigned" : true,
  "newable" : true
}
            },
            "description" : "returns AvailabilityListNode object"
          }
        }
      }
    }
    ,
    "\/availability/status" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Update the Available status on Availability Definition.",
        "description" : "Update the Available status on Availability Definition",
        "operationId" : "resource_Access_statusUpdate_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AvailabilityStatusNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while updating availability status definitions.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "status" : "...",
  "dn" : "...",
  "errorMessage" : "..."
}
            },
            "description" : "Internal exception while updating availability status definitions."
          },
          "400" : {
            "schema" : {
"description" : "XSS Validation failure.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "status" : "...",
  "dn" : "...",
  "errorMessage" : "..."
}
            },
            "description" : "XSS Validation failure."
          },
          "201" : {
            "schema" : {
"description" : "SubmissionStatus object, If success else return error response.",
"$ref" : "#/definitions/json_AvailabilityStatusNode"
            },
            "examples" : {
              "application/json" : {
  "status" : "...",
  "dn" : "...",
  "errorMessage" : "..."
}
            },
            "description" : "SubmissionStatus object, If success else return error response."
          }
        }
      }
    }
    ,
    "\/config/access" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Reads access settings of given client id.",
        "description" : "Reads access settings of given client id. Only access specific settings\nwill be returned. Most common use case would be to control access\nrestrictions of logged in user and to display access settings for the\nadministrator to manage. Settings will be returned as a JSON object.",
        "operationId" : "resource_Access_getAccessSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to fetch access settings (Required)"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting access settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while getting access settings"
          },
          "200" : {
            "schema" : {
"description" : "Page access settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Page access settings"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Saves the modified user access properties in client settings by updating\nclient specific JSON.",
        "description" : "Saves the modified user access properties in client settings by updating\nclient specific JSON. Input JSON should carry the key \"access\" and value\nrepresents whole section of user access settings. Only privileged user\ncan modify the settings and it updates only access section. Updated\nsettings will be usable with immediate effect.\n\nAddition, modification or deletion of keys is not advisable, since the behavior of client will change accordingly.",
        "operationId" : "resource_Access_saveAccessSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to save access settings (Required)"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Access settings in JSON format (Required)",
"$ref" : "#/definitions/json_JSONObject"
            },
            "description" : "Access settings in JSON format (Required)"
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Access not allowed",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Access not allowed"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving access settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while saving access settings"
          },
          "201" : {
            "schema" : {
"description" : "Updated access settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Updated access settings"
          }
        }
      }
    }
    ,
    "\/config/branding" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get brand settings to control look and feel of application.",
        "description" : "Get brand settings to control look and feel of application. Reads\nbranding settings of given client id and only those settings will be\nreturned. Also used to display settings for the administrator to manage.\nSettings will be returned as a JSON object.",
        "operationId" : "resource_Access_getBrandSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to get brand settings (Required)"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting brand settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while getting brand settings"
          },
          "200" : {
            "schema" : {
"description" : "Branding settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Branding settings"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Saves the modified branding properties in client settings by updating\nclient specific JSON.",
        "description" : "Saves the modified branding properties in client settings by updating\nclient specific JSON. Input JSON should carry the key \"branding\" and\nvalue represents whole section of brand settings. Only privileged user\ncan modify the settings and it updates only branding section. Updated\nsettings will be usable with immediate effect.\n\nAddition, modification or deletion of keys is not advisable, since the behavior of client will change accordingly.",
        "operationId" : "resource_Access_saveBrandSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "client id to save brand settings (Required)"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_JSONObject"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Access not allowed",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Access not allowed"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving brand settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while saving brand settings"
          },
          "201" : {
            "schema" : {
"description" : "Updated brand settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Updated brand settings"
          }
        }
      }
    }
    ,
    "\/config/clients" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Deletes one or many clients with the given client Ids.",
        "description" : "Deletes one or many clients with the given client Ids. Only privileged\nuser can delete client settings.",
        "operationId" : "resource_Access_deleteClients_DELETE",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Node to set list of client id(s) for deletion",
"$ref" : "#/definitions/json_AdminSettingsNode"
            },
            "description" : "Node to set list of client id(s) for deletion"
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Access not allowed",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Access not allowed"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting client(s)",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while deleting client(s)"
          },
          "204" : {
            "schema" : {
"description" : "Delete client status",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Delete client status"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get all client settings configured in the system including client name,\nid and match condition.",
        "description" : "Get all client settings configured in the system including client name,\nid and match condition",
        "operationId" : "resource_Access_getClients_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "No clients found",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "clients" : [ {
    "name" : "...",
    "id" : "...",
    "matchCondition" : "...",
    "config" : "...",
    "isDefault" : true
  }, {
    "name" : "...",
    "id" : "...",
    "matchCondition" : "...",
    "config" : "...",
    "isDefault" : true
  } ],
  "totalCount" : 12345
}
            },
            "description" : "No clients found"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while fetching client settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "clients" : [ {
    "name" : "...",
    "id" : "...",
    "matchCondition" : "...",
    "config" : "...",
    "isDefault" : true
  }, {
    "name" : "...",
    "id" : "...",
    "matchCondition" : "...",
    "config" : "...",
    "isDefault" : true
  } ],
  "totalCount" : 12345
}
            },
            "description" : "Internal exception while fetching client settings"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Create a new client setting.",
        "description" : "Create a new client setting. Only privileged user can create new client.\nIt validates that client name and match condition are not in use by other\nclient settings. Generates a new client id in sequential order to\nassociate with newly created client setting. Default client setting will\nbe copied to the new client. Client specific branding CSS will get\ncreated for any customization that may be done by the administrator.",
        "operationId" : "resource_Access_createClient_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Client details like name and match condition",
"$ref" : "#/definitions/json_ClientNode"
            },
            "description" : "Client details like name and match condition"
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Access not allowed",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "id" : "...",
  "matchCondition" : "...",
  "config" : "...",
  "isDefault" : true
}
            },
            "description" : "Access not allowed"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating new client",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "id" : "...",
  "matchCondition" : "...",
  "config" : "...",
  "isDefault" : true
}
            },
            "description" : "Internal exception while creating new client"
          },
          "201" : {
            "schema" : {
"description" : "New client settings",
"$ref" : "#/definitions/json_ClientNode"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "id" : "...",
  "matchCondition" : "...",
  "config" : "...",
  "isDefault" : true
}
            },
            "description" : "New client settings"
          }
        }
      }
    }
    ,
    "\/config/custom" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get custom settings to control the behavior of application.",
        "description" : "Get custom settings to control the behavior of application. Reads\napplication customization settings of given client id and only those\nsettings will be returned. Also used to display settings for the\nadministrator to manage. Settings will be returned as a JSON object.",
        "operationId" : "resource_Access_getCustomSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to get custom settings (Required)"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting custom settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while getting custom settings"
          },
          "200" : {
            "schema" : {
"description" : "Application custom settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Application custom settings"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Saves the modified application customization properties in client\nsettings by updating client specific JSON.",
        "description" : "Saves the modified application customization properties in client\nsettings by updating client specific JSON. Input JSON should carry the\nkey \"customization\" and value represents whole section of application\ncustom settings. Only privileged user can modify the settings and it\nupdates only customization section. Updated settings will be usable with\nimmediate effect.\n\nAddition, modification or deletion of keys is not advisable, since the behavior of client will change accordingly.",
        "operationId" : "resource_Access_saveCustomSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to save custom settings (Required)"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Application custom settings in JSON format (Required)",
"$ref" : "#/definitions/json_JSONObject"
            },
            "description" : "Application custom settings in JSON format (Required)"
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Access not allowed",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Access not allowed"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving custom settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while saving custom settings"
          },
          "201" : {
            "schema" : {
"description" : "Updated application custom settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Updated application custom settings"
          }
        }
      }
    }
    ,
    "\/config/dashboard" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Reads access settings of given client id.",
        "description" : "Reads access settings of given client id. Only dashboard access specific settings\nwill be returned. Most common use case would be to control access\nrestrictions of logged in user and to display access settings for the\nadministrator to manage. Settings will be returned as a JSON object.",
        "operationId" : "resource_Access_getDashboardAccessSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to fetch access settings (Required)"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting access settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while getting access settings"
          },
          "200" : {
            "schema" : {
"description" : "Dashboard access settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Dashboard access settings"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Saves the modified dashboard access properties in client settings by updating\nclient specific JSON.",
        "description" : "Saves the modified dashboard access properties in client settings by updating\nclient specific JSON. Input JSON should carry the key \"access\" and value\nrepresents whole section of dashboard access settings. Only privileged user\ncan modify the settings and it updates only dashboard access section. Updated\nsettings will be usable with immediate effect.\n\nAddition, modification or deletion of keys is not advisable, since the behavior of client will change accordingly.",
        "operationId" : "resource_Access_saveDashboardAccessSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to save access settings (Required)"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Dashboard Access settings in JSON format (Required)",
"$ref" : "#/definitions/json_JSONObject"
            },
            "description" : "Dashboard Access settings in JSON format (Required)"
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Access not allowed",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Access not allowed"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving access settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while saving access settings"
          },
          "201" : {
            "schema" : {
"description" : "Updated dashboard access settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Updated dashboard access settings"
          }
        }
      }
    }
    ,
    "\/config/helpdesk" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Returns the help desk settings and updates in client json file.",
        "description" : "Returns the help desk settings and updates in client json file.",
        "operationId" : "resource_Access_getHelpdeskSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Saves the modified help desk settings and updates in client json file.",
        "description" : "Saves the modified help desk settings and updates in client json file. It is expected to get whole section of help desk JSON settings as value.\nBased on access rights changes, user(s) will get provisioned/deprovisioned with the helpdesk resources\n\nAddition, modification or deletion of keys is not advisable, since the behavior of client will change accordingly.",
        "operationId" : "resource_Access_saveHelpdeskSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_JSONObject"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/config/uploadStyle" : {
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Upload client specific custom style file in CSS format.",
        "description" : "Upload client specific custom style file in CSS format. It receives CSS\nstyles in a plain text and stores it in a CSS file. CSS file will be\nsaved under configured user home directory with the file name including\nclient id. When administrator uploads CSS styles, it will overwrite any\nexisting styles for the client id.",
        "operationId" : "resource_Access_uploadCustomStyle_PUT",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to customize with uploaded CSS"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "CSS style data",
"type" : "string"
            },
            "description" : "CSS style data"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid data received",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Invalid data received"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while uploading custom style",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while uploading custom style"
          },
          "204" : {
            "schema" : {
"description" : "Style upload status",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Style upload status"
          }
        }
      }
    }
    ,
    "\/containers/container" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Lists sub container under any Root container,container list will be sorted by Dn.",
        "description" : "Lists sub container under any Root container,container list will be sorted by Dn",
        "operationId" : "resource_Access_searchSubContainers_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Container node to search",
"$ref" : "#/definitions/json_ContainerNode"
            },
            "description" : "- Container node to search"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid container details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "subContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "arraySize" : 12345
}
            },
            "description" : "Invalid container details"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while searching for sub containers",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "subContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "arraySize" : 12345
}
            },
            "description" : "Internal exception while searching for sub containers"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ContainerListNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "subContainers" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ],
  "arraySize" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/containers/prd" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get PRD container.",
        "description" : "Get PRD container",
        "operationId" : "resource_Access_getPRDContainer_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting PRD container",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "level" : 12345,
  "type" : "...",
  "searchScope" : "..."
}
            },
            "description" : "Internal exception while getting PRD container"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ContainerNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "level" : 12345,
  "type" : "...",
  "searchScope" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/containers/resource" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get Resource container.",
        "description" : "Get Resource container",
        "operationId" : "resource_Access_getResourceContainer_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting resource container",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "level" : 12345,
  "type" : "...",
  "searchScope" : "..."
}
            },
            "description" : "Internal exception while getting resource container"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ContainerNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "level" : 12345,
  "type" : "...",
  "searchScope" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/containers/role" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get Role container.",
        "description" : "Get Role container",
        "operationId" : "resource_Access_getRoleContainer_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting role container",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "level" : 12345,
  "type" : "...",
  "searchScope" : "..."
}
            },
            "description" : "Internal exception while getting role container"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ContainerNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "name" : "...",
  "level" : 12345,
  "type" : "...",
  "searchScope" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/cprs/settings" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective: Get CPRS settings on all drivers.",
        "description" : "API Objective: Get CPRS settings on all drivers.",
        "operationId" : "resource_Access_getCprsSettingsList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "drivername",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Order of sorting"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while fetching cprs settings...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "cprsSettingList" : [ {
    "logicalsystem" : "...",
    "entitlement" : "...",
    "drivername" : "...",
    "resource" : "...",
    "id" : "...",
    "entitlementvalue" : "..."
  }, {
    "logicalsystem" : "...",
    "entitlement" : "...",
    "drivername" : "...",
    "resource" : "...",
    "id" : "...",
    "entitlementvalue" : "..."
  } ],
  "nextIndex" : 12345,
  "arraySize" : 12345
}
            },
            "description" : "Internal exception while fetching cprs settings..."
          },
          "200" : {
            "schema" : {
"description" : "cprs settings list",
"$ref" : "#/definitions/json_CprsSettingNodeList"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "cprsSettingList" : [ {
    "logicalsystem" : "...",
    "entitlement" : "...",
    "drivername" : "...",
    "resource" : "...",
    "id" : "...",
    "entitlementvalue" : "..."
  }, {
    "logicalsystem" : "...",
    "entitlement" : "...",
    "drivername" : "...",
    "resource" : "...",
    "id" : "...",
    "entitlementvalue" : "..."
  } ],
  "nextIndex" : 12345,
  "arraySize" : 12345
}
            },
            "description" : "cprs settings list"
          }
        }
      }
    }
    ,
    "\/dashboard/globalTiles" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Reads global dashboard widget settings of given client id.",
        "description" : "Reads global dashboard widget settings of given client id. Only dashboard access specific settings\nwill be returned.",
        "operationId" : "resource_Access_getDashboardWidgetSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "Client id to fetch access settings (Required)"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting access settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while getting access settings"
          },
          "200" : {
            "schema" : {
"description" : "Dashboard access settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Dashboard access settings"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Saves the modified global dashboard widget.",
        "description" : "Saves the modified global dashboard widget. Input JSON should carry the key \"dashboardCustomizations\" and value\nrepresents whole of global dashboard settings. Only privileged user\ncan modify the settings. Updated widgets will have immediate effect.\n\nAddition, modification or deletion of keys is not advisable, since the behavior will change accordingly.",
        "operationId" : "resource_Access_saveGlobalDashboardWidgetSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "Client id to save access settings (Required)"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Global Dashboard widget in JSON format (Required)",
"$ref" : "#/definitions/json_JSONObject"
            },
            "description" : "Global Dashboard widget in JSON format (Required)"
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Access not allowed",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Access not allowed"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving access settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while saving access settings"
          },
          "201" : {
            "schema" : {
"description" : "Updated dashboard widget settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Updated dashboard widget settings"
          }
        }
      }
    }
    ,
    "\/delegation/category" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get list of provisioning requests categories.",
        "description" : "Get list of provisioning requests categories.",
        "operationId" : "resource_Access_getProcessRequestcategories_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting PRD category from Vault.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "categoryList" : [ {
    "categoryId" : "...",
    "categoryName" : "..."
  }, {
    "categoryId" : "...",
    "categoryName" : "..."
  } ],
  "arraySize" : 12345
}
            },
            "description" : "Internal exception while getting PRD category from Vault."
          },
          "200" : {
            "schema" : {
"description" : "list of provisioning requests categories.",
"$ref" : "#/definitions/json_CategoryListNode"
            },
            "examples" : {
              "application/json" : {
  "categoryList" : [ {
    "categoryId" : "...",
    "categoryName" : "..."
  }, {
    "categoryId" : "...",
    "categoryName" : "..."
  } ],
  "arraySize" : 12345
}
            },
            "description" : "list of provisioning requests categories."
          }
        }
      }
    }
    ,
    "\/delegation/list" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get the delegation assignments for the given user.",
        "description" : "Get the delegation assignments for the given user.",
        "operationId" : "resource_Access_getDelegationAssignments_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "UserDN whose delegation assignments needs to fetch.",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : "UserDN whose delegation assignments needs to fetch."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting delgation assignment of user.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "delegations" : [ {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  }, {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  } ],
  "totalDelegations" : 12345
}
            },
            "description" : "Internal exception while getting delgation assignment of user."
          },
          "400" : {
            "schema" : {
"description" : "XSS Validation failure.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "delegations" : [ {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  }, {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  } ],
  "totalDelegations" : 12345
}
            },
            "description" : "XSS Validation failure."
          },
          "201" : {
            "schema" : {
"description" : "list of delegations.",
"$ref" : "#/definitions/json_DelegationListNode"
            },
            "examples" : {
              "application/json" : {
  "delegations" : [ {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  }, {
    "assignmentId" : "...",
    "isExpires" : true,
    "requestDefs" : [ {
      "dn" : "...",
      "name" : "..."
    }, {
      "dn" : "...",
      "name" : "..."
    } ],
    "assignToRelationship" : {
      "key" : "...",
      "displayName" : "...",
      "sourceEntityKey" : "...",
      "sourceAttributeKey" : "...",
      "targetEntityKey" : "...",
      "targetAttributeKey" : "..."
    },
    "allRequests" : true,
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignFromGroups" : [ {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "description" : "...",
      "members" : [ "...", "..." ],
      "container" : "...",
      "membersAction" : "..."
    } ],
    "assignFromContainers" : [ {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "level" : 12345,
      "type" : "...",
      "searchScope" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "teamscope" : "...",
    "type" : "...",
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "createAvailability" : true
  } ],
  "totalDelegations" : 12345
}
            },
            "description" : "list of delegations."
          }
        }
      }
    }
    ,
    "\/delegation/relationships" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get the delegation relationships.",
        "description" : "Get the delegation relationships.",
        "operationId" : "resource_Access_getDelegationRelationships_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting Manager and direct reporter's of the user.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "relationships" : [ {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  }, {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting Manager and direct reporter's of the user."
          },
          "200" : {
            "schema" : {
"description" : "list of delegation relationships.",
"$ref" : "#/definitions/json_RelationshipListNode"
            },
            "examples" : {
              "application/json" : {
  "relationships" : [ {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  }, {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "list of delegation relationships."
          }
        }
      }
    }
    ,
    "\/delegation/requests" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Getting the Provisioning requests for the given category.",
        "description" : "Getting the Provisioning requests for the given category. If the category\nis null it will get all the Provisioning requests.",
        "operationId" : "resource_Access_getProcessRequestsBycategory_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "category",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Provisioning requests category."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting PRD category from Vault.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "provisioningRequests" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "arraySize" : 12345
}
            },
            "description" : "Internal exception while getting PRD category from Vault."
          },
          "200" : {
            "schema" : {
"description" : "list of Provisioning requests for the given category.",
"$ref" : "#/definitions/json_RequestDefListNode"
            },
            "examples" : {
              "application/json" : {
  "provisioningRequests" : [ {
    "dn" : "...",
    "name" : "..."
  }, {
    "dn" : "...",
    "name" : "..."
  } ],
  "arraySize" : 12345
}
            },
            "description" : "list of Provisioning requests for the given category."
          }
        }
      }
    }
    ,
    "\/entities/definitions" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Return entity schema of selected entity schema with/without client\nsettings (Return schema with client setting if clientId is passed).",
        "description" : "Return entity schema of selected entity schema with/without client\nsettings (Return schema with client setting if clientId is passed)",
        "operationId" : "resource_Access_getEntityDefinitions_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "creatable",
            "in" : "query",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "editable",
            "in" : "query",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "key",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "removable",
            "in" : "query",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "viewable",
            "in" : "query",
            "type" : "boolean",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/entities/globalList" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To fetch the global list configured.",
        "description" : "To fetch the global list configured",
        "operationId" : "resource_Access_fetchGlobalListByItsKey_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "query",
            "type" : "string",
            "description" : "Global list Key as defined"
          },
          {
            "name" : "locale",
            "in" : "query",
            "type" : "string",
            "description" : "Preferred locale for response data"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "entityList" : [ {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  }, {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  } ],
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "hasMore" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while listing entities",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "entityList" : [ {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  }, {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  } ],
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "hasMore" : true
}
            },
            "description" : "Internal exception while listing entities"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntityObjectListNode"
            },
            "examples" : {
              "application/json" : {
  "entityList" : [ {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  }, {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  } ],
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "hasMore" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/entities/item" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Delete all selected entity objects.",
        "description" : "Delete all selected entity objects",
        "operationId" : "resource_Access_deleteEntityVO_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of DeleteEntityVONode itemDdn entitykey",
"$ref" : "#/definitions/json_DeleteEntityListNode"
            },
            "description" : "List of DeleteEntityVONode itemDdn entitykey"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "key" : "...",
  "editKey" : "...",
  "display" : "...",
  "isCreatable" : true,
  "isEditable" : true,
  "isViewable" : true,
  "isRemovable" : true,
  "password" : "...",
  "dn" : "...",
  "namingAttribute" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "key" : "...",
  "editKey" : "...",
  "display" : "...",
  "isCreatable" : true,
  "isEditable" : true,
  "isViewable" : true,
  "isRemovable" : true,
  "password" : "...",
  "dn" : "...",
  "namingAttribute" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while creating user"
          },
          "204" : {
            "schema" : {
"description" : "deleted object response",
"$ref" : "#/definitions/json_EntityDefinitionNode"
            },
            "examples" : {
              "application/json" : {
  "key" : "...",
  "editKey" : "...",
  "display" : "...",
  "isCreatable" : true,
  "isEditable" : true,
  "isViewable" : true,
  "isRemovable" : true,
  "password" : "...",
  "dn" : "...",
  "namingAttribute" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ]
}
            },
            "description" : "deleted object response"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Create entity object for selected entity using EntityAttributeNode list.",
        "description" : "Create entity object for selected entity using EntityAttributeNode list",
        "operationId" : "resource_Access_createEntityVO_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntityDefinitionNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "conatiner" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "conatiner" : "..."
}
            },
            "description" : "Internal exception while creating user"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntityDefResponse"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "conatiner" : "..."
}
            },
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Updates the Entity Object.",
        "description" : "Updates the Entity Object",
        "operationId" : "resource_Access_updateEntityVO_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "- client ID"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- EntityObject",
"$ref" : "#/definitions/json_EntityDefinitionNode"
            },
            "description" : "- EntityObject"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "key" : "...",
  "editKey" : "...",
  "display" : "...",
  "isCreatable" : true,
  "isEditable" : true,
  "isViewable" : true,
  "isRemovable" : true,
  "password" : "...",
  "dn" : "...",
  "namingAttribute" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating the entity",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "key" : "...",
  "editKey" : "...",
  "display" : "...",
  "isCreatable" : true,
  "isEditable" : true,
  "isViewable" : true,
  "isRemovable" : true,
  "password" : "...",
  "dn" : "...",
  "namingAttribute" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while updating the entity"
          },
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntityDefinitionNode"
            },
            "examples" : {
              "application/json" : {
  "key" : "...",
  "editKey" : "...",
  "display" : "...",
  "isCreatable" : true,
  "isEditable" : true,
  "isViewable" : true,
  "isRemovable" : true,
  "password" : "...",
  "dn" : "...",
  "namingAttribute" : "...",
  "attributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ "...", "..." ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isSelected" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "rangeStart" : 12345,
    "rangeEnd" : 12345,
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/entities/list" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "When an entity is used as a lookupEntity for a DN attribute, pass\nsearchKeys parameter that will be used as search and display attributes.",
        "description" : "When an entity is used as a lookupEntity for a DN attribute, pass\nsearchKeys parameter that will be used as search and display attributes.\nIn other cases, use filterAttr parameter over searchKeys.",
        "operationId" : "resource_Access_searchEntityObject_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "advSearch",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "- Client Id"
          },
          {
            "name" : "entityDN",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "entityKey",
            "in" : "query",
            "type" : "string",
            "description" : "- Key of the entity"
          },
          {
            "name" : "filterAttr",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "isDynamic",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "isOrgChart",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "- Start Index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "- query string"
          },
          {
            "name" : "searchKeys",
            "in" : "query",
            "type" : "string",
            "description" : "- Attributes to perform entity search"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "20",
            "type" : "integer",
            "description" : "- Page size"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "type" : "string",
            "description" : "- Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "- Sort type (Ascending or Descending)"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "entityList" : [ {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  }, {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  } ],
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "hasMore" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while listing entities",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "entityList" : [ {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  }, {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  } ],
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "hasMore" : true
}
            },
            "description" : "Internal exception while listing entities"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntityObjectListNode"
            },
            "examples" : {
              "application/json" : {
  "entityList" : [ {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  }, {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  } ],
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "hasMore" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/entities/quickInfo" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Rest End point to fetch requested entity(user, role.",
        "description" : "Rest End point to fetch requested entity(user, role...) quick\ninformation,<br>\nconfigured attributes, container within Identity vault.",
        "operationId" : "resource_Access_getQuickInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "User configured clientId"
          },
          {
            "name" : "entityId",
            "in" : "query",
            "type" : "string",
            "description" : "Entity DN example : user entity, enity type will be user default\nschema,enittyID :user DN"
          },
          {
            "name" : "entityType",
            "in" : "query",
            "type" : "string",
            "description" : "entity type user is looking for quick info(USER, ROLE etc)"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting quick info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "entityType" : "...",
  "entityName" : "...",
  "details" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting quick info"
          },
          "500" : {
            "schema" : {
"description" : "Internal error occurred",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "entityType" : "...",
  "entityName" : "...",
  "details" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  } ]
}
            },
            "description" : "Internal error occurred"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_QuickInfoResponseNode"
            },
            "examples" : {
              "application/json" : {
  "entityType" : "...",
  "entityName" : "...",
  "details" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "value" : "...",
    "dataType" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/entities/schema" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Retrieve attributes defined in the requested DAL (schema) if entityName\nis not mentioned from the user,.",
        "description" : "Retrieve attributes defined in the requested DAL (schema) if entityName\nis not mentioned from the user,<br>\nAPI would work with default user schema<br>\nwhich is defined under\nUserApplicationDriver->DirectoryModel->Configuration file. if\nentityname=createUser ->in addition to dal attributes,<br>\nAPI add's password and container as an attribute and all the attributes\ndefined in the dal will be listed.<br>\nif entityname=userForm->it reads user default DAL,<br>\nand splits the attributes as primary, secondary and other based on client\nsettings.<br>\nin all other cases it will reads the respective DAl and lists all\nattributes.<br>",
        "operationId" : "resource_Access_retrieveSchemaAttributes_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "binaryAttr",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "User configured clientId"
          },
          {
            "name" : "editable",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Editable attributes filter"
          },
          {
            "name" : "entityName",
            "in" : "query",
            "type" : "string",
            "description" : "Schema name for which we are retrieving attributes<br>\nentity Name list : 1. empty-> reads default user schema 2.\ncreateUser - retrievs schema attributes for createUser form, reads\nusers default schema 3. userForm = retrives user schema with\nprimary and secondary, other attribute division based on client\nconfiguration. 4. group -> retrives groups schema etc."
          },
          {
            "name" : "minimalData",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Only attributes with key/label"
          },
          {
            "name" : "searchable",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Searchable attributes filter"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting schema attributes",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "container" : "...",
  "password" : "...",
  "profilePhoto" : "...",
  "namingAttr" : "...",
  "attributesList" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "attributes" : [ {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  }, {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  } ],
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "secondaryttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "displayPhoto" : true
}
            },
            "description" : "Internal exception while getting schema attributes"
          },
          "500" : {
            "schema" : {
"description" : "Internal error occurred",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "container" : "...",
  "password" : "...",
  "profilePhoto" : "...",
  "namingAttr" : "...",
  "attributesList" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "attributes" : [ {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  }, {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  } ],
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "secondaryttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "displayPhoto" : true
}
            },
            "description" : "Internal error occurred"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AttributesListNode"
            },
            "examples" : {
              "application/json" : {
  "container" : "...",
  "password" : "...",
  "profilePhoto" : "...",
  "namingAttr" : "...",
  "attributesList" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "attributes" : [ {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  }, {
    "name" : "...",
    "key" : "...",
    "values" : [ "...", "..." ],
    "action" : "...",
    "hidden" : true,
    "isRequired" : true,
    "dataType" : "..."
  } ],
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "secondaryttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "displayPhoto" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/featuredItems/categories" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Delete's list of featured item categories.",
        "description" : "Delete's list of featured item categories. Featured items in the category\nwill get added to uncategorized item list before deleting the category.\nResponse contains details about successfully deleted categories and those\ncategories failed to get deleted.<br>\nNote:<br>\n1) Category is the group of featured items. <br>\n2) \"itemCategoryId\" is mandatory parameter.",
        "operationId" : "resource_Access_deleteCategories_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of featured item categories node that needs to be deleted.",
"$ref" : "#/definitions/json_ItemCategoryNodeList"
            },
            "description" : "- List of featured item categories node that needs to be deleted."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting featured item categories.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while deleting featured item categories."
          },
          "204" : {
            "schema" : {
"description" : "\"itemCategoryId\" of deleted featured item categories.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "\"itemCategoryId\" of deleted featured item categories."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Add's list of featured item categories.",
        "description" : "Add's list of featured item categories. Response contains details about\nsuccessfully added categories and those categories failed to get added.\n<br>\nNote:<br>\nCategory is the group of featured items.",
        "operationId" : "resource_Access_addCategories_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of featured item categories node that needs to be added.",
"$ref" : "#/definitions/json_ItemCategoryNodeList"
            },
            "description" : "- List of featured item categories node that needs to be added."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while adding the featured item categories.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while adding the featured item categories."
          },
          "201" : {
            "schema" : {
"description" : "list of added featured item categories.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "list of added featured item categories."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Update's list of featured item categories.",
        "description" : "Update's list of featured item categories. Response contains details\nabout successfully updated categories and those categories failed to get\nupdated.<br>\nNote: <br>\n1) Category is the group of featured items. <br>\n2) \"itemCategoryId\" is mandatory parameter.",
        "operationId" : "resource_Access_updateCategories_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of featured item categories node that needs to be updated.",
"$ref" : "#/definitions/json_ItemCategoryNodeList"
            },
            "description" : "- List of featured item categories node that needs to be updated."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating the featured item categories.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while updating the featured item categories."
          },
          "204" : {
            "schema" : {
"description" : "\"itemCategoryId\" of updated featured item categories.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "\"itemCategoryId\" of updated featured item categories."
          }
        }
      }
    }
    ,
    "\/forms/dataItemsList" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Retrieves List of data items in JSON form.",
        "description" : "Retrieves List of data items in JSON form",
        "operationId" : "resource_Access_getDataItems_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "formId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting supported locale`s",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "prdTemplates" : [ {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  }, {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  } ],
  "size" : 12345
}
            },
            "description" : "Internal exception while getting supported locale`s"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_WFDataListNode"
            },
            "examples" : {
              "application/json" : {
  "prdTemplates" : [ {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  }, {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  } ],
  "size" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/forms/listTemplates" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Retrieves List of template PRD's from IDV based on isCustom flag set.",
        "description" : "Retrieves List of template PRD's from IDV based on isCustom flag set. If true, templates belonging to custom templates category will be retrieved",
        "operationId" : "resource_Access_getTemplatePRDs_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "isCustom",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "- Boolean value"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting supported locale`s",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "prdTemplates" : [ {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  }, {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  } ],
  "size" : 12345
}
            },
            "description" : "Internal exception while getting supported locale`s"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_WFDataListNode"
            },
            "examples" : {
              "application/json" : {
  "prdTemplates" : [ {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  }, {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  } ],
  "size" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/forms/listWorkflowForms" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Retrieves List of workflow forms from IDV based on container Details provided\nformContainer values ApprovalForms, RequestForms, TemplateFOrms.",
        "description" : "Retrieves List of workflow forms from IDV based on container Details provided\nformContainer values ApprovalForms, RequestForms, TemplateFOrms",
        "operationId" : "resource_Access_getWorkflowForms_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "formContainer",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting supported locale`s",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "prdTemplates" : [ {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  }, {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  } ],
  "size" : 12345
}
            },
            "description" : "Internal exception while getting supported locale`s"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_WFDataListNode"
            },
            "examples" : {
              "application/json" : {
  "prdTemplates" : [ {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  }, {
    "dn" : "...",
    "templateName" : "...",
    "description" : "...",
    "cn" : "..."
  } ],
  "size" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/gcv/value" : {
      "get" : {
        "tags" : [ "Access" ],
        "description" : "",
        "operationId" : "resource_Access_getGCV_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting the GCV value",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "type" : "...",
  "values" : [ { }, { } ]
}
            },
            "description" : "Internal exception while getting the GCV value"
          },
          "200" : {
            "schema" : {
"description" : "gcv value given the gcv key",
"$ref" : "#/definitions/json_GCVNode"
            },
            "examples" : {
              "application/json" : {
  "type" : "...",
  "values" : [ { }, { } ]
}
            },
            "description" : "gcv value given the gcv key"
          }
        }
      }
    }
    ,
    "\/groups/members" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get group members list.",
        "description" : "Get group members list",
        "operationId" : "resource_Access_getGroupMembersList_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "String to search for"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Size of the page"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Sorting order ex: asc or desc"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Group details",
"$ref" : "#/definitions/json_GroupNode"
            },
            "description" : "Group details"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting group members",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting group members"
          },
          "500" : {
            "schema" : {
"description" : "Internal error",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal error"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RecipientListNode"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/groups/membershipInfo" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "RestApi to find group Information for the user.",
        "description" : "RestApi to find group Information for the user",
        "operationId" : "resource_Access_getMemberGroupInformation_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "userDn",
            "in" : "query",
            "type" : "string",
            "description" : "User DN to find group membership"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting group membership information of a user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "groupMemberof" : [ "...", "..." ]
}
            },
            "description" : "Internal exception while getting group membership information of a user"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UsersGroupMemberShipNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "groupMemberof" : [ "...", "..." ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/helpdesk/category" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get HelpDesk users assigned for a specific category like Group, Team, Reassign and Others.",
        "description" : "Get HelpDesk users assigned for a specific category like Group, Team, Reassign and Others",
        "operationId" : "resource_Access_getHelpDeskByCategory_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "resDn",
            "in" : "query",
            "type" : "string",
            "description" : "HelpDesk category in the form of resource dn"
          },
          {
            "name" : "userDn",
            "in" : "query",
            "type" : "string",
            "description" : "User for whom the ticket will be created"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while generating helpdesk ticket number...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "users" : [ "...", "..." ]
}
            },
            "description" : "Internal exception while generating helpdesk ticket number..."
          },
          "200" : {
            "schema" : {
"description" : "HelpDesk users",
"$ref" : "#/definitions/json_HelpDeskUserNode"
            },
            "examples" : {
              "application/json" : {
  "users" : [ "...", "..." ]
}
            },
            "description" : "HelpDesk users"
          }
        }
      }
    }
    ,
    "\/helpdesk/ticket" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Creates HelpDesk ticket number to aid in submitting a request to HelpDesk.",
        "description" : "Creates HelpDesk ticket number to aid in submitting a request to HelpDesk",
        "operationId" : "resource_Access_createHelpDeskTicket_POST",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while generating helpdesk ticket number...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "ticketNumber" : "..."
}
            },
            "description" : "Internal exception while generating helpdesk ticket number..."
          },
          "201" : {
            "schema" : {
"description" : "Ticket number",
"$ref" : "#/definitions/json_HelpDeskTicketNode"
            },
            "examples" : {
              "application/json" : {
  "ticketNumber" : "..."
}
            },
            "description" : "Ticket number"
          }
        }
      }
    }
    ,
    "\/index/permissions" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to manage the permission(Role or Resource) into the index(Permission Cache).",
        "description" : "The objective of this API is to manage the permission(Role or Resource) into the index(Permission Cache).\nThis API takes the list of the permissions and its corresponding operations needs to perform on index.\nThe operations are Add or Edit, Refresh and Remove.",
        "operationId" : "resource_Access_changePermissionIndex_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "PermissionChangeOperationNode containing actions to perform on the Role or Resource.",
"$ref" : "#/definitions/json_PermissionChangeOperationNode"
            },
            "description" : "PermissionChangeOperationNode containing actions to perform on the Role or Resource."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while changing permission index",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while changing permission index"
          },
          "201" : {
            "schema" : {
"description" : "Response with code 200 if all is well, 400 on XSS violation, else 489 if the call failed.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Response with code 200 if all is well, 400 on XSS violation, else 489 if the call failed."
          }
        }
      }
    }
    ,
    "\/info/version" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get version number of REST Service implementation.",
        "description" : "Get version number of REST Service implementation.",
        "operationId" : "resource_Access_getVersion_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting version details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "version" : "..."
}
            },
            "description" : "Internal exception while getting version details"
          },
          "200" : {
            "schema" : {
"description" : "version of services",
"$ref" : "#/definitions/json_InfoNode"
            },
            "examples" : {
              "application/json" : {
  "version" : "..."
}
            },
            "description" : "version of services"
          }
        }
      }
    }
    ,
    "\/monitoring/comments" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get comments based on requestId.",
        "description" : "Get comments based on requestId",
        "operationId" : "resource_Access_getCommentsList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "commentLimit",
            "in" : "query",
            "default" : "200",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "includeSystemComments",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "requestId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "desc",
            "type" : "string",
            "description" : "HTTP request"
          },
          {
            "name" : "startIndex",
            "in" : "query",
            "default" : "0",
            "type" : "integer",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting process list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "commentNodeArray" : [ {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  }, {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  } ],
  "listCommentNode" : [ {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  }, {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting process list"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CommentListNode"
            },
            "examples" : {
              "application/json" : {
  "commentNodeArray" : [ {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  }, {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  } ],
  "listCommentNode" : [ {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  }, {
    "isSystemComment" : true,
    "timestamp" : 12345,
    "userComment" : "...",
    "activityId" : "...",
    "comment" : "...",
    "commentId" : "...",
    "requestId" : "...",
    "author" : "...",
    "authorType" : "...",
    "principal" : "...",
    "messageId" : "...",
    "commentText" : "...",
    "createTime" : 12345,
    "activityType" : 12345,
    "sequenceNumber" : 12345,
    "workId" : "...",
    "activityName" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/monitoring/reassign" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Reassign the task.",
        "description" : "Reassign the task",
        "operationId" : "resource_Access_reassign_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TaskSubmissionNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting process list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeedNodes" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failNodes" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while getting process list"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_OperationRespNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeedNodes" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failNodes" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/monitoring/workentries" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "This API returns list of work entries based on provided request id\nprocessId is nothing but request Id\npageSize  in Number of records.",
        "description" : "This API returns list of work entries based on provided request id\nprocessId is nothing but request Id\npageSize  in Number of records",
        "operationId" : "resource_Access_getWorkEntries_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "requestId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "startIndex",
            "in" : "query",
            "default" : "0",
            "type" : "integer",
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "workentries" : [ {
    "activityId" : "...",
    "activityName" : "...",
    "addressee" : "...",
    "assignmentType" : 12345,
    "availableActions" : [ {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    }, {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "recipient" : "...",
    "initiator" : "...",
    "proxyFor" : "...",
    "statusDisplayName" : "...",
    "excludePrincipals" : true
  }, {
    "activityId" : "...",
    "activityName" : "...",
    "addressee" : "...",
    "assignmentType" : 12345,
    "availableActions" : [ {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    }, {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "recipient" : "...",
    "initiator" : "...",
    "proxyFor" : "...",
    "statusDisplayName" : "...",
    "excludePrincipals" : true
  } ],
  "totalSize" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting work entry details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "workentries" : [ {
    "activityId" : "...",
    "activityName" : "...",
    "addressee" : "...",
    "assignmentType" : 12345,
    "availableActions" : [ {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    }, {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "recipient" : "...",
    "initiator" : "...",
    "proxyFor" : "...",
    "statusDisplayName" : "...",
    "excludePrincipals" : true
  }, {
    "activityId" : "...",
    "activityName" : "...",
    "addressee" : "...",
    "assignmentType" : 12345,
    "availableActions" : [ {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    }, {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "recipient" : "...",
    "initiator" : "...",
    "proxyFor" : "...",
    "statusDisplayName" : "...",
    "excludePrincipals" : true
  } ],
  "totalSize" : 12345
}
            },
            "description" : "Internal exception while getting work entry details"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_WorkEntriesRespNode"
            },
            "examples" : {
              "application/json" : {
  "workentries" : [ {
    "activityId" : "...",
    "activityName" : "...",
    "addressee" : "...",
    "assignmentType" : 12345,
    "availableActions" : [ {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    }, {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "recipient" : "...",
    "initiator" : "...",
    "proxyFor" : "...",
    "statusDisplayName" : "...",
    "excludePrincipals" : true
  }, {
    "activityId" : "...",
    "activityName" : "...",
    "addressee" : "...",
    "assignmentType" : 12345,
    "availableActions" : [ {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    }, {
      "actionValue" : 12345,
      "digitalSignatureRequired" : true,
      "digitalSignatureType" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "recipient" : "...",
    "initiator" : "...",
    "proxyFor" : "...",
    "statusDisplayName" : "...",
    "excludePrincipals" : true
  } ],
  "totalSize" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/orgChart/managers" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get the organizational hierarchy for the user.",
        "description" : "Get the organizational hierarchy for the user",
        "operationId" : "resource_Access_getUserMangaerAndHirarche_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "dn",
            "in" : "query",
            "type" : "string",
            "description" : "DN of the user for whom you want to check the organizational Chart"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "Organizational hierarchy for the userDN passed.",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "Organizational hierarchy for the userDN passed."
          }
        }
      }
    }
    ,
    "\/orgChart/v2" : {
      "get" : {
        "tags" : [ "Access" ],
        "description" : "",
        "operationId" : "resource_Access_getOrganizationChart_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "Client Id of logged in user,based on which user specific client\nconfiguration is fetched. This client configuration will have\norganization chart display attributes (Primary attributes and Secondary\nattributes) details"
          },
          {
            "name" : "entityDN",
            "in" : "query",
            "type" : "string",
            "description" : "DN of the entity whose organization chart to display"
          },
          {
            "name" : "entityDefKey",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "relationshipKeys",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting organization chart display",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "userQuickInfo" : {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  },
  "reportees" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ],
  "totalNumberOfReportees" : 12345,
  "managers" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ]
}
            },
            "description" : "Internal exception while getting organization chart display"
          },
          "200" : {
            "schema" : {
"description" : "Organization chart(hierarchy display) for the given entity",
"$ref" : "#/definitions/json_OrganizationalChartListNode"
            },
            "examples" : {
              "application/json" : {
  "userQuickInfo" : {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  },
  "reportees" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ],
  "totalNumberOfReportees" : 12345,
  "managers" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ]
}
            },
            "description" : "Organization chart(hierarchy display) for the given entity"
          }
        }
      }
    }
    ,
    "\/permissions/item" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to get permission detail.",
        "description" : "The objective of this API is to get permission detail.\nThis permission details fetch process is applicable only for Resource and PRD.",
        "operationId" : "resource_Access_getPermissionDetail_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Permission node",
"$ref" : "#/definitions/json_PermissionNode"
            },
            "description" : "Permission node"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "dn" : "...",
  "name" : "...",
  "desc" : "...",
  "entityType" : "...",
  "bulkRequestable" : true,
  "categories" : [ "...", "..." ],
  "link" : "...",
  "multiAssignable" : true,
  "excluded" : true,
  "permParams" : [ {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  }, {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  } ],
  "requestForm" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "edition" : "...",
  "objClass" : "...",
  "permission" : "...",
  "teams" : [ "...", "..." ],
  "requestFormId" : "...",
  "isNewForm" : true,
  "isExpirationRequired" : true,
  "expiresAfter" : "...",
  "proxyUser" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting permission details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "dn" : "...",
  "name" : "...",
  "desc" : "...",
  "entityType" : "...",
  "bulkRequestable" : true,
  "categories" : [ "...", "..." ],
  "link" : "...",
  "multiAssignable" : true,
  "excluded" : true,
  "permParams" : [ {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  }, {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  } ],
  "requestForm" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "edition" : "...",
  "objClass" : "...",
  "permission" : "...",
  "teams" : [ "...", "..." ],
  "requestFormId" : "...",
  "isNewForm" : true,
  "isExpirationRequired" : true,
  "expiresAfter" : "...",
  "proxyUser" : "..."
}
            },
            "description" : "Internal exception while getting permission details"
          },
          "500" : {
            "schema" : {
"description" : "Internal server error",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "dn" : "...",
  "name" : "...",
  "desc" : "...",
  "entityType" : "...",
  "bulkRequestable" : true,
  "categories" : [ "...", "..." ],
  "link" : "...",
  "multiAssignable" : true,
  "excluded" : true,
  "permParams" : [ {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  }, {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  } ],
  "requestForm" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "edition" : "...",
  "objClass" : "...",
  "permission" : "...",
  "teams" : [ "...", "..." ],
  "requestFormId" : "...",
  "isNewForm" : true,
  "isExpirationRequired" : true,
  "expiresAfter" : "...",
  "proxyUser" : "..."
}
            },
            "description" : "Internal server error"
          },
          "201" : {
            "schema" : {
"description" : "Response",
"$ref" : "#/definitions/json_PermissionNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "dn" : "...",
  "name" : "...",
  "desc" : "...",
  "entityType" : "...",
  "bulkRequestable" : true,
  "categories" : [ "...", "..." ],
  "link" : "...",
  "multiAssignable" : true,
  "excluded" : true,
  "permParams" : [ {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  }, {
    "key" : "...",
    "dataType" : "...",
    "value" : "...",
    "hidden" : true,
    "static" : true,
    "displayLabel" : "...",
    "codemapKey" : "...",
    "valueLabel" : "...",
    "entitlementDn" : "...",
    "optionQueryUrl" : "...",
    "multivalue" : true
  } ],
  "requestForm" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "edition" : "...",
  "objClass" : "...",
  "permission" : "...",
  "teams" : [ "...", "..." ],
  "requestFormId" : "...",
  "isNewForm" : true,
  "isExpirationRequired" : true,
  "expiresAfter" : "...",
  "proxyUser" : "..."
}
            },
            "description" : "Response"
          }
        }
      }
    }
    ,
    "\/preference/dashboard" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Rest API to delete user column prefernce.",
        "description" : "Rest API to delete user column prefernce",
        "operationId" : "resource_Access_deleteDashboardPreferences_DELETE",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "attribute",
            "in" : "query",
            "type" : "string",
            "description" : "Preference attribute"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting user preferences",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ],
  "settingFor" : "...",
  "openFormInPopUp" : true
}
            },
            "description" : "Internal exception while deleting user preferences"
          },
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PreferencesNode"
            },
            "examples" : {
              "application/json" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ],
  "settingFor" : "...",
  "openFormInPopUp" : true
}
            },
            "description" : ""
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Retrives user configured column preferences.",
        "description" : "Retrives user configured column preferences",
        "operationId" : "resource_Access_getUserDashboardPrefs_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "attribute",
            "in" : "query",
            "default" : "All",
            "type" : "string",
            "description" : "nothing but userPrefernce type example : All, Assigned to me etc"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user column preferences",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ],
  "settingFor" : "...",
  "openFormInPopUp" : true
}
            },
            "description" : "Internal exception while getting user column preferences"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PreferencesNode"
            },
            "examples" : {
              "application/json" : {
  "isPreferenceAvailable" : true,
  "columns" : [ "...", "..." ],
  "settingFor" : "...",
  "openFormInPopUp" : true
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Updates user column preference with preference type.",
        "description" : "Updates user column preference with preference type",
        "operationId" : "resource_Access_setUserDashboardPrefs_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [
          {
            "name" : "attribute",
            "in" : "query",
            "type" : "string",
            "description" : "Nothing but userPreference type"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DashboardPreferenceNodeList"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while setting user column preferences",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "location" : "...",
  "statusInfo" : {
    "reasonPhrase" : "...",
    "statusCode" : 12345,
    "family" : "REDIRECTION"
  },
  "allowedMethods" : [ "...", "..." ],
  "length" : 12345,
  "entity" : { },
  "entityTag" : {
    "weak" : true,
    "value" : "..."
  },
  "mediaType" : {
    "wildcardType" : true,
    "type" : "...",
    "wildcardSubtype" : true,
    "parameters" : {
      "property1" : "...",
      "property2" : "..."
    },
    "subtype" : "..."
  },
  "cookies" : {
    "property1" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    },
    "property2" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    }
  },
  "language" : {
    "displayVariant" : "...",
    "country" : "...",
    "unicodeLocaleAttributes" : [ "...", "..." ],
    "displayScript" : "...",
    "extensionKeys" : [ "...", "..." ],
    "language" : "...",
    "displayName" : "...",
    "ISOCountries" : [ "...", "..." ],
    "ISO3Country" : "...",
    "displayLanguage" : "...",
    "ISO3Language" : "...",
    "displayCountry" : "...",
    "availableLocales" : [ { }, { } ],
    "ISOLanguages" : [ "...", "..." ],
    "unicodeLocaleKeys" : [ "...", "..." ],
    "default" : { },
    "variant" : "...",
    "script" : "..."
  },
  "links" : [ {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  }, {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  } ],
  "lastModified" : 12345,
  "metadata" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "status" : 12345,
  "headers" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "date" : 12345,
  "stringHeaders" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  }
}
            },
            "description" : "Internal exception while setting user column preferences"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "location" : "...",
  "statusInfo" : {
    "reasonPhrase" : "...",
    "statusCode" : 12345,
    "family" : "OTHER"
  },
  "allowedMethods" : [ "...", "..." ],
  "length" : 12345,
  "entity" : { },
  "entityTag" : {
    "weak" : true,
    "value" : "..."
  },
  "mediaType" : {
    "wildcardType" : true,
    "type" : "...",
    "wildcardSubtype" : true,
    "parameters" : {
      "property1" : "...",
      "property2" : "..."
    },
    "subtype" : "..."
  },
  "cookies" : {
    "property1" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    },
    "property2" : {
      "maxAge" : 12345,
      "secure" : true,
      "httpOnly" : true,
      "comment" : "...",
      "expiry" : 12345,
      "domain" : "...",
      "path" : "...",
      "name" : "...",
      "value" : "...",
      "version" : 12345
    }
  },
  "language" : {
    "displayVariant" : "...",
    "country" : "...",
    "unicodeLocaleAttributes" : [ "...", "..." ],
    "displayScript" : "...",
    "extensionKeys" : [ "...", "..." ],
    "language" : "...",
    "displayName" : "...",
    "ISOCountries" : [ "...", "..." ],
    "ISO3Country" : "...",
    "displayLanguage" : "...",
    "ISO3Language" : "...",
    "displayCountry" : "...",
    "availableLocales" : [ { }, { } ],
    "ISOLanguages" : [ "...", "..." ],
    "unicodeLocaleKeys" : [ "...", "..." ],
    "default" : { },
    "variant" : "...",
    "script" : "..."
  },
  "links" : [ {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  }, {
    "uriBuilder" : { },
    "uri" : "...",
    "rel" : "...",
    "title" : "...",
    "rels" : [ "...", "..." ],
    "type" : "...",
    "params" : {
      "property1" : "...",
      "property2" : "..."
    }
  } ],
  "lastModified" : 12345,
  "metadata" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "status" : 12345,
  "headers" : {
    "property1" : [ { }, { } ],
    "property2" : [ { }, { } ]
  },
  "date" : 12345,
  "stringHeaders" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  }
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxy/all" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "This API returns the list of available proxy definitions for a user.",
        "description" : "This API returns the list of available proxy definitions for a user.\nIf Admin is either PRD or Delegated Admin then able to get all the proxy definitions.\nIf the user is a normal user then able to get all the proxy definitions only user for itself.",
        "operationId" : "resource_Access_getAllProxyAssignments_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "expiration",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Order of sorting"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting proxy assignments",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "userType" : "...",
  "configureProxy" : true,
  "proxyDefinitions" : [ {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  }, {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting proxy assignments"
          },
          "200" : {
            "schema" : {
"description" : "Proxy assignments",
"$ref" : "#/definitions/json_ProxyDefinitionListNode"
            },
            "examples" : {
              "application/json" : {
  "userType" : "...",
  "configureProxy" : true,
  "proxyDefinitions" : [ {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  }, {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  } ]
}
            },
            "description" : "Proxy assignments"
          }
        }
      }
    }
    ,
    "\/proxy/create" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to create new proxy definition.",
        "description" : "The objective of this API is to create new proxy definition. This API\nrequires the below input params, for proxy creation in different\nscenarios<\/br>\n1. assignedUserDN is the param, to whom the proxy going to be\nassigned.<\/br>\n2. proxyForUsers/proxyForGroups/proxyForContainers is the param, for whom\nthe assignedUserDN will be the proxy.<\/br>\n3. expirytime (NO_EXPIRATION ,when we don't want any date for expiry) is\nthe param, when the proxy definition going to be expired.<\/br>\n4. isNotificationRequired (either true/false as valid param values) is\nthe param, if the proxy creation needs to be notified to anybody.<\/br>\n4. notificationAddresseeType (valid param values are\nALL/ASSIGN_FROM,ASSIGN_TO/SELECTIVE ) is the param required, when\nisNotificationRequired param is true .<\/br>\n5. notifyUsers is the list param, who needs to be notified about this\nproxy creation in case of notificationAddresseeType is SELECTIVE.<\/br>",
        "operationId" : "resource_Access_createProxyDefinition_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- proxy definition info",
"$ref" : "#/definitions/json_ProxyDefNode"
            },
            "description" : "- proxy definition info"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "userType" : "...",
  "configureProxy" : true,
  "proxyDefinitions" : [ {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  }, {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating proxy definition",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "userType" : "...",
  "configureProxy" : true,
  "proxyDefinitions" : [ {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  }, {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  } ]
}
            },
            "description" : "Internal exception while creating proxy definition"
          },
          "201" : {
            "schema" : {
"description" : "response to the query",
"$ref" : "#/definitions/json_ProxyDefinitionListNode"
            },
            "examples" : {
              "application/json" : {
  "userType" : "...",
  "configureProxy" : true,
  "proxyDefinitions" : [ {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  }, {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  } ]
}
            },
            "description" : "response to the query"
          }
        }
      }
    }
    ,
    "\/proxy/delete" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to delete one or more existing proxy definitions.",
        "description" : "The objective of this API is to delete one or more existing proxy definitions.\nThe API receives the proxy definitions as a list as input.\nDelele the listed proxy definitions.\nSend back the success and/or failure message as response.",
        "operationId" : "resource_Access_deleteProxyDefinition_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ProxyDefinitionListNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting proxy definition",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting proxy definition"
          },
          "201" : {
            "schema" : {
"description" : "response",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "response"
          }
        }
      }
    }
    ,
    "\/proxy/edit" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to modify the existing proxy definition.",
        "description" : "The objective of this API is to modify the existing proxy definition.\nThis API receives the four input params, which are defined below.<\/br>\n1. First param is the user(1st) to whom the proxy going to be assigned.<\/br>\n2. Second param is the user or group(2nd), for whom first user will be the proxy.<\/br>\n3. Third param is date. when the proxy definition going to be expired.<\/br>\n4. Fourth one is the \"cn\" of that proxy, which going to be modified.<\/br>",
        "operationId" : "resource_Access_editProxyDefinition_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- proxy definition info",
"$ref" : "#/definitions/json_ProxyDefNode"
            },
            "description" : "- proxy definition info"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "userType" : "...",
  "configureProxy" : true,
  "proxyDefinitions" : [ {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  }, {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating proxy definition",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "userType" : "...",
  "configureProxy" : true,
  "proxyDefinitions" : [ {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  }, {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  } ]
}
            },
            "description" : "Internal exception while updating proxy definition"
          },
          "201" : {
            "schema" : {
"description" : "response",
"$ref" : "#/definitions/json_ProxyDefinitionListNode"
            },
            "examples" : {
              "application/json" : {
  "userType" : "...",
  "configureProxy" : true,
  "proxyDefinitions" : [ {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  }, {
    "dn" : "...",
    "proxyForUsers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForGroups" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "proxyForContainers" : [ {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    }, {
      "targetSetList" : [ { }, { } ],
      "username" : "...",
      "dn" : "..."
    } ],
    "assignedUserDN" : "...",
    "assignedUserName" : "...",
    "editable" : true,
    "assignedUserteamList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ],
    "isNotificationRequired" : true,
    "notificationAddresseeType" : "...",
    "notifyUsers" : [ "...", "..." ],
    "expirytime" : "..."
  } ]
}
            },
            "description" : "response"
          }
        }
      }
    }
    ,
    "\/proxy/for" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective:\nReturn users for which the logged in user can proxy.",
        "description" : "API Objective:\nReturn users for which the logged in user can proxy.\nThis API takes user as an input,\nthen search the list of the proxy users of that user.\nThe proxy users either normal user, part of static group or container.",
        "operationId" : "resource_Access_proxyFor_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "filter",
            "in" : "query",
            "default" : "default",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "- search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "20",
            "type" : "integer",
            "description" : "- page size"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting proxy list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "proxyForUsers" : [ {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  }, {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  } ],
  "nextUserIndex" : 12345,
  "userArraySize" : 12345,
  "proxyForCtrs" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting proxy list"
          },
          "200" : {
            "schema" : {
"description" : "response to the query",
"$ref" : "#/definitions/json_ProxyForListNode"
            },
            "examples" : {
              "application/json" : {
  "proxyForUsers" : [ {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  }, {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  } ],
  "nextUserIndex" : 12345,
  "userArraySize" : 12345,
  "proxyForCtrs" : [ {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "level" : 12345,
    "type" : "...",
    "searchScope" : "..."
  } ]
}
            },
            "description" : "response to the query"
          }
        }
      }
    }
    ,
    "\/query/global" : {
      "post" : {
        "tags" : [ "Access" ],
        "description" : "",
        "operationId" : "resource_Access_executeGlobalQuery_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- holds information about the query to execute",
"$ref" : "#/definitions/json_QueryNode"
            },
            "description" : "- holds information about the query to execute"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while executing the query",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "entityList" : [ {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  }, {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  } ],
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "hasMore" : true
}
            },
            "description" : "Internal exception while executing the query"
          },
          "201" : {
            "schema" : {
"description" : "result obtained after executing the given query",
"$ref" : "#/definitions/json_EntityObjectListNode"
            },
            "examples" : {
              "application/json" : {
  "entityList" : [ {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  }, {
    "dn" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ]
  } ],
  "nextIndex" : 12345,
  "totalCount" : 12345,
  "hasMore" : true
}
            },
            "description" : "result obtained after executing the given query"
          }
        }
      }
    }
    ,
    "\/query/list" : {
      "get" : {
        "tags" : [ "Access" ],
        "description" : "",
        "operationId" : "resource_Access_getQueries_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while listing the queries",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "queries" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "parameters" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    } ],
    "entityKey" : "...",
    "returnAttributes" : [ "...", "..." ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "parameters" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    } ],
    "entityKey" : "...",
    "returnAttributes" : [ "...", "..." ]
  } ],
  "total" : 12345
}
            },
            "description" : "Internal exception while listing the queries"
          },
          "200" : {
            "schema" : {
"description" : "list of queries in the system",
"$ref" : "#/definitions/json_QueryResponseNode"
            },
            "examples" : {
              "application/json" : {
  "queries" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "parameters" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    } ],
    "entityKey" : "...",
    "returnAttributes" : [ "...", "..." ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "parameters" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "values" : [ "...", "..." ]
    } ],
    "entityKey" : "...",
    "returnAttributes" : [ "...", "..." ]
  } ],
  "total" : 12345
}
            },
            "description" : "list of queries in the system"
          }
        }
      }
    }
    ,
    "\/queue/entry" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "API to delete cart entry along with items for given user and cart action.",
        "description" : "API to delete cart entry along with items for given user and cart action",
        "operationId" : "resource_Access_removeCartEntry_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "UserInput payLoad",
"$ref" : "#/definitions/json_CartNode"
            },
            "description" : "UserInput payLoad"
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "API to get cart entry along with items and their details(assignee) for\nrequested user and action.",
        "description" : "API to get cart entry along with items and their details(assignee) for\nrequested user and action",
        "operationId" : "resource_Access_getCartEntry_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "cartAction",
            "in" : "query",
            "type" : "string",
            "description" : "action to categories cart entries based on action"
          },
          {
            "name" : "cartOwner",
            "in" : "query",
            "type" : "string",
            "description" : "user which hold this cart entry"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "cart entry along with items and their details(assignee)",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "cart entry along with items and their details(assignee)"
          }
        }
      }
    }
    ,
    "\/relationships/list" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get relationships depending on relationship type, source entity\nIf passed relationshipType is null, empty or invalid then default is orgchart\nAllowed relationship types are all, team-management, orgchart.",
        "description" : "Get relationships depending on relationship type, source entity\nIf passed relationshipType is null, empty or invalid then default is orgchart\nAllowed relationship types are all, team-management, orgchart",
        "operationId" : "resource_Access_getRelationships_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "relationshipType",
            "in" : "query",
            "default" : "orgchart",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "sourceEntityKey",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting relationships",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "relationships" : [ {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  }, {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting relationships"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RelationshipListNode"
            },
            "examples" : {
              "application/json" : {
  "relationships" : [ {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  }, {
    "key" : "...",
    "displayName" : "...",
    "sourceEntityKey" : "...",
    "sourceAttributeKey" : "...",
    "targetEntityKey" : "...",
    "targetAttributeKey" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/requests/history" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective:\nRetract history item based on id.",
        "description" : "API Objective:\nRetract history item based on id.\nThis API takes ID as an input,\nthen retract the history details of that ID.\nSuccess and/or failure message send back as response.",
        "operationId" : "resource_Access_retractRequest_DELETE",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "list of requests to retract",
"$ref" : "#/definitions/json_PermissionRequestHistoryListNode"
            },
            "description" : "list of requests to retract"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while retracting request",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while retracting request"
          },
          "204" : {
            "schema" : {
"description" : "response payload",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "response payload"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective:\nGet permission request history of logged in user.",
        "description" : "API Objective:\nGet permission request history of logged in user.\nThis API takes logged in user details and check the history of that user.\nThis history contains PRD, Role and Resource history of that particular user.\nIf the logged in user is Admin, then able to see all the history for PRD, Role & Resource across the application.\nSorting and Pagination have been included.",
        "operationId" : "resource_Access_getLoggedInUserPermissionRequestHistory_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "start of index, 1=first"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "5",
            "type" : "integer",
            "description" : "number of requests to return in result set"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user`s permission request history",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting user`s permission request history"
          },
          "500" : {
            "schema" : {
"description" : "Internal server error",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal server error"
          },
          "200" : {
            "schema" : {
"description" : "permission requests",
"$ref" : "#/definitions/json_PermissionRequestHistoryListNode"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "permission requests"
          }
        }
      }
    }
    ,
    "\/requests/historyForUser" : {
      "post" : {
        "tags" : [ "Access" ],
        "description" : "",
        "operationId" : "resource_Access_getUserPermissionRequestHistory_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "action",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "cn",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "endDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : ""
          },
          {
            "name" : "item",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "requestDate",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "startDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : ""
          },
          {
            "name" : "status",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "type",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/requests/historylist" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective:\nGet permission request history of logged in user.",
        "description" : "API Objective:\nGet permission request history of logged in user.\nThis API takes logged in user details and check the history of that user.\nThis history contains PRD, Role and Resource history of that particular user.\nIf the logged in user is Admin, then able to see all the history for PRD, Role & Resource across the application.",
        "operationId" : "resource_Access_getLoggedInUserPermissionRequestHistory_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "action",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "cn",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "CN"
          },
          {
            "name" : "endDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : "End date"
          },
          {
            "name" : "item",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Requested item"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to display in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "requestDate",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Order of sorting"
          },
          {
            "name" : "startDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : "Start date"
          },
          {
            "name" : "status",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Process status"
          },
          {
            "name" : "type",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Type of permission"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user`s permission request history",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting user`s permission request history"
          },
          "200" : {
            "schema" : {
"description" : "Request history",
"$ref" : "#/definitions/json_PermissionRequestHistoryListNode"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Request history"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective:\nGet PRD request history of a proxy user.",
        "description" : "API Objective:\nGet PRD request history of a proxy user.\nThis API takes a proxy user details and check the history of that user.\nThis history contains PRD history of that particular user.\nIf the a proxy user is admin, then able to see all the history for PRD across the application.",
        "operationId" : "resource_Access_getLoggedInUserProxyPRDRequestHistory_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "cn",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "CN to search"
          },
          {
            "name" : "endDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : "End date"
          },
          {
            "name" : "item",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Requested item"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "requestDate",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Order of sorting"
          },
          {
            "name" : "startDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : "Start date"
          },
          {
            "name" : "status",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Status"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Proxy user",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : "Proxy user"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting proxy user PRD request history",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting proxy user PRD request history"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionRequestHistoryListNode"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/requests/permissions" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective:\nMake requests for role, resource or PRD.",
        "description" : "API Objective:\nMake requests for role, resource or PRD.\nThis API takes user and requested item.\nUser could me self or others. if it is others then could be multiple.\nItem means (Role , Resource & PRD). this one also could be the list of the items.\nThe API internally raises the request and send a success or failure message to the requester.\nThis API use both the cased self request and ROBO.",
        "operationId" : "resource_Access_processPermissionRequests_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Bulk permission request node",
"$ref" : "#/definitions/json_RequestNode"
            },
            "description" : "Bulk permission request node"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while processing permission request",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
}
            },
            "description" : "Internal exception while processing permission request"
          },
          "201" : {
            "schema" : {
"description" : "Status of the request",
"$ref" : "#/definitions/json_RequestOperationResponseListNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
}
            },
            "description" : "Status of the request"
          }
        }
      }
    }
    ,
    "\/requests/processes" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Fetch process information based on provided processId and CorrelationId\nprocess id is nothing but request Id\ncorrelation id is unique id for each permission request for example \"UARest#ProcessRequest#20200331-17\"\npageSize  in Number of records.",
        "description" : "Fetch process information based on provided processId and CorrelationId\nprocess id is nothing but request Id\ncorrelation id is unique id for each permission request for example \"UARest#ProcessRequest#20200331-17\"\npageSize  in Number of records",
        "operationId" : "resource_Access_getProcessesDetail_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "correlationId",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "processId",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "200",
            "type" : "integer",
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "processes" : [ {
    "processId" : "...",
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Definition" : {
      "DN" : "...",
      "value" : "..."
    },
    "processStatus" : "...",
    "requestId" : "...",
    "approvalStatus" : "...",
    "creationTime" : 12345,
    "correlationId" : "...",
    "name" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "processXml" : "...",
    "version" : "...",
    "engineId" : "...",
    "proxy" : "...",
    "completionTime" : 12345
  }, {
    "processId" : "...",
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Definition" : {
      "DN" : "...",
      "value" : "..."
    },
    "processStatus" : "...",
    "requestId" : "...",
    "approvalStatus" : "...",
    "creationTime" : 12345,
    "correlationId" : "...",
    "name" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "processXml" : "...",
    "version" : "...",
    "engineId" : "...",
    "proxy" : "...",
    "completionTime" : 12345
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting process details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "processes" : [ {
    "processId" : "...",
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Definition" : {
      "DN" : "...",
      "value" : "..."
    },
    "processStatus" : "...",
    "requestId" : "...",
    "approvalStatus" : "...",
    "creationTime" : 12345,
    "correlationId" : "...",
    "name" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "processXml" : "...",
    "version" : "...",
    "engineId" : "...",
    "proxy" : "...",
    "completionTime" : 12345
  }, {
    "processId" : "...",
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Definition" : {
      "DN" : "...",
      "value" : "..."
    },
    "processStatus" : "...",
    "requestId" : "...",
    "approvalStatus" : "...",
    "creationTime" : 12345,
    "correlationId" : "...",
    "name" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "processXml" : "...",
    "version" : "...",
    "engineId" : "...",
    "proxy" : "...",
    "completionTime" : 12345
  } ]
}
            },
            "description" : "Internal exception while getting process details"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ProcessesInfoResponseNode"
            },
            "examples" : {
              "application/json" : {
  "processes" : [ {
    "processId" : "...",
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Definition" : {
      "DN" : "...",
      "value" : "..."
    },
    "processStatus" : "...",
    "requestId" : "...",
    "approvalStatus" : "...",
    "creationTime" : 12345,
    "correlationId" : "...",
    "name" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "processXml" : "...",
    "version" : "...",
    "engineId" : "...",
    "proxy" : "...",
    "completionTime" : 12345
  }, {
    "processId" : "...",
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Definition" : {
      "DN" : "...",
      "value" : "..."
    },
    "processStatus" : "...",
    "requestId" : "...",
    "approvalStatus" : "...",
    "creationTime" : 12345,
    "correlationId" : "...",
    "name" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "processXml" : "...",
    "version" : "...",
    "engineId" : "...",
    "proxy" : "...",
    "completionTime" : 12345
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/requests/resourceCategories" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective:\nThe objective of this Rest API is to provide the Resource categories are available in application.",
        "description" : "API Objective:\nThe objective of this Rest API is to provide the Resource categories are available in application.\nSearching , Sorting and Pagination also supported.\nCache and noCache can be achieve using the input parameter.",
        "operationId" : "resource_Access_searchResourceCategories_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "forceRefresh",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need force refresh of permission?"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "noCache",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need to use cache?"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of results to show in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Order of sorting"
          },
          {
            "name" : "token",
            "in" : "query",
            "type" : "string",
            "description" : "Token"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching resource categories",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "token" : "..."
}
            },
            "description" : "Internal exception while searching resource categories"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionCategoryListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "token" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/requests/roleCategories" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective:\nThe objective of this Rest API is to provide the Role categories are available in application.",
        "description" : "API Objective:\nThe objective of this Rest API is to provide the Role categories are available in application.\nSearching , Sorting and Pagination also supported.",
        "operationId" : "resource_Access_searchRoleCategories_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Next index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of results to show in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Sorting order"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching role categories",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "token" : "..."
}
            },
            "description" : "Internal exception while searching role categories"
          },
          "200" : {
            "schema" : {
"description" : "Role categories",
"$ref" : "#/definitions/json_PermissionCategoryListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "token" : "..."
}
            },
            "description" : "Role categories"
          }
        }
      }
    }
    ,
    "\/sods/violations" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To get details of the user, role or container who have been assigned SOD roles.",
        "description" : "To get details of the user, role or container who have been assigned SOD roles",
        "operationId" : "resource_Access_getSODViolations_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "sodDn",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting SOD violations...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "sodId" : "...",
  "sodViolations" : [ {
    "sodId" : "...",
    "type" : "..."
  }, {
    "sodId" : "...",
    "type" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting SOD violations..."
          },
          "200" : {
            "schema" : {
"description" : "SOD violations",
"$ref" : "#/definitions/json_SodViolationListNode"
            },
            "examples" : {
              "application/json" : {
  "sodId" : "...",
  "sodViolations" : [ {
    "sodId" : "...",
    "type" : "..."
  }, {
    "sodId" : "...",
    "type" : "..."
  } ]
}
            },
            "description" : "SOD violations"
          }
        }
      }
    }
    ,
    "\/supportedlocales/defaultlocale" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To get the User Application default locale.",
        "description" : "To get the User Application default locale.",
        "operationId" : "resource_Access_defaultLocale_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting default locale",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while getting default locale"
          },
          "200" : {
            "schema" : {
"description" : "default locale.",
"type" : "string"
            },
            "examples" : {
            },
            "description" : "default locale."
          }
        }
      }
    }
    ,
    "\/supportedlocales/userlocale" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To get the user locale.",
        "description" : "To get the user locale",
        "operationId" : "resource_Access_userLocale_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user locale",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while getting user locale"
          },
          "200" : {
            "schema" : {
"description" : "user locale.",
"type" : "string"
            },
            "examples" : {
            },
            "description" : "user locale."
          }
        }
      }
    }
    ,
    "\/tasks/badge" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get logged in user's total tasks to act upon for the purpose of\ndisplaying in user dashboard.",
        "description" : "Get logged in user's total tasks to act upon for the purpose of\ndisplaying in user dashboard.",
        "operationId" : "resource_Access_getLoggedInUserTasksBadge_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "limit",
            "in" : "query",
            "default" : "100",
            "type" : "integer",
            "description" : "To limit the search with any minimum value, beyond which task\ncount will be suffixed with \"+\""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting task badge count",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "badge" : 12345,
  "params" : [ {
    "id" : 12345,
    "value" : "..."
  }, {
    "id" : 12345,
    "value" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting task badge count"
          },
          "200" : {
            "schema" : {
"description" : "Task badge details",
"$ref" : "#/definitions/json_LandingPageBadgeNode"
            },
            "examples" : {
              "application/json" : {
  "badge" : 12345,
  "params" : [ {
    "id" : 12345,
    "value" : "..."
  }, {
    "id" : 12345,
    "value" : "..."
  } ]
}
            },
            "description" : "Task badge details"
          }
        }
      }
    }
    ,
    "\/tasks/item" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get details of a specific task to provide complete details of the task in\nthe approval form.",
        "description" : "Get details of a specific task to provide complete details of the task in\nthe approval form. Beside approval form, task comments history can be\ndisplayed. It is optional to include system comments. Proxy user can view\ntask detail in proxy mode. It is also possible to limit the number of\ncomments to fetch. It checks whether task is bulk approvable.",
        "operationId" : "resource_Access_getTaskDetail_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "commentLimit",
            "in" : "query",
            "default" : "100",
            "type" : "integer",
            "description" : "Limit the number of comments to return"
          },
          {
            "name" : "includeSystemComments",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Include system comments in the response"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Task node details like taskId, proxy user",
"$ref" : "#/definitions/json_AfTaskNode"
            },
            "description" : "Task node details like taskId, proxy user"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "taskId" : "...",
  "link" : "...",
  "processName" : "...",
  "processId" : "...",
  "activityName" : "...",
  "createTime" : 12345,
  "expirationTime" : 12345,
  "recipient" : "...",
  "recipientType" : "...",
  "recipientName" : "...",
  "initiator" : "...",
  "initiatorName" : "...",
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "bulkApprovable" : true,
  "approvalForm" : "...",
  "approvalFormId" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "taskClaimed" : true,
  "addresseetype" : "...",
  "claimedby" : "...",
  "addresseeEntityType" : "...",
  "addressee" : "...",
  "assignedTo" : "...",
  "priority" : "...",
  "delegatedTask" : true,
  "proxyUser" : "...",
  "assignStatus" : "...",
  "returnAddressee" : "...",
  "confirmationNumber" : "...",
  "isNewForm" : true,
  "currentAddressee" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting task details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "taskId" : "...",
  "link" : "...",
  "processName" : "...",
  "processId" : "...",
  "activityName" : "...",
  "createTime" : 12345,
  "expirationTime" : 12345,
  "recipient" : "...",
  "recipientType" : "...",
  "recipientName" : "...",
  "initiator" : "...",
  "initiatorName" : "...",
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "bulkApprovable" : true,
  "approvalForm" : "...",
  "approvalFormId" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "taskClaimed" : true,
  "addresseetype" : "...",
  "claimedby" : "...",
  "addresseeEntityType" : "...",
  "addressee" : "...",
  "assignedTo" : "...",
  "priority" : "...",
  "delegatedTask" : true,
  "proxyUser" : "...",
  "assignStatus" : "...",
  "returnAddressee" : "...",
  "confirmationNumber" : "...",
  "isNewForm" : true,
  "currentAddressee" : "..."
}
            },
            "description" : "Internal exception while getting task details"
          },
          "201" : {
            "schema" : {
"description" : "response node <TaskNode>",
"$ref" : "#/definitions/json_AfTaskNode"
            },
            "examples" : {
              "application/json" : {
  "taskId" : "...",
  "link" : "...",
  "processName" : "...",
  "processId" : "...",
  "activityName" : "...",
  "createTime" : 12345,
  "expirationTime" : 12345,
  "recipient" : "...",
  "recipientType" : "...",
  "recipientName" : "...",
  "initiator" : "...",
  "initiatorName" : "...",
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "bulkApprovable" : true,
  "approvalForm" : "...",
  "approvalFormId" : "...",
  "dataItems" : [ {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  }, {
    "name" : "...",
    "dataType" : "...",
    "valueType" : 12345,
    "readOnly" : true,
    "multiValued" : true,
    "values" : [ { }, { } ],
    "target" : "...",
    "source" : "...",
    "valueSet" : true
  } ],
  "taskClaimed" : true,
  "addresseetype" : "...",
  "claimedby" : "...",
  "addresseeEntityType" : "...",
  "addressee" : "...",
  "assignedTo" : "...",
  "priority" : "...",
  "delegatedTask" : true,
  "proxyUser" : "...",
  "assignStatus" : "...",
  "returnAddressee" : "...",
  "confirmationNumber" : "...",
  "isNewForm" : true,
  "currentAddressee" : "..."
}
            },
            "description" : "response node <TaskNode>"
          }
        }
      }
    }
    ,
    "\/tasks/list" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Fetches task list for the logged in user.",
        "description" : "Fetches task list for the logged in user. Used for both end user and\nadministrator tasks. It supports sorting, searching, filtering and\npagination based on query parameter(s) supplied. By default, task list\nwill be sorted based on task creation date in descending order. Response\ncontains total task count and paginated task list.",
        "operationId" : "resource_Access_getTasksList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "assignStatus",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "assignedTo",
            "in" : "query",
            "type" : "string",
            "description" : "Task addressee is logged in user. Used only for administrators"
          },
          {
            "name" : "delegatedTasks",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "expireUnit",
            "in" : "query",
            "type" : "string",
            "description" : "Task expiry unit Hours, Days or Weeks"
          },
          {
            "name" : "expireWithin",
            "in" : "query",
            "type" : "string",
            "description" : "To filter tasks that expires within a time period"
          },
          {
            "name" : "fromIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index of the page to display tasks (Required)"
          },
          {
            "name" : "onlyHelpdeskTask",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "proxyUser",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "To filter tasks by search text matching either process name,\nactivity name, Recipient or status"
          },
          {
            "name" : "recipient",
            "in" : "query",
            "type" : "string",
            "description" : "Permission recipient is logged in user. Used only for\nadministrators"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "createTime",
            "type" : "string",
            "description" : "User selected column to sort task list"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Sorting order - asc or desc"
          },
          {
            "name" : "status",
            "in" : "query",
            "type" : "string",
            "description" : "To filter tasks based on status like Claimed"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user task list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "hasMore" : true,
  "tasks" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "totalSize" : 12345,
  "nextIndex" : 12345,
  "userTypeInTask" : true
}
            },
            "description" : "Internal exception while getting user task list"
          },
          "200" : {
            "schema" : {
"description" : "List of user tasks",
"$ref" : "#/definitions/json_AfTaskListNode"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "hasMore" : true,
  "tasks" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "totalSize" : 12345,
  "nextIndex" : 12345,
  "userTypeInTask" : true
}
            },
            "description" : "List of user tasks"
          }
        }
      }
    }
    ,
    "\/tasks/v2" : {
      "post" : {
        "tags" : [ "Access" ],
        "description" : "",
        "operationId" : "resource_Access_submitFormDetails_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_JSONObject"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while submiting form",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "message" : "..."
}
            },
            "description" : "Internal exception while submiting form"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_FormResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "message" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tasks/workEntries" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "This API returns list of work entries based on provided process id\nprocessId is nothing but request Id\npageSize  in Number of records.",
        "description" : "This API returns list of work entries based on provided process id\nprocessId is nothing but request Id\npageSize  in Number of records",
        "operationId" : "resource_Access_getEntries_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "processId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "200",
            "type" : "integer",
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "workEntries" : [ {
    "activityId" : "...",
    "activityName" : "...",
    "Addressee" : {
      "DN" : "...",
      "value" : "..."
    },
    "assignmentType" : 12345,
    "availableActions" : [ {
      "code" : "...",
      "value" : "..."
    }, {
      "code" : "...",
      "value" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "proxyFor" : "..."
  }, {
    "activityId" : "...",
    "activityName" : "...",
    "Addressee" : {
      "DN" : "...",
      "value" : "..."
    },
    "assignmentType" : 12345,
    "availableActions" : [ {
      "code" : "...",
      "value" : "..."
    }, {
      "code" : "...",
      "value" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "proxyFor" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting work entry details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "workEntries" : [ {
    "activityId" : "...",
    "activityName" : "...",
    "Addressee" : {
      "DN" : "...",
      "value" : "..."
    },
    "assignmentType" : 12345,
    "availableActions" : [ {
      "code" : "...",
      "value" : "..."
    }, {
      "code" : "...",
      "value" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "proxyFor" : "..."
  }, {
    "activityId" : "...",
    "activityName" : "...",
    "Addressee" : {
      "DN" : "...",
      "value" : "..."
    },
    "assignmentType" : 12345,
    "availableActions" : [ {
      "code" : "...",
      "value" : "..."
    }, {
      "code" : "...",
      "value" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "proxyFor" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting work entry details"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_WorkEntriesResponseNode"
            },
            "examples" : {
              "application/json" : {
  "workEntries" : [ {
    "activityId" : "...",
    "activityName" : "...",
    "Addressee" : {
      "DN" : "...",
      "value" : "..."
    },
    "assignmentType" : 12345,
    "availableActions" : [ {
      "code" : "...",
      "value" : "..."
    }, {
      "code" : "...",
      "value" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "proxyFor" : "..."
  }, {
    "activityId" : "...",
    "activityName" : "...",
    "Addressee" : {
      "DN" : "...",
      "value" : "..."
    },
    "assignmentType" : 12345,
    "availableActions" : [ {
      "code" : "...",
      "value" : "..."
    }, {
      "code" : "...",
      "value" : "..."
    } ],
    "creationTime" : 12345,
    "expirationTime" : 12345,
    "id" : "...",
    "owner" : "...",
    "priority" : 12345,
    "processId" : "...",
    "requestId" : "...",
    "status" : 12345,
    "legalDisclaimer" : "...",
    "digitalSignatureType" : "...",
    "processVersion" : "...",
    "completionTime" : 12345,
    "Recipient" : {
      "DN" : "...",
      "value" : "..."
    },
    "Initiator" : {
      "DN" : "...",
      "value" : "..."
    },
    "proxyFor" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/teams/managelist" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get all teams managed by the logged in user as a Team Manager.",
        "description" : "Get all teams managed by the logged in user as a Team Manager. Result set\ncan be filtered with a search text matching name or description of the\nteam. It supports pagination.",
        "operationId" : "resource_Access_getManagedTeams_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index for pagination"
          },
          {
            "name" : "pType",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "proxyUser",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Name of Description as search text"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "-1",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "type",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting managed teams",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "teams" : [ {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  }, {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  } ],
  "arraySize" : 12345,
  "totalCount" : 12345,
  "nextIndex" : 12345
}
            },
            "description" : "Internal exception while getting managed teams"
          },
          "200" : {
            "schema" : {
"description" : "Team list",
"$ref" : "#/definitions/json_TargetSetListNode"
            },
            "examples" : {
              "application/json" : {
  "teams" : [ {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  }, {
    "name" : "...",
    "dn" : "...",
    "description" : "...",
    "recipients" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "requestors" : [ {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    }, {
      "name" : "...",
      "dn" : "...",
      "type" : "...",
      "isGroupAssignment" : true,
      "targetSetList" : [ { }, { } ]
    } ],
    "permissionList" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeRoles" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeResources" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "excludeProvisioningRequests" : [ {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    }, {
      "id" : "...",
      "dn" : "...",
      "name" : "...",
      "desc" : "...",
      "entityType" : "...",
      "bulkRequestable" : true,
      "categories" : [ "...", "..." ],
      "link" : "...",
      "multiAssignable" : true,
      "excluded" : true,
      "permParams" : [ { }, { } ],
      "requestForm" : "...",
      "dataItems" : [ { }, { } ],
      "edition" : "...",
      "objClass" : "...",
      "permission" : "...",
      "teams" : [ "...", "..." ],
      "requestFormId" : "...",
      "isNewForm" : true,
      "isExpirationRequired" : true,
      "expiresAfter" : "...",
      "proxyUser" : "..."
    } ],
    "allUsers" : true,
    "includeManager" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "value" : "..."
    }, {
      "locale" : "...",
      "value" : "..."
    } ],
    "readOnly" : true,
    "domainTypes" : [ "...", "..." ],
    "proxyUser" : "..."
  } ],
  "arraySize" : 12345,
  "totalCount" : 12345,
  "nextIndex" : 12345
}
            },
            "description" : "Team list"
          }
        }
      }
    }
    ,
    "\/teams/members" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get users matching search criteria.",
        "description" : "Get users matching search criteria. Identifies logged in user is a PRD,\nSecurity, Role or Resource admin. Based on client settings of client id,\nusers will be searched from the configured user container, otherwise\nsearch root will be user base container. If logged in user is a Team\nmanager, then all team members will be added into the response",
        "operationId" : "resource_Access_getTeamMembers_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "memberDn",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "-1",
            "type" : "integer",
            "description" : "No of records to show in a page"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting member list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting member list"
          },
          "200" : {
            "schema" : {
"description" : "User list",
"$ref" : "#/definitions/json_RecipientListNode"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "User list"
          }
        }
      }
    }
    ,
    "\/teams/permissions" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Delete permissions assigned to Team.",
        "description" : "Delete permissions assigned to Team. One or more permissions can be\nremoved together from the team. Response contains details about\nsuccessfully removed permissions and those permissions failed to get\nremoved.",
        "operationId" : "resource_Access_deletePermissions_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of permissions to remove",
"$ref" : "#/definitions/json_PermissionListNode_nodes"
            },
            "description" : "List of permissions to remove"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting permissions",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting permissions"
          },
          "204" : {
            "schema" : {
"description" : "Delete permission status",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Delete permission status"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get all permissions associated with given set of teams or otherwise all\nthe teams.",
        "description" : "Get all permissions associated with given set of teams or otherwise all\nthe teams. It includes all permission types like Role, Resource and PRD.\nResult set will get filtered based on search text matched with permission\nname. If logged in user is security admin, then system roles will also\nget added into permission list. It supports pagination.",
        "operationId" : "resource_Access_getAllPermissions_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Next index for pagination"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Search text to filter results"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of teams to fetch permissions",
"$ref" : "#/definitions/json_TargetSetPermissionReqNode"
            },
            "description" : "List of teams to fetch permissions"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while searching all permissions",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while searching all permissions"
          },
          "201" : {
            "schema" : {
"description" : "Team permissions",
"$ref" : "#/definitions/json_PermissionsSearchResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Team permissions"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Add permissions to a team.",
        "description" : "Add permissions to a team. Multiple permissions can be assigned to a\nteam. Response contains details about successfully added permissions and\nthose permissions failed to get added.",
        "operationId" : "resource_Access_addPermissions_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of permissions to add",
"$ref" : "#/definitions/json_PermissionListNode_nodes"
            },
            "description" : "List of permissions to add"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while adding permissions",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while adding permissions"
          },
          "204" : {
            "schema" : {
"description" : "Add permissions status",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Add permissions status"
          }
        }
      }
    }
    ,
    "\/teams/prds" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get PRDs from permission index.",
        "description" : "Get PRDs from permission index. Name attribute of PRD will be fetched.\nFiltered result set will be sent if search text is passed. It supports\npagination.",
        "operationId" : "resource_Access_getPRDs_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Next index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "PRD name as search text"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting PRDs",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting PRDs"
          },
          "200" : {
            "schema" : {
"description" : "PRD list",
"$ref" : "#/definitions/json_PermissionsSearchResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "PRD list"
          }
        }
      }
    }
    ,
    "\/teams/resources" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get resources from permission index.",
        "description" : "Get resources from permission index. All or selective attributes of\nresources can be fetched. Filtered result set will be sent if search text\nis passed. It supports pagination.",
        "operationId" : "resource_Access_getResources_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "filterBy",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "Attribute to fetch about resources"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Next index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Resource name as search text"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting resources from permission index",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting resources from permission index"
          },
          "200" : {
            "schema" : {
"description" : "Resource list",
"$ref" : "#/definitions/json_PermissionsSearchResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Resource list"
          }
        }
      }
    }
    ,
    "\/teams/roles" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get roles from permission index.",
        "description" : "Get roles from permission index. All or selective attributes of roles can\nbe fetched. Filtered result set will be sent if search text is passed. It\nsupports pagination.",
        "operationId" : "resource_Access_getRoles_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "filterBy",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "Attributes to fetch about roles"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Next index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Role name as search text"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting roles from permission index",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting roles from permission index"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionsSearchResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/teams/team" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get team details like name, users, groups, container, relationships,\nsupported domain types and other details.",
        "description" : "Get team details like name, users, groups, container, relationships,\nsupported domain types and other details. Team details will not be marked\nread only if user is a domain administrator of Security domain type and\nas well as all the domain types supported by Team.",
        "operationId" : "resource_Access_getTeamDetails_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Request node. Team dn is mandatory.",
"$ref" : "#/definitions/json_TargetSetNode"
            },
            "description" : "Request node. Team dn is mandatory."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting team details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
}
            },
            "description" : "Internal exception while getting team details"
          },
          "201" : {
            "schema" : {
"description" : "Team details",
"$ref" : "#/definitions/json_TargetSetNode"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "dn" : "...",
  "description" : "...",
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "requestors" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "permissionList" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeRoles" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeResources" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "excludeProvisioningRequests" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ],
  "allUsers" : true,
  "includeManager" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "value" : "..."
  }, {
    "locale" : "...",
    "value" : "..."
  } ],
  "readOnly" : true,
  "domainTypes" : [ "...", "..." ],
  "proxyUser" : "..."
}
            },
            "description" : "Team details"
          }
        }
      }
    }
    ,
    "\/ulp/categories" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Delete's list of landing item categories.",
        "description" : "Delete's list of landing item categories.Response contains details about\nsuccessfully deleted categories and those categories failed to get\ndeleted.<br>\nNote: <br>\n1) Category is the group of landing items. <br>\n2) \"itemCategoryId\" is mandatory parameter.",
        "operationId" : "resource_Access_deleteCategories_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of landing item categories node that needs to be deleted.",
"$ref" : "#/definitions/json_ItemCategoryNodeList"
            },
            "description" : "- List of landing item categories node that needs to be deleted."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting landing item categories.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while deleting landing item categories."
          },
          "204" : {
            "schema" : {
"description" : "\"itemCategoryId\" of deleted landing item categories.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "\"itemCategoryId\" of deleted landing item categories."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Create's list of landing item categories.",
        "description" : "Create's list of landing item categories. Response contains details about\nsuccessfully added categories and those categories failed to get added.<br>\nNote: <br>\n1) Category is the group of landing items. <br>\n2) \"categoryName\" is the mandatory parameter.",
        "operationId" : "resource_Access_addCategories_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of landing item categories node that needs to be added.",
"$ref" : "#/definitions/json_ItemCategoryNodeList"
            },
            "description" : "- List of landing item categories node that needs to be added."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating landing item categories.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while creating landing item categories."
          },
          "201" : {
            "schema" : {
"description" : "list of added landing item categories.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "list of added landing item categories."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Update's list of landing item categories.",
        "description" : "Update's list of landing item categories.Response contains details about\nsuccessfully updated categories and those categories failed to get\nupdated.<br>\nNote:<br>\n1) Category is the group of landing items. <br>\n2) \"itemCategoryId\" is mandatory parameter.",
        "operationId" : "resource_Access_updateCategories_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of landing item categories node that needs to be updated.",
"$ref" : "#/definitions/json_ItemCategoryNodeList"
            },
            "description" : "- List of landing item categories node that needs to be updated."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating landing item categories.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while updating landing item categories."
          },
          "204" : {
            "schema" : {
"description" : "\"itemCategoryId\" of updated landing item categories.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "\"itemCategoryId\" of updated landing item categories."
          }
        }
      }
    }
    ,
    "\/ulp/featuredItems" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Creates list of landing items (Permission's).",
        "description" : "Creates list of landing items (Permission's).Response contains details\nabout successfully added items and those items failed to get added.<br>\nNote: <br>\n1) Landing items can be either a applications or a permissions. This API\nis used to create permissions not applications. <br>\n2) \"name\" is mandatory parameter.",
        "operationId" : "resource_Access_addfeaturedItems_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of landing item (Permission's) node that needs to be added.",
"$ref" : "#/definitions/json_UiItemListNode"
            },
            "description" : "- List of landing item (Permission's) node that needs to be added."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating landing items.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while creating landing items."
          },
          "201" : {
            "schema" : {
"description" : "list of added landing items (Permission's).",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "list of added landing items (Permission's)."
          }
        }
      }
    }
    ,
    "\/ulp/items" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Delete's list of landing items.",
        "description" : "Delete's list of landing items.Response contains details about\nsuccessfully deleted items and those items failed to get deleted.<br>\nNote: <br>\n1) Landing items can be either a applications or a permissions. This API\nis used to delete items of type both applications and permissions. <br>\n2) \"itemId\" is mandatory parameter.",
        "operationId" : "resource_Access_deleteItems_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of landing items node that needs to be deleted.",
"$ref" : "#/definitions/json_UiItemListNode"
            },
            "description" : "- List of landing items node that needs to be deleted."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting landing items.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while deleting landing items."
          },
          "204" : {
            "schema" : {
"description" : "\"itemId\" of deleted landing items.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "\"itemId\" of deleted landing items."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Create's list of landing items (Applications).",
        "description" : "Create's list of landing items (Applications). Response contains details\nabout successfully added applications and those applications failed to\nget added.<br>\nNote: <br>\n1) Landing items can be either a applications or a permissions. This API\nis used to create applications not permissions. <br>\n2) \"name\" is mandatory parameter.",
        "operationId" : "resource_Access_addItems_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of landing items node that needs to be added.",
"$ref" : "#/definitions/json_UiItemListNode"
            },
            "description" : "- List of landing items node that needs to be added."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating landing items.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while creating landing items."
          },
          "201" : {
            "schema" : {
"description" : "list of added landing items (Applications).",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "list of added landing items (Applications)."
          }
        }
      }
    }
    ,
    "\/ulp/l10n" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : ".",
        "description" : "<p>\nTo get the list of locale`s that are supported by User Application\nserver.\n<\/p>",
        "operationId" : "resource_Access_getSupportedLocales_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting supported locale`s",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "locales" : [ {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }, {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  } ],
  "localeSet" : {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }
}
            },
            "description" : "Internal exception while getting supported locale`s"
          },
          "200" : {
            "schema" : {
"description" : "list of locale`s supported by server",
"$ref" : "#/definitions/json_LocaleListNode"
            },
            "examples" : {
              "application/json" : {
  "locales" : [ {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }, {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  } ],
  "localeSet" : {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }
}
            },
            "description" : "list of locale`s supported by server"
          }
        }
      }
    }
    ,
    "\/user/admin" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Checks the user is a domain or delegated admin for the specified domain type.",
        "description" : "Checks the user is a domain or delegated admin for the specified domain type",
        "operationId" : "resource_Access_isUserDomainAdmin_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "level",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "1 for Domain Admin, 2 for Delegated Admin"
          },
          {
            "name" : "type",
            "in" : "query",
            "type" : "string",
            "description" : "ROLES, PRD, SECURITY, COMPLIANCE, RBPM-APP"
          },
          {
            "name" : "userDn",
            "in" : "query",
            "type" : "string",
            "description" : "User dn to check for domain admin or delegated admin"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while finding the user is a domain or delegated admin",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while finding the user is a domain or delegated admin"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/user/dn" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "rename user dn from old d n to new dn wherever it will be applicable like\ntask table.",
        "description" : "rename user dn from old d n to new dn wherever it will be applicable like\ntask table",
        "operationId" : "resource_Access_renameUserDn_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "contains old user and changed new used dn",
"$ref" : "#/definitions/json_UserRenameNode"
            },
            "description" : "contains old user and changed new used dn"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while renaming user dn in db",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while renaming user dn in db"
          },
          "201" : {
            "schema" : {
"description" : "Response node <UserRenameNode>",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "Response node <UserRenameNode>"
          }
        }
      }
    }
    ,
    "\/users/clearEntitlementResult" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Clean up DirXML-EntitlementResult attribute on user when the value in the attribute has grown large and not viable to handle\nreplication at eDirectory.",
        "description" : "Clean up DirXML-EntitlementResult attribute on user when the value in the attribute has grown large and not viable to handle\nreplication at eDirectory",
        "operationId" : "resource_Access_cleanUpEntitlementResultAttrForUser_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "userDn",
            "in" : "query",
            "type" : "string",
            "description" : "User entity DN for which DirXML-ENtitlementResult attribute should be cleaned up"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception occured while updating the DirXMLEntitlementResult attribute",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "isSuccess" : true,
  "errorCode" : 12345,
  "message" : "..."
}
            },
            "description" : "Internal exception occured while updating the DirXMLEntitlementResult attribute"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UpdateDirXMLEntitlementResultResponse"
            },
            "examples" : {
              "application/json" : {
  "isSuccess" : true,
  "errorCode" : 12345,
  "message" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/details" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Retrieves the user details for the input DN.",
        "description" : "Retrieves the user details for the input DN",
        "operationId" : "resource_Access_getUserDetails_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "ClientID of the logged in user,<br> based on which we fetch user\nspecific client configuration, [metadata of user access,conatiner\nconfiguration attribute access] <br>second level obstraction over DAL\nNote : Image- image will be listed in two direct fields of the\nnode ,<br> image ->gives use the image in byte array,<br> imageAttr->\ngives image attribute property like readabality, editabality etc<br>\nboth the image attributes listed based on image show or hide\nproperty from client settings."
          },
          {
            "name" : "isProfile",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "userDn",
            "in" : "query",
            "type" : "string",
            "description" : "User entity DN for which you want to get the detais"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "fullName" : "...",
  "image" : "...",
  "canHide" : true,
  "imageAttr" : {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  },
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "secondaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "groupMemberof" : [ "...", "..." ],
  "disabledLogin" : true,
  "disabledLoginSupported" : true,
  "helpdeskDetails" : {
    "helpdeskName" : "...",
    "emailAddress" : "...",
    "contactNumber" : "..."
  },
  "isHelpdeskUser" : true,
  "teamManger" : true,
  "hideProfilePhoto" : true
}
            },
            "description" : "Internal exception while getting user details"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PersonNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "fullName" : "...",
  "image" : "...",
  "canHide" : true,
  "imageAttr" : {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  },
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "secondaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "groupMemberof" : [ "...", "..." ],
  "disabledLogin" : true,
  "disabledLoginSupported" : true,
  "helpdeskDetails" : {
    "helpdeskName" : "...",
    "emailAddress" : "...",
    "contactNumber" : "..."
  },
  "isHelpdeskUser" : true,
  "teamManger" : true,
  "hideProfilePhoto" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/list" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Lists Users from EDirectory(which usees Vlv for pagination).",
        "description" : "Lists Users from EDirectory(which usees Vlv for pagination)<br>\nNumber of users will be listed against searchString, specifed page size,<br>\nindex,sorted against sort column and order by the OrderBy sequence\nspecified.<br>\ncolumnCustomization ->flag to differntiate users listing(simple listing,\nmanaged listing) <br>\nif true : Simple listing the attributes listed for users will be the\nattributes inputed with filter param and sorted by the sortColumn[used\nwhen you want multi attribute sort enablement in UI].<br>\nfalse : Managed listing the attributes listed for the users will formed\nagainsed defined client settings[Client settings devides attributes as\nprimary, seconday and other by default it listes only primary seconday\nand other]. <br\\>\nSearching : two types of searching allowed quick (or),advance(and) search<br>\nQuick search :search will be against attributes mentioned under\nsearchAttr and type down string from searchString <br>\nAdvance search: its definative search, searching will be done with\nagainst specific attribute<br>\nadvance search takes priority over quick<br>\nBaseDN search: in addition to quick and advance list API supports base DN\nsearch<br>\neither searchAttr or advSearchAttr should hold Key DN to enable baseDn\nsearch<br>\nIt takes precedence over quick and advance search.<br>\nNote: Container - list APi lists user under configured container from\nclient settings<br>\nImage : image will be listed in two direct fields of the node i.e<br>\nimage ->gives use the image in byte array<br>\nImageAttr-> gives image attribute property like readabality, editabality\netc both the image attributes listed based on image show or hide property\nfrom client settings.",
        "operationId" : "resource_Access_searchUsersWithDefaults_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "advSearch",
            "in" : "query",
            "type" : "string",
            "description" : "Comma separated list of advance search attribute filter\neg:advSearch\n=FirstName:Aaliyah,LastName:Hall,Email:*,TelephoneNumber:*"
          },
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "ClientID of the logged in user, based on which we fetch user\nspecific client configuration, [metadata of user access,conatiner\nconfiguration attribute access] second level obstraction over DAL"
          },
          {
            "name" : "columnCustomization",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : "Flag to controle types of listing"
          },
          {
            "name" : "filter",
            "in" : "query",
            "type" : "string",
            "description" : "Comma separated list of attribute key's(defines the attributes to\nbe returned as part of user response when columnCustomization is\nset to true) eg: filter=FirstName,LastName,Email,TelephoneNumber"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index of the page to be listed"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Type down searchString input from User"
          },
          {
            "name" : "searchAttr",
            "in" : "query",
            "type" : "string",
            "description" : "Comma separated list quick searchable attribute key's eg:\nsearchAttr=FirstName,LastName,Email,TelephoneNumber"
          },
          {
            "name" : "searchCount",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "20",
            "type" : "integer",
            "description" : "Number of entries to be returned from Edirectory"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "type" : "string",
            "description" : "Attribute key against which sorting should be performed"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "OrderBy sequence for sorting. ASC or DESC"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching users with defaults",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "usersList" : [ {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  }, {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  } ],
  "nextIndex" : 12345,
  "hasMore" : true,
  "totalCount" : 12345,
  "totalSize" : 12345
}
            },
            "description" : "Internal exception while searching users with defaults"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PersonListNode"
            },
            "examples" : {
              "application/json" : {
  "usersList" : [ {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  }, {
    "dn" : "...",
    "fullName" : "...",
    "image" : "...",
    "canHide" : true,
    "imageAttr" : {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    },
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "groupMemberof" : [ "...", "..." ],
    "disabledLogin" : true,
    "disabledLoginSupported" : true,
    "helpdeskDetails" : {
      "helpdeskName" : "...",
      "emailAddress" : "...",
      "contactNumber" : "..."
    },
    "isHelpdeskUser" : true,
    "teamManger" : true,
    "hideProfilePhoto" : true
  } ],
  "nextIndex" : 12345,
  "hasMore" : true,
  "totalCount" : 12345,
  "totalSize" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/userDefaults" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Retrieves Logged in user details.",
        "description" : "Retrieves Logged in user details",
        "operationId" : "resource_Access_fetchLoggedInUserBasicDetails_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "ClientID of the logged in user, based on which we fetch user\nspecific client configuration"
          },
          {
            "name" : "isProfile",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching users with defaults",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "fullName" : "...",
  "image" : "...",
  "canHide" : true,
  "imageAttr" : {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  },
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "secondaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "groupMemberof" : [ "...", "..." ],
  "disabledLogin" : true,
  "disabledLoginSupported" : true,
  "helpdeskDetails" : {
    "helpdeskName" : "...",
    "emailAddress" : "...",
    "contactNumber" : "..."
  },
  "isHelpdeskUser" : true,
  "teamManger" : true,
  "hideProfilePhoto" : true
}
            },
            "description" : "Internal exception while searching users with defaults"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PersonNode"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "fullName" : "...",
  "image" : "...",
  "canHide" : true,
  "imageAttr" : {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  },
  "primaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "secondaryAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "groupMemberof" : [ "...", "..." ],
  "disabledLogin" : true,
  "disabledLoginSupported" : true,
  "helpdeskDetails" : {
    "helpdeskName" : "...",
    "emailAddress" : "...",
    "contactNumber" : "..."
  },
  "isHelpdeskUser" : true,
  "teamManger" : true,
  "hideProfilePhoto" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/usersForHistory" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "search user with pagination using Vlv control for a helpdesk user.",
        "description" : "search user with pagination using Vlv control for a helpdesk user",
        "operationId" : "resource_Access_searchUsersForHelpdesk_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "advSearch",
            "in" : "query",
            "type" : "string",
            "description" : "avnce search attributes"
          },
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "clientId"
          },
          {
            "name" : "columnCustomization",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : "customization for mange users"
          },
          {
            "name" : "filter",
            "in" : "query",
            "type" : "string",
            "description" : "filter to be return for manageuser"
          },
          {
            "name" : "isHistory",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "indrex"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "searchString"
          },
          {
            "name" : "searchAttr",
            "in" : "query",
            "type" : "string",
            "description" : "searchAttributes"
          },
          {
            "name" : "searchCount",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "20",
            "type" : "integer",
            "description" : "pagesize to be return"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "type" : "string",
            "description" : "sortColumn"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "orderby"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/workflow/prd" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Creates the PRD object in the IDV.",
        "description" : "Creates the PRD object in the IDV",
        "operationId" : "resource_Access_createPRD_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ProvisioningRequestNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assignments/list/v2" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to provide the list of the roles assigned to a user.",
        "description" : "The objective of this API is to provide the list of the roles assigned to a user.\nThis API takes the user details as input parameter. Later extract the user-dn.\nBased on this user-dn API finds the assigned roles.\nThis API supports Searching, Sorting, Pagination on the fetched data.",
        "operationId" : "resource_Access_getAllUserPermissionAssignments_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "containerAssigned",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "description",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "effectiveDate",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "expDate",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "forceRefresh",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "force a refresh of the permission assignment from the IDV, do not\nuse what may have already been cached"
          },
          {
            "name" : "groupAssigned",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "name",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "index to start from"
          },
          {
            "name" : "noCache",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Do not cache permission assignments in server side cache"
          },
          {
            "name" : "parameter",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "requestDate",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "resourceCategories",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "resourceInitialRequestDescription",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "roleCategories",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "roleInitialRequestDescription",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "roleRelationship",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "searchScope",
            "in" : "query",
            "default" : "ALL",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "number of assignments to return in one batch"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "sort on name or description column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "asc=Ascending, desc=Descending"
          },
          {
            "name" : "token",
            "in" : "query",
            "type" : "string",
            "description" : "token used for caching result set, client should use this in\nsubsequent calls to take advantage of caching"
          },
          {
            "name" : "userAssigned",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "DN, whose permissions needs to get",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : "DN, whose permissions needs to get"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "permission assignments",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "permission assignments"
          }
        }
      }
    }
    ,
    "\/assignments/resource/list" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to provide the list of the resources assigned to a user.",
        "description" : "The objective of this API is to provide the list of the resources assigned to a user.\nThis API takes the user details as input parameter. Later extract the user-dn.\nBased on this user-dn API finds the assigned resources.\nThis API supports Searching, Sorting, Pagination on the fetched data.",
        "operationId" : "resource_Access_getUserResourcePermissionAssignments_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "index to start from"
          },
          {
            "name" : "q",
            "in" : "query",
            "type" : "string",
            "description" : "search permission name or description containing this text"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "number of assignments to return in one batch"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "sort on name or description column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "asc=Ascending, desc=Descending"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting resource assignments to user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "Internal exception while getting resource assignments to user"
          },
          "201" : {
            "schema" : {
"description" : "permission assignments",
"$ref" : "#/definitions/json_PermissionAssignmentListNode"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "permission assignments"
          }
        }
      }
    }
    ,
    "\/assignments/role/list" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get role permission assignments for given user, group or container.",
        "description" : "Get role permission assignments for given user, group or container.",
        "operationId" : "resource_Access_getRolePermissionAssignments_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "index to start from"
          },
          {
            "name" : "onlyDirectAssignments",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "filter used to fetch only direct assignments."
          },
          {
            "name" : "q",
            "in" : "query",
            "type" : "string",
            "description" : "search permission name or description containing this text"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "number of assignments to return in one batch"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "sort on name or description column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "asc=Ascending, desc=Descending"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting role assignments to user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "Internal exception while getting role assignments to user"
          },
          "201" : {
            "schema" : {
"description" : "permission assignments",
"$ref" : "#/definitions/json_PermissionAssignmentListNode"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "nextIndex" : 12345,
  "token" : "...",
  "assignments" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "entityType" : "...",
    "link" : "...",
    "bulkRemovable" : true,
    "categories" : [ {
      "categoryId" : "...",
      "categoryName" : "..."
    }, {
      "categoryId" : "...",
      "categoryName" : "..."
    } ],
    "instanceId" : "...",
    "causes" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "reqDate" : 12345,
    "initialRequestDescription" : "...",
    "status" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    } ],
    "assignmentType" : "...",
    "assignmentTo" : "...",
    "assignmentToList" : [ {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    }, {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "assignedToDn" : "...",
      "assigneeFullName" : "...",
      "comment" : "...",
      "sodJustification" : "...",
      "entRef" : { },
      "reqForm" : { }
    } ],
    "requestedBy" : "...",
    "effectiveDate" : 12345,
    "expiryDate" : 12345,
    "nextIndex" : 12345,
    "totalCount" : 12345,
    "cause" : {
      "instanceId" : "...",
      "type" : "...",
      "subtype" : "...",
      "removable" : true,
      "sources" : [ "...", "..." ],
      "sourcesDetails" : { },
      "requester" : "...",
      "requesterName" : "...",
      "reqDesc" : "...",
      "status" : "...",
      "requestDate" : 12345,
      "effectiveDate" : 12345,
      "expirationDate" : 12345,
      "assignedTo" : "...",
      "confirmNo" : "...",
      "sodJustification" : "...",
      "approval" : { },
      "entRef" : { },
      "reqForm" : { },
      "groupContainerInfo" : [ { }, { } ]
    },
    "isDirectAssignment" : true
  } ],
  "reason" : "...",
  "correlationId" : "...",
  "totalPermissionCount" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "isRemoveFromCart" : true
}
            },
            "description" : "permission assignments"
          }
        }
      }
    }
    ,
    "\/codeMap/{id}/values" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Return code map values.",
        "description" : "Return code map values",
        "operationId" : "resource_Access_searchPermissionIndex_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "- base 64 encoded code map id"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "- next index to start return result from"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "default",
            "type" : "string",
            "description" : "- search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "- page size"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Invalid Permission index",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "hasMore" : true,
  "codeMapValues" : [ {
    "id" : "...",
    "value" : "...",
    "type" : "...",
    "displayLabel" : "...",
    "description" : "...",
    "nativeValue" : "..."
  }, {
    "id" : "...",
    "value" : "...",
    "type" : "...",
    "displayLabel" : "...",
    "description" : "...",
    "nativeValue" : "..."
  } ]
}
            },
            "description" : "Invalid Permission index"
          },
          "500" : {
            "schema" : {
"description" : "Internal error while searching for permission index",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "hasMore" : true,
  "codeMapValues" : [ {
    "id" : "...",
    "value" : "...",
    "type" : "...",
    "displayLabel" : "...",
    "description" : "...",
    "nativeValue" : "..."
  }, {
    "id" : "...",
    "value" : "...",
    "type" : "...",
    "displayLabel" : "...",
    "description" : "...",
    "nativeValue" : "..."
  } ]
}
            },
            "description" : "Internal error while searching for permission index"
          },
          "200" : {
            "schema" : {
"description" : "response to the query",
"$ref" : "#/definitions/json_CodeMapValueSearchResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "hasMore" : true,
  "codeMapValues" : [ {
    "id" : "...",
    "value" : "...",
    "type" : "...",
    "displayLabel" : "...",
    "description" : "...",
    "nativeValue" : "..."
  }, {
    "id" : "...",
    "value" : "...",
    "type" : "...",
    "displayLabel" : "...",
    "description" : "...",
    "nativeValue" : "..."
  } ]
}
            },
            "description" : "response to the query"
          }
        }
      }
    }
    ,
    "\/config/clients/{id}" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Loads all client settings configured in the system and returns only the\nclient setting matching the given client id.",
        "description" : "Loads all client settings configured in the system and returns only the\nclient setting matching the given client id",
        "operationId" : "resource_Access_getClient_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "Client id to fetch corresponding client settings (Required)"
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "Client not found",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Client not found"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while reading client settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while reading client settings"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Edit client details like name and matching condition.",
        "description" : "Edit client details like name and matching condition. It ensures client\nname and match condition are not used by other client settings. Only\nprivileged users can update client details. Client id cannot be changed\nas it is system generated.",
        "operationId" : "resource_Access_updateClient_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "Client id to update settings (Required)"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "General information of client",
"$ref" : "#/definitions/json_ClientNode"
            },
            "description" : "General information of client"
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Access not allowed",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Access not allowed"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating client information",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while updating client information"
          },
          "201" : {
            "schema" : {
"description" : "Update status",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Update status"
          }
        }
      }
    }
    ,
    "\/config/restoreSettings/{key}" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Restores client settings with settings from default client setting.",
        "description" : "Restores client settings with settings from default client setting.\nReturns restored client settings for rendering at client side. Expected\nkeys are \"access\", \"customization\" and \"branding\" which are the primary\nkeys of client settings. Only privileged user can restore settings.",
        "operationId" : "resource_Access_restoreSettings_POST",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "Keys are \"access\", \"customization\" and \"branding\" (Required)"
          },
          {
            "name" : "client",
            "in" : "query",
            "type" : "string",
            "description" : "Client id to restore settings (Required)"
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Access not allowed",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Access not allowed"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while restoring client settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while restoring client settings"
          },
          "201" : {
            "schema" : {
"description" : "Restored default settings",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Restored default settings"
          }
        }
      }
    }
    ,
    "\/config/style/{fileName}" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Download client specific or a custom style file in CSS format.",
        "description" : "Download client specific or a custom style file in CSS format. It receives the file name of CSS\nstyles uploaded into the application. CSS file will be\nlocated under configured user home directory with the file name including\nclient id.",
        "operationId" : "resource_Access_getCustomStyle_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "fileName",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while downloading custom style",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while downloading custom style"
          },
          "200" : {
            "schema" : {
"description" : "uploaded CSS Style in a text format",
"type" : "string"
            },
            "examples" : {
            },
            "description" : "uploaded CSS Style in a text format"
          }
        }
      }
    }
    ,
    "\/cprs/assignments/delta" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective: Return the delta assignments based on given driver dn,\nentitlement and logical system Id.",
        "description" : "API Objective: Return the delta assignments based on given driver dn,\nentitlement and logical system Id",
        "operationId" : "resource_Access_getPermissionDiff_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "0",
            "type" : "integer",
            "description" : "- next index to start return result from"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "- search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "- page size"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "firstName",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "-Order in which the entries needs to be sorted either\nascending or descending."
          },
          {
            "name" : "source",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- informations like driver dn, entitlement dn, logical system",
"$ref" : "#/definitions/json_CprsRequestNode"
            },
            "description" : "- informations like driver dn, entitlement dn, logical system"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while fetching delta permission assignments",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "isMigrate" : true,
  "entitlementDn" : "...",
  "deltaAssignmentsList" : [ {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  }, {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  } ],
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "id" : "..."
}
            },
            "description" : "Internal exception while fetching delta permission assignments"
          },
          "201" : {
            "schema" : {
"description" : "response to the query",
"$ref" : "#/definitions/json_CprsRequestNode"
            },
            "examples" : {
              "application/json" : {
  "isMigrate" : true,
  "entitlementDn" : "...",
  "deltaAssignmentsList" : [ {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  }, {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  } ],
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "id" : "..."
}
            },
            "description" : "response to the query"
          }
        }
      }
    }
    ,
    "\/cprs/assignments/publish" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to grant or revoke the permission in the IDM\ncatalog based on the permission in the Application.",
        "description" : "The objective of this API is to grant or revoke the permission in the IDM\ncatalog based on the permission in the Application.",
        "operationId" : "resource_Access_publishPermissionAssignment_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- cprs request info along with the delta assignment entries",
"$ref" : "#/definitions/json_CprsRequestNode"
            },
            "description" : "- cprs request info along with the delta assignment entries"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while publishing permission assignment",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "isMigrate" : true,
  "entitlementDn" : "...",
  "deltaAssignmentsList" : [ {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  }, {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  } ],
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "id" : "..."
}
            },
            "description" : "Internal exception while publishing permission assignment"
          },
          "201" : {
            "schema" : {
"description" : "response",
"$ref" : "#/definitions/json_CprsRequestNode"
            },
            "examples" : {
              "application/json" : {
  "isMigrate" : true,
  "entitlementDn" : "...",
  "deltaAssignmentsList" : [ {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  }, {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  } ],
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "id" : "..."
}
            },
            "description" : "response"
          }
        }
      }
    }
    ,
    "\/cprs/assignments/reconcile" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective: To initiate the migration/delta computation of permission\nassignments.",
        "description" : "API Objective: To initiate the migration/delta computation of permission\nassignments.",
        "operationId" : "resource_Access_doPermissionMigration_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- informations like driver dn, entitlement dn, logical system\nfor which migration/delta computation needs to be performed",
"$ref" : "#/definitions/json_CprsRequestNode"
            },
            "description" : "- informations like driver dn, entitlement dn, logical system\nfor which migration/delta computation needs to be performed"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while processing permission reconcilation...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "isMigrate" : true,
  "entitlementDn" : "...",
  "deltaAssignmentsList" : [ {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  }, {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  } ],
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "id" : "..."
}
            },
            "description" : "Internal exception while processing permission reconcilation..."
          },
          "201" : {
            "schema" : {
"description" : "returns the List of cprs requests",
"$ref" : "#/definitions/json_CprsRequestNode"
            },
            "examples" : {
              "application/json" : {
  "isMigrate" : true,
  "entitlementDn" : "...",
  "deltaAssignmentsList" : [ {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  }, {
    "instanceGuId" : "...",
    "entitlementValue" : "...",
    "lastName" : "...",
    "firstName" : "...",
    "source" : "...",
    "userDN" : "...",
    "id" : "...",
    "entitlementDn" : "...",
    "logicalSystemId" : "..."
  } ],
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "id" : "..."
}
            },
            "description" : "returns the List of cprs requests"
          }
        }
      }
    }
    ,
    "\/cprs/cprsrequest/status" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective: Return the status of the cprs request.",
        "description" : "API Objective: Return the status of the cprs request.",
        "operationId" : "resource_Access_getCprsRequestStatus_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Request id of the cprs request",
"$ref" : "#/definitions/json_CprsRequestNode"
            },
            "description" : "- Request id of the cprs request"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while fetching permission reconiliation request status...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "entitlementDn" : "...",
  "opStatus" : 12345,
  "id" : "...",
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "failedAssignments" : 12345,
  "requestStartTime" : "...",
  "requestCompletionTime" : "...",
  "statusMessage" : "...",
  "totalAssignments" : 12345
}
            },
            "description" : "Internal exception while fetching permission reconiliation request status..."
          },
          "201" : {
            "schema" : {
"description" : "the status of the given request.",
"$ref" : "#/definitions/json_CprsRequestStatusNode"
            },
            "examples" : {
              "application/json" : {
  "entitlementDn" : "...",
  "opStatus" : 12345,
  "id" : "...",
  "driverDn" : "...",
  "logicalSystem" : "...",
  "opType" : "...",
  "failedAssignments" : 12345,
  "requestStartTime" : "...",
  "requestCompletionTime" : "...",
  "statusMessage" : "...",
  "totalAssignments" : 12345
}
            },
            "description" : "the status of the given request."
          }
        }
      }
    }
    ,
    "\/data/migration/workflow" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Rest end point to export the workflow engine table contents to json files.",
        "description" : "Rest end point to export the workflow engine table contents to json files",
        "operationId" : "resource_Access_export_GET",
        "produces" : [ "application/zip" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "examples" : {
            },
            "description" : "Internal exception while exporting workflow data"
          },
          "200" : {
            "examples" : {
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "To import workflow data into data store.",
        "description" : "To import workflow data into data store. Its a multipart request expecting the file input in Zip format containing table contents\nin JSON files.",
        "operationId" : "resource_Access_importData_POST",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "importDataStream",
            "in" : "formData",
            "type" : "file",
            "description" : "Zip file for import"
          },
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting helpdesk users...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : "Internal exception while getting helpdesk users..."
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_JSONObject"
            },
            "examples" : {
              "application/json" : {
  "escapeForwardSlashAlways" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/entities/schema/rra" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "fetch schema attributes for the schema type param passed to the service.",
        "description" : "fetch schema attributes for the schema type param passed to the service",
        "operationId" : "resource_Access_retrieveSchemaAttributesForRRA_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "editable",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "editable attributes filter"
          },
          {
            "name" : "entityName",
            "in" : "query",
            "type" : "string",
            "description" : "entityDefinationType"
          },
          {
            "name" : "minimalData",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "only attributes with key/label"
          },
          {
            "name" : "searchable",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "searchable attributes filter"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "RestResponse",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "RestResponse"
          }
        }
      }
    }
    ,
    "\/info/email/templates" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Gets the email template nodes info.",
        "description" : "Gets the email template nodes info",
        "operationId" : "resource_Access_getEmailTemplates_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "starting index for pagination support"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "user entered text to filter the results"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "-1",
            "type" : "integer",
            "description" : "page size to return number of results"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting email templates",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "emailTemplates" : [ {
    "dn" : "...",
    "fullName" : "..."
  }, {
    "dn" : "...",
    "fullName" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345
}
            },
            "description" : "Internal exception while getting email templates"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EmailTemplateNodeList"
            },
            "examples" : {
              "application/json" : {
  "emailTemplates" : [ {
    "dn" : "...",
    "fullName" : "..."
  }, {
    "dn" : "...",
    "fullName" : "..."
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/info/user/dashboard" : {
      "get" : {
        "tags" : [ "Access" ],
        "description" : "",
        "operationId" : "resource_Access_getUserDashboardWidgetsAccess_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting navigation rights of logged in user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while getting navigation rights of logged in user"
          },
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/info/user/equivalent" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "checks if the logged in user is equivalent to any of the principals.",
        "description" : "checks if the logged in user is equivalent to any of the principals",
        "operationId" : "resource_Access_checkIfEquivalentToPrincipals_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of principal to check equivalence",
"$ref" : "#/definitions/json_PrincipalListNode"
            },
            "description" : "List of principal to check equivalence"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "navPageRights" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "areaDefault" : "...",
  "areaDefaultDisplayName" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while checking for equivalent to principals",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "navPageRights" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "areaDefault" : "...",
  "areaDefaultDisplayName" : "..."
}
            },
            "description" : "Internal exception while checking for equivalent to principals"
          },
          "201" : {
            "schema" : {
"description" : "response containing true or false based on whether user rights\nare equivalent to any<\/br>\nof supplied principals.",
"$ref" : "#/definitions/json_NavPagesRightsListNode"
            },
            "examples" : {
              "application/json" : {
  "navPageRights" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "areaDefault" : "...",
  "areaDefaultDisplayName" : "..."
}
            },
            "description" : "response containing true or false based on whether user rights\nare equivalent to any<\/br>\nof supplied principals."
          }
        }
      }
    }
    ,
    "\/info/user/navigationmenu" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "This API going to provide the menu structure for Admin App along with the\nurl context.",
        "description" : "This API going to provide the menu structure for Admin App along with the\nurl context. This API identify the pages logged in user have access, then\nbased on those pages creates the menu list and send back as a result.\nChecks if the logged in user is equivalent to any of the principals.\nProvide the principles in menu list form. If client send empty page list\nas payload then these rest api consider the only default page list as\ninput.",
        "operationId" : "resource_Access_getPageNavigationRights_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "contains the list of the page-id as a payload.",
"$ref" : "#/definitions/json_NavPagesRightsListNode"
            },
            "description" : "contains the list of the page-id as a payload."
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "response",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "response"
          }
        }
      }
    }
    ,
    "\/info/user/navigationrights" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "It allows logged in user to check navigation rights for different pages.",
        "description" : "It allows logged in user to check navigation rights for different pages. When parent page access rights is checked, API also checks for its corresponding\ngranular rights on the parent page and return all in the response.",
        "operationId" : "resource_Access_getNavigationRights_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "supply page id of the pages whose navigation rights and its granular access rights need to\nbe<\/br>\nchecked against logged in user.<\/br>\n<b>Ignore value and areaDefault attribute<\/b>.",
"$ref" : "#/definitions/json_NavPagesRightsListNode"
            },
            "description" : "supply page id of the pages whose navigation rights and its granular access rights need to\nbe<\/br>\nchecked against logged in user.<\/br>\n<b>Ignore value and areaDefault attribute<\/b>."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "navPageRights" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "areaDefault" : "...",
  "areaDefaultDisplayName" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting navigation rights of logged in user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "navPageRights" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "areaDefault" : "...",
  "areaDefaultDisplayName" : "..."
}
            },
            "description" : "Internal exception while getting navigation rights of logged in user"
          },
          "201" : {
            "schema" : {
"description" : "It returns navigation rights as key and value pairs, key would be\nname of the right(page id)<\/br>\nand value contains either true or false based on whether user has\nnavigation<\/br>\nright to given page.<\/br>\nareaDefault contains the default landing page id for the logged\nin user.",
"$ref" : "#/definitions/json_NavPagesRightsListNode"
            },
            "examples" : {
              "application/json" : {
  "navPageRights" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "areaDefault" : "...",
  "areaDefaultDisplayName" : "..."
}
            },
            "description" : "It returns navigation rights as key and value pairs, key would be\nname of the right(page id)<\/br>\nand value contains either true or false based on whether user has\nnavigation<\/br>\nright to given page.<\/br>\nareaDefault contains the default landing page id for the logged\nin user."
          }
        }
      }
    }
    ,
    "\/info/user/passwordsyncstatus" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get password sync status report for the logged in user.",
        "description" : "Get password sync status report for the logged in user",
        "operationId" : "resource_Access_getSelfPasswordSyncStatus_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting self password sync status",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "messages" : [ {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  }, {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting self password sync status"
          },
          "200" : {
            "schema" : {
"description" : "password sync status",
"$ref" : "#/definitions/json_MessageListNode"
            },
            "examples" : {
              "application/json" : {
  "messages" : [ {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  }, {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  } ]
}
            },
            "description" : "password sync status"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get password sync status for a given user.",
        "description" : "Get password sync status for a given user",
        "operationId" : "resource_Access_getPasswordSyncStatus_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "user whose password sync status needs to be check",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : "user whose password sync status needs to be check"
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "No details found",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "messages" : [ {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  }, {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  } ]
}
            },
            "description" : "No details found"
          },
          "201" : {
            "schema" : {
"description" : "On success returns the password sync status",
"$ref" : "#/definitions/json_Response"
            },
            "examples" : {
              "application/json" : {
  "messages" : [ {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  }, {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  } ]
}
            },
            "description" : "On success returns the password sync status"
          },
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "messages" : [ {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  }, {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting password sync status",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "messages" : [ {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  }, {
    "message" : "...",
    "status" : "...",
    "driverName" : "...",
    "driverImage" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting password sync status"
          }
        }
      }
    }
    ,
    "\/info/user/rights" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get the logged in user authorization and the client information.",
        "description" : "Get the logged in user authorization and the client information.\nAuthorization:<\/br>\n- Administrator <\/br>\n- Proxy User <\/br>\n- Domain Administrator <\/br>\n- Team Manager Client <\/br>\nInformation: <\/br>\n- Client Name<\/br>\n- Client ID",
        "operationId" : "resource_Access_getAccess_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting access details of logged in user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "authorized" : true,
  "readOnly" : true,
  "teamReadOnly" : true,
  "proxyFor" : true,
  "clientId" : "...",
  "clientName" : "...",
  "isAdmin" : true,
  "isRoleAdmin" : true,
  "domains" : [ "...", "..." ],
  "isDelegationTeamMgr" : true,
  "isAvailabilityTeamMgr" : true
}
            },
            "description" : "Internal exception while getting access details of logged in user"
          },
          "200" : {
            "schema" : {
"description" : "true / false.",
"$ref" : "#/definitions/json_LoggedInUser"
            },
            "examples" : {
              "application/json" : {
  "authorized" : true,
  "readOnly" : true,
  "teamReadOnly" : true,
  "proxyFor" : true,
  "clientId" : "...",
  "clientName" : "...",
  "isAdmin" : true,
  "isRoleAdmin" : true,
  "domains" : [ "...", "..." ],
  "isDelegationTeamMgr" : true,
  "isAvailabilityTeamMgr" : true
}
            },
            "description" : "true / false."
          }
        }
      }
    }
    ,
    "\/monitoring/process/list" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get list of processes.",
        "description" : "Get list of processes",
        "operationId" : "resource_Access_getProcessList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "approvalStatus",
            "in" : "query",
            "type" : "string",
            "description" : "approval status filter"
          },
          {
            "name" : "creationTime",
            "in" : "query",
            "type" : "number",
            "description" : "process creation time"
          },
          {
            "name" : "initiator",
            "in" : "query",
            "type" : "string",
            "description" : "initiator"
          },
          {
            "name" : "operator",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "processStatus",
            "in" : "query",
            "type" : "string",
            "description" : "process status filter"
          },
          {
            "name" : "q",
            "in" : "query",
            "type" : "string",
            "description" : "search String"
          },
          {
            "name" : "recipient",
            "in" : "query",
            "type" : "string",
            "description" : "Recipient"
          },
          {
            "name" : "size",
            "in" : "query",
            "type" : "integer",
            "description" : "records size"
          },
          {
            "name" : "sortField",
            "in" : "query",
            "type" : "string",
            "description" : "Sorting Field"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "type" : "string",
            "description" : "Sorting order"
          },
          {
            "name" : "startIndex",
            "in" : "query",
            "type" : "integer",
            "description" : "records starting index"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting process list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "processInfoNodeList" : [ {
    "requestId" : "...",
    "processId" : "...",
    "version" : "...",
    "creationTime" : 12345,
    "creationStartTime" : 12345,
    "creationStartTimeOperator" : "...",
    "creationEndTime" : 12345,
    "creationEndTimeOperator" : "...",
    "recipient" : "...",
    "initiator" : "...",
    "recipientName" : "...",
    "initiatorName" : "...",
    "proxy" : "...",
    "restrictView" : 12345,
    "processStatus" : 12345,
    "approvalStatus" : 12345,
    "completionTime" : 12345,
    "resourceType" : "...",
    "correlationId" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "name" : "...",
    "engineId" : "...",
    "creationTimeOperator" : "...",
    "completionTimeOperator" : "...",
    "choices" : [ 12345, 12345 ],
    "processXml" : "...",
    "workCompletionTime" : 12345,
    "workTaskId" : "...",
    "addressee" : [ "...", "..." ],
    "activityId" : "...",
    "status" : 12345,
    "owner" : "...",
    "priority" : 12345,
    "expTime" : 12345,
    "expTimeOperator" : 12345,
    "order" : [ "...", "..." ],
    "workCompletionTimeOperator" : 12345,
    "workCreationTimeOperator" : 12345,
    "maxRecords" : 12345,
    "logicOperator" : "...",
    "approvalStatusDisplayName" : "...",
    "processStatusDisplayName" : "..."
  }, {
    "requestId" : "...",
    "processId" : "...",
    "version" : "...",
    "creationTime" : 12345,
    "creationStartTime" : 12345,
    "creationStartTimeOperator" : "...",
    "creationEndTime" : 12345,
    "creationEndTimeOperator" : "...",
    "recipient" : "...",
    "initiator" : "...",
    "recipientName" : "...",
    "initiatorName" : "...",
    "proxy" : "...",
    "restrictView" : 12345,
    "processStatus" : 12345,
    "approvalStatus" : 12345,
    "completionTime" : 12345,
    "resourceType" : "...",
    "correlationId" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "name" : "...",
    "engineId" : "...",
    "creationTimeOperator" : "...",
    "completionTimeOperator" : "...",
    "choices" : [ 12345, 12345 ],
    "processXml" : "...",
    "workCompletionTime" : 12345,
    "workTaskId" : "...",
    "addressee" : [ "...", "..." ],
    "activityId" : "...",
    "status" : 12345,
    "owner" : "...",
    "priority" : 12345,
    "expTime" : 12345,
    "expTimeOperator" : 12345,
    "order" : [ "...", "..." ],
    "workCompletionTimeOperator" : 12345,
    "workCreationTimeOperator" : 12345,
    "maxRecords" : 12345,
    "logicOperator" : "...",
    "approvalStatusDisplayName" : "...",
    "processStatusDisplayName" : "..."
  } ],
  "totalSize" : 12345
}
            },
            "description" : "Internal exception while getting process list"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ProcessRespNode"
            },
            "examples" : {
              "application/json" : {
  "processInfoNodeList" : [ {
    "requestId" : "...",
    "processId" : "...",
    "version" : "...",
    "creationTime" : 12345,
    "creationStartTime" : 12345,
    "creationStartTimeOperator" : "...",
    "creationEndTime" : 12345,
    "creationEndTimeOperator" : "...",
    "recipient" : "...",
    "initiator" : "...",
    "recipientName" : "...",
    "initiatorName" : "...",
    "proxy" : "...",
    "restrictView" : 12345,
    "processStatus" : 12345,
    "approvalStatus" : 12345,
    "completionTime" : 12345,
    "resourceType" : "...",
    "correlationId" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "name" : "...",
    "engineId" : "...",
    "creationTimeOperator" : "...",
    "completionTimeOperator" : "...",
    "choices" : [ 12345, 12345 ],
    "processXml" : "...",
    "workCompletionTime" : 12345,
    "workTaskId" : "...",
    "addressee" : [ "...", "..." ],
    "activityId" : "...",
    "status" : 12345,
    "owner" : "...",
    "priority" : 12345,
    "expTime" : 12345,
    "expTimeOperator" : 12345,
    "order" : [ "...", "..." ],
    "workCompletionTimeOperator" : 12345,
    "workCreationTimeOperator" : 12345,
    "maxRecords" : 12345,
    "logicOperator" : "...",
    "approvalStatusDisplayName" : "...",
    "processStatusDisplayName" : "..."
  }, {
    "requestId" : "...",
    "processId" : "...",
    "version" : "...",
    "creationTime" : 12345,
    "creationStartTime" : 12345,
    "creationStartTimeOperator" : "...",
    "creationEndTime" : 12345,
    "creationEndTimeOperator" : "...",
    "recipient" : "...",
    "initiator" : "...",
    "recipientName" : "...",
    "initiatorName" : "...",
    "proxy" : "...",
    "restrictView" : 12345,
    "processStatus" : 12345,
    "approvalStatus" : 12345,
    "completionTime" : 12345,
    "resourceType" : "...",
    "correlationId" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "name" : "...",
    "engineId" : "...",
    "creationTimeOperator" : "...",
    "completionTimeOperator" : "...",
    "choices" : [ 12345, 12345 ],
    "processXml" : "...",
    "workCompletionTime" : 12345,
    "workTaskId" : "...",
    "addressee" : [ "...", "..." ],
    "activityId" : "...",
    "status" : 12345,
    "owner" : "...",
    "priority" : 12345,
    "expTime" : 12345,
    "expTimeOperator" : 12345,
    "order" : [ "...", "..." ],
    "workCompletionTimeOperator" : 12345,
    "workCreationTimeOperator" : 12345,
    "maxRecords" : 12345,
    "logicOperator" : "...",
    "approvalStatusDisplayName" : "...",
    "processStatusDisplayName" : "..."
  } ],
  "totalSize" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/monitoring/process/terminate" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Terminate the process.",
        "description" : "Terminate the process",
        "operationId" : "resource_Access_processTerminate_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TerminateInfoNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting process list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "failedProcesses" : [ "...", "..." ],
  "success" : true,
  "message" : "..."
}
            },
            "description" : "Internal exception while getting process list"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TerminateResponseNode"
            },
            "examples" : {
              "application/json" : {
  "failedProcesses" : [ "...", "..." ],
  "success" : true,
  "message" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/orgChart/target/list" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "This API is to get the multivalued DN list in a relationship where the target attribute is of type DN.",
        "description" : "This API is to get the multivalued DN list in a relationship where the target attribute is of type DN",
        "operationId" : "resource_Access_getOrgChartTargetDNList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "Client Id to get attribute configuration like primary, secondary"
          },
          {
            "name" : "dn",
            "in" : "query",
            "type" : "string",
            "description" : "source DN"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "relationshipkey",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "type" : "integer",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting target attribute list of the source entity.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "userQuickInfo" : {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  },
  "reportees" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ],
  "totalNumberOfReportees" : 12345,
  "managers" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ]
}
            },
            "description" : "Internal exception while getting target attribute list of the source entity."
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_OrganizationalChartListNode"
            },
            "examples" : {
              "application/json" : {
  "userQuickInfo" : {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  },
  "reportees" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ],
  "totalNumberOfReportees" : 12345,
  "managers" : [ {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  }, {
    "dn" : "...",
    "image" : "...",
    "attributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "directReportee" : "...",
    "fullName" : "...",
    "primaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "secondaryAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "value" : "...",
      "dataType" : "..."
    } ],
    "totalNumberOfReportees" : 12345
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/queue/entry/items" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "Rest end point to delete items from cart.",
        "description" : "Rest end point to delete items from cart",
        "operationId" : "resource_Access_removeItems_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "request payLoad which will have cart entry detail as well items to\nbe deleted from cart",
"$ref" : "#/definitions/json_CartNode"
            },
            "description" : "request payLoad which will have cart entry detail as well items to\nbe deleted from cart"
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "deleted items",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "deleted items"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Rest end points allow user to add items into cart along with their\ndetails(assignees).",
        "description" : "Rest end points allow user to add items into cart along with their\ndetails(assignees)",
        "operationId" : "resource_Access_addItemToCart_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "cart entry payload with items and their details payLoad",
"$ref" : "#/definitions/json_CartNode"
            },
            "description" : "cart entry payload with items and their details payLoad"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/requests/history/item" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective:\nGet a specific request history item based on id.",
        "description" : "API Objective:\nGet a specific request history item based on id.\nThis API takes History Id as an input,\nthen fetch the history details of that Id.\nall the details send back as response.",
        "operationId" : "resource_Access_getLoggedInUserPermissionRequestHistoryById_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "commentLimit",
            "in" : "query",
            "default" : "200",
            "type" : "integer",
            "description" : "limit the number of comments returned"
          },
          {
            "name" : "includeSystemComments",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "include system comments in response"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "request node with id and entityType populated",
"$ref" : "#/definitions/json_PermissionRequestHistoryNode"
            },
            "description" : "request node with id and entityType populated"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "entityType" : "...",
  "requestState" : 12345,
  "requestStatus" : "...",
  "processState" : 12345,
  "requestOper" : 12345,
  "requester" : "...",
  "recipient" : "...",
  "recipientName" : "...",
  "recipientType" : "...",
  "requestDate" : 12345,
  "effectiveDate" : 12345,
  "expirationDate" : 12345,
  "confirmationNumber" : "...",
  "retractable" : true,
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "link" : "...",
  "status" : "...",
  "reason" : "...",
  "requesterName" : "...",
  "requesterType" : "...",
  "action" : "...",
  "proxyUserFullName" : "...",
  "proxyUser" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting logged in user permission request history",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "entityType" : "...",
  "requestState" : 12345,
  "requestStatus" : "...",
  "processState" : 12345,
  "requestOper" : 12345,
  "requester" : "...",
  "recipient" : "...",
  "recipientName" : "...",
  "recipientType" : "...",
  "requestDate" : 12345,
  "effectiveDate" : 12345,
  "expirationDate" : 12345,
  "confirmationNumber" : "...",
  "retractable" : true,
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "link" : "...",
  "status" : "...",
  "reason" : "...",
  "requesterName" : "...",
  "requesterType" : "...",
  "action" : "...",
  "proxyUserFullName" : "...",
  "proxyUser" : "..."
}
            },
            "description" : "Internal exception while getting logged in user permission request history"
          },
          "500" : {
            "schema" : {
"description" : "Internal server error",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "entityType" : "...",
  "requestState" : 12345,
  "requestStatus" : "...",
  "processState" : 12345,
  "requestOper" : 12345,
  "requester" : "...",
  "recipient" : "...",
  "recipientName" : "...",
  "recipientType" : "...",
  "requestDate" : 12345,
  "effectiveDate" : 12345,
  "expirationDate" : 12345,
  "confirmationNumber" : "...",
  "retractable" : true,
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "link" : "...",
  "status" : "...",
  "reason" : "...",
  "requesterName" : "...",
  "requesterType" : "...",
  "action" : "...",
  "proxyUserFullName" : "...",
  "proxyUser" : "..."
}
            },
            "description" : "Internal server error"
          },
          "201" : {
            "schema" : {
"description" : "request history item",
"$ref" : "#/definitions/json_PermissionRequestHistoryNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "entityType" : "...",
  "requestState" : 12345,
  "requestStatus" : "...",
  "processState" : 12345,
  "requestOper" : 12345,
  "requester" : "...",
  "recipient" : "...",
  "recipientName" : "...",
  "recipientType" : "...",
  "requestDate" : 12345,
  "effectiveDate" : 12345,
  "expirationDate" : 12345,
  "confirmationNumber" : "...",
  "retractable" : true,
  "comments" : [ {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  }, {
    "user" : "...",
    "comment" : "...",
    "msgId" : "...",
    "date" : 12345,
    "activity" : "...",
    "system" : true,
    "commentDn" : "...",
    "commentFullName" : "..."
  } ],
  "link" : "...",
  "status" : "...",
  "reason" : "...",
  "requesterName" : "...",
  "requesterType" : "...",
  "action" : "...",
  "proxyUserFullName" : "...",
  "proxyUser" : "..."
}
            },
            "description" : "request history item"
          }
        }
      }
    }
    ,
    "\/requests/historylist/permission" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Request history of a role or resource irrespective of the user who\nrequested for the permission.",
        "description" : "Request history of a role or resource irrespective of the user who\nrequested for the permission. Logged in user must be a administrator or\nmanager of the respective domain.",
        "operationId" : "resource_Access_getPermissionRequestHistory_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "cn",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Confirmation number"
          },
          {
            "name" : "endDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : ""
          },
          {
            "name" : "item",
            "in" : "query",
            "type" : "string",
            "description" : "Permission Dn"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "requestDate",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "startDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : ""
          },
          {
            "name" : "status",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Status to filter the results"
          },
          {
            "name" : "type",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Type of permission"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionRequestHistoryFilterNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting permission request history",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting permission request history"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionRequestHistoryListNode"
            },
            "examples" : {
              "application/json" : {
  "totalSize" : 12345,
  "total" : 12345,
  "nextIndex" : 12345,
  "requests" : [ {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entityType" : "...",
    "requestState" : 12345,
    "requestStatus" : "...",
    "processState" : 12345,
    "requestOper" : 12345,
    "requester" : "...",
    "recipient" : "...",
    "recipientName" : "...",
    "recipientType" : "...",
    "requestDate" : 12345,
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "confirmationNumber" : "...",
    "retractable" : true,
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "link" : "...",
    "status" : "...",
    "reason" : "...",
    "requesterName" : "...",
    "requesterType" : "...",
    "action" : "...",
    "proxyUserFullName" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/requests/permissions/item" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "The objective of this API is to make requests for any one Role or Resource or PRD.",
        "description" : "The objective of this API is to make requests for any one Role or Resource or PRD.\nThis API receives one type of permission along with the list of recipient.\nThe request could be both type self and ROBO.\nIf it is self then it uses the logged-in user-dn as recipient.\nElse it uses the recipient list and find the dn of each recipient.\nThis API can accept with filled form data items to make requests for complex PRD.",
        "operationId" : "resource_Access_processPermissionRequest_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Single permission request node",
"$ref" : "#/definitions/json_SinglePermReqNode"
            },
            "description" : "- Single permission request node"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while processing permission request",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
}
            },
            "description" : "Internal exception while processing permission request"
          },
          "201" : {
            "schema" : {
"description" : "Status of the request",
"$ref" : "#/definitions/json_RequestOperationResponseListNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
}
            },
            "description" : "Status of the request"
          }
        }
      }
    }
    ,
    "\/requests/permissions/v2" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "This REST API used to submit new permission request using the new request form.",
        "description" : "This REST API used to submit new permission request using the new request form.",
        "operationId" : "resource_Access_PermissionRequest_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_JSONObject"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while processing permission request",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
}
            },
            "description" : "Internal exception while processing permission request"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RequestOperationResponseListNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "OperationNodes" : [ {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  }, {
    "success" : true,
    "succeeded" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "failed" : [ {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    }, {
      "id" : "...",
      "entityType" : "...",
      "reason" : "...",
      "instanceId" : "...",
      "requestId" : "...",
      "errCode" : "...",
      "name" : "...",
      "dn" : "...",
      "retry" : true,
      "revokeFrom" : "...",
      "assignFromUsers" : [ { }, { } ],
      "assignToUsers" : [ { }, { } ]
    } ],
    "sods" : [ {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    }, {
      "sodId" : "...",
      "sodName" : "...",
      "sodDescription" : "...",
      "perm1Name" : "...",
      "perm2Name" : "...",
      "userList" : [ { }, { } ],
      "groupList" : [ { }, { } ],
      "recipientdn" : "...",
      "recipientname" : "...",
      "inheritedRole" : "..."
    } ],
    "userDn" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/rob/ismproperties/oauth" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Read OAuth details from ISM configuration properties.",
        "description" : "Read OAuth details from ISM configuration properties.",
        "operationId" : "resource_Access_getOauthIsmProperties_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting OAuth ISM properties",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "properties" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "arraySize" : 12345
}
            },
            "description" : "Internal exception while getting OAuth ISM properties"
          },
          "200" : {
            "schema" : {
"description" : "OAuth properties",
"$ref" : "#/definitions/json_ParameterListNode"
            },
            "examples" : {
              "application/json" : {
  "properties" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "arraySize" : 12345
}
            },
            "description" : "OAuth properties"
          }
        }
      }
    }
    ,
    "\/sods/violations/user" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get all the SOD roles assigned to a user.",
        "description" : "Get all the SOD roles assigned to a user",
        "operationId" : "resource_Access_getUserSODViolations_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "userDn",
            "in" : "query",
            "type" : "string",
            "description" : "User for whom SOD roles have been assigned"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user sod violation...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting user sod violation..."
          },
          "200" : {
            "schema" : {
"description" : "SOD violations of the user",
"$ref" : "#/definitions/json_SodListNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "SOD violations of the user"
          }
        }
      }
    }
    ,
    "\/tasks/list/others" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Fetches task list for the logged in helpdesk user or administrator.",
        "description" : "Fetches task list for the logged in helpdesk user or administrator. It\nsupports sorting, searching, filtering and pagination",
        "operationId" : "resource_Access_getHelpDeskTasksList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "assignStatus",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "assignedTo",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "fromIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "recipient",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "createTime",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "status",
            "in" : "query",
            "type" : "string",
            "description" : "task status to filter upon"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting task list for Helpdesk/Admin",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "hasMore" : true,
  "tasks" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "totalSize" : 12345,
  "nextIndex" : 12345,
  "userTypeInTask" : true
}
            },
            "description" : "Internal exception while getting task list for Helpdesk/Admin"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AfTaskListNode"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "hasMore" : true,
  "tasks" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "totalSize" : 12345,
  "nextIndex" : 12345,
  "userTypeInTask" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/teams/container/resources" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Search resources from a given container or sub container.",
        "description" : "Search resources from a given container or sub container",
        "operationId" : "resource_Access_getResourcesFromContainer_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Search text to filter results"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Pagination size"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Container details",
"$ref" : "#/definitions/json_ContainerNode"
            },
            "description" : "Container details"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting roles from permission index",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting roles from permission index"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionsSearchResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/teams/container/roles" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Search roles from a given container or sub container.",
        "description" : "Search roles from a given container or sub container",
        "operationId" : "resource_Access_getRolesFromContainer_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Search text to filter results"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Pagination size"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Container details",
"$ref" : "#/definitions/json_ContainerNode"
            },
            "description" : "Container details"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting roles from permission index",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting roles from permission index"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionsSearchResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/teams/recipients/groups" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get groups matching search criteria.",
        "description" : "Get groups matching search criteria. Identifies logged in user is a PRD,\nSecurity, Role or Resource admin and then fetch groups from eDirectory.\nIn case, if the logged in user is a team manager, then all team member\ngroups will be fetched. Results will get filtered with query string\nmatched with group name. It supports pagination.",
        "operationId" : "resource_Access_getGroups_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index of resultset"
          },
          {
            "name" : "proxyUser",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Group name as search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "-1",
            "type" : "integer",
            "description" : "No of records to show in a page"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while searching groups",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while searching groups"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RecipientListNode"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/teams/recipients/list" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get all the team recipients for the given team.",
        "description" : "Get all the team recipients for the given team. If the team dn is null or\nempty it will throw invalid input dn.",
        "operationId" : "resource_Access_getAllTeamMembers_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "team dn which team recipients needs to get.",
"$ref" : "#/definitions/json_TargetSetNode"
            },
            "description" : "team dn which team recipients needs to get."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting member list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting member list"
          },
          "201" : {
            "schema" : {
"description" : "list of team recipients.",
"$ref" : "#/definitions/json_RecipientListNode"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "list of team recipients."
          }
        }
      }
    }
    ,
    "\/teams/role/permissions" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Get all role permissions that are associated with all the Teams.",
        "description" : "Get all role permissions that are associated with all the Teams. Result\nset will get filtered based on search text matched with permission name.\nIt supports pagination.",
        "operationId" : "resource_Access_getRolePermissions_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Next index for pagination"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Search text to filter results"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting role permissions",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting role permissions"
          },
          "200" : {
            "schema" : {
"description" : "Role permissions",
"$ref" : "#/definitions/json_PermissionsSearchResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissions" : [ {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  }, {
    "id" : "...",
    "dn" : "...",
    "name" : "...",
    "desc" : "...",
    "entityType" : "...",
    "bulkRequestable" : true,
    "categories" : [ "...", "..." ],
    "link" : "...",
    "multiAssignable" : true,
    "excluded" : true,
    "permParams" : [ {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    }, {
      "key" : "...",
      "dataType" : "...",
      "value" : "...",
      "hidden" : true,
      "static" : true,
      "displayLabel" : "...",
      "codemapKey" : "...",
      "valueLabel" : "...",
      "entitlementDn" : "...",
      "optionQueryUrl" : "...",
      "multivalue" : true
    } ],
    "requestForm" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "edition" : "...",
    "objClass" : "...",
    "permission" : "...",
    "teams" : [ "...", "..." ],
    "requestFormId" : "...",
    "isNewForm" : true,
    "isExpirationRequired" : true,
    "expiresAfter" : "...",
    "proxyUser" : "..."
  } ]
}
            },
            "description" : "Role permissions"
          }
        }
      }
    }
    ,
    "\/teams/team/permissions" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get Team permission list.",
        "description" : "Get Team permission list. Fetches all permissions that logged in user is\nauthorized for from domains like PRD, Role and Resources. Result set will\nget filtered based on search text matched with permission name and also\nget sorted based on type of permission either in ascending or descending\norder. It supports pagination.",
        "operationId" : "resource_Access_getPermissionList_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "forceRefresh",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need force refresh of cache"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Next index for pagination"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Search text to filter results"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Sorting order asc or desc"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Team details to fetch permissions",
"$ref" : "#/definitions/json_TargetSetNode"
            },
            "description" : "Team details to fetch permissions"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissionsList" : [ {
    "objType" : "...",
    "objClass" : "...",
    "authObjDN" : "...",
    "permission" : "...",
    "permissionDisplay" : "...",
    "resolvedAuthObjDN" : "...",
    "domainType" : "...",
    "name" : "...",
    "excluded" : true
  }, {
    "objType" : "...",
    "objClass" : "...",
    "authObjDN" : "...",
    "permission" : "...",
    "permissionDisplay" : "...",
    "resolvedAuthObjDN" : "...",
    "domainType" : "...",
    "name" : "...",
    "excluded" : true
  } ],
  "totalSize" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting permission list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissionsList" : [ {
    "objType" : "...",
    "objClass" : "...",
    "authObjDN" : "...",
    "permission" : "...",
    "permissionDisplay" : "...",
    "resolvedAuthObjDN" : "...",
    "domainType" : "...",
    "name" : "...",
    "excluded" : true
  }, {
    "objType" : "...",
    "objClass" : "...",
    "authObjDN" : "...",
    "permission" : "...",
    "permissionDisplay" : "...",
    "resolvedAuthObjDN" : "...",
    "domainType" : "...",
    "name" : "...",
    "excluded" : true
  } ],
  "totalSize" : 12345
}
            },
            "description" : "Internal exception while getting permission list"
          },
          "201" : {
            "schema" : {
"description" : "Permission list",
"$ref" : "#/definitions/json_PermissionsListNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "permissionsList" : [ {
    "objType" : "...",
    "objClass" : "...",
    "authObjDN" : "...",
    "permission" : "...",
    "permissionDisplay" : "...",
    "resolvedAuthObjDN" : "...",
    "domainType" : "...",
    "name" : "...",
    "excluded" : true
  }, {
    "objType" : "...",
    "objClass" : "...",
    "authObjDN" : "...",
    "permission" : "...",
    "permissionDisplay" : "...",
    "resolvedAuthObjDN" : "...",
    "domainType" : "...",
    "name" : "...",
    "excluded" : true
  } ],
  "totalSize" : 12345
}
            },
            "description" : "Permission list"
          }
        }
      }
    }
    ,
    "\/teams/team/userlist" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Given a teamDn, it returns all the users who are a part of that team.",
        "description" : "Given a teamDn, it returns all the users who are a part of that team.\nWhen the logged in user is a Team manager, then for all the recipients in the team,\nthe targetSetList will contain all the teams that the user is a part of, under the\nTeam manager.",
        "operationId" : "resource_Access_getUsersInTeam_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "Client id of logged in user"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index for pagination support"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "User entered text to filter the results"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Page size to return number of results"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "teamDn",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting user list"
          },
          "200" : {
            "schema" : {
"description" : "User list",
"$ref" : "#/definitions/json_RecipientListNode"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "User list"
          }
        }
      }
    }
    ,
    "\/ulp/l10n/list" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : ".",
        "description" : "<p>\nTo get the list of locales with name and key that are supported by User\nApplication server.\n<\/p>",
        "operationId" : "resource_Access_getAllSupportedLocales_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting supported locale`s",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "locales" : [ {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }, {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  } ],
  "localeSet" : {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }
}
            },
            "description" : "Internal exception while getting supported locale`s"
          },
          "200" : {
            "schema" : {
"description" : "list of locales supported by server",
"$ref" : "#/definitions/json_LocaleListNode"
            },
            "examples" : {
              "application/json" : {
  "locales" : [ {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }, {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  } ],
  "localeSet" : {
    "name" : "...",
    "link" : "...",
    "localeKey" : "...",
    "modifiedLocale" : "...",
    "userDN" : "...",
    "userPreferredLocales" : [ "...", "..." ]
  }
}
            },
            "description" : "list of locales supported by server"
          }
        }
      }
    }
    ,
    "\/ulp/l10n/listLocales" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : ".",
        "description" : "<p>Updates the user preferred locale in the server<\/p>",
        "operationId" : "resource_Access_updateUserPreferredLocale_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LocaleNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/ulp/l10n/{locale}.properties" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To get localized Strings from a specific locale properties file.",
        "description" : "To get localized Strings from a specific locale properties file.",
        "operationId" : "resource_Access_getdLocale_GET",
        "produces" : [ "application/json", "text/plain" ],
        "parameters" : [
          {
            "name" : "locale",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "the locale of the properties file"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting supported locale`s",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while getting supported locale`s"
          },
          "200" : {
            "schema" : {
"description" : "localized Strings from the locale properties file",
"type" : "string"
            },
            "examples" : {
            },
            "description" : "localized Strings from the locale properties file"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Upload localized strings for a specific locale from a properties file and\nsave the localized strings to the server.",
        "description" : "Upload localized strings for a specific locale from a properties file and\nsave the localized strings to the server",
        "operationId" : "resource_Access_uploadLocaleProps_PUT",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "locale",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The locale of the properties file"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "The content of the locale properties file",
"type" : "string"
            },
            "description" : "The content of the locale properties file"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while uploading locale properties",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while uploading locale properties"
          },
          "204" : {
            "schema" : {
"description" : "list of uploaded success or failure properties.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "list of uploaded success or failure properties."
          }
        }
      }
    }
    ,
    "\/ulp/landingItems/v2" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Return's list of landing items allowed for user, sorted by categories.",
        "description" : "Return's list of landing items allowed for user, sorted by categories.\n<br>\nNote: <br>\n1) Landing items can be either a applications or a permissions. This API\nis used to fetch landing items of type both permissions and applications.",
        "operationId" : "resource_Access_getNewLandingPageItems_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "- Client id of the logged-in user to check access for different\nlanding items."
          },
          {
            "name" : "images",
            "in" : "query",
            "default" : "true",
            "type" : "boolean",
            "description" : "- Flag to indicate whether to fetch images or not."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting landing items.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "itemCategories" : [ {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  }, {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  } ],
  "uncategorizedItems" : [ {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  }, {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  } ],
  "editable" : true
}
            },
            "description" : "Internal exception while getting landing items."
          },
          "200" : {
            "schema" : {
"description" : "Landing items allowed for user.",
"$ref" : "#/definitions/json_ItemsByCategoryNode"
            },
            "examples" : {
              "application/json" : {
  "itemCategories" : [ {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  }, {
    "image" : "...",
    "itemCategoryId" : 12345,
    "categoryName" : "...",
    "itemCategoryOrder" : 12345,
    "desc" : "...",
    "subType" : "...",
    "items" : [ {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    }, {
      "image" : "...",
      "idmdashImage" : "...",
      "itemId" : 12345,
      "name" : "...",
      "desc" : "...",
      "subType" : "...",
      "entityType" : "...",
      "id" : "...",
      "itemOrder" : 12345,
      "appUrl" : "...",
      "idmdashAppUrl" : "...",
      "apiUrl" : "...",
      "bulkRequestable" : true,
      "itemCategoryId" : 12345,
      "parentMenuKey" : "...",
      "menuOrder" : "...",
      "menuKey" : "..."
    } ]
  } ],
  "uncategorizedItems" : [ {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  }, {
    "image" : "...",
    "idmdashImage" : "...",
    "itemId" : 12345,
    "name" : "...",
    "desc" : "...",
    "subType" : "...",
    "entityType" : "...",
    "id" : "...",
    "itemOrder" : 12345,
    "appUrl" : "...",
    "idmdashAppUrl" : "...",
    "apiUrl" : "...",
    "bulkRequestable" : true,
    "itemCategoryId" : 12345,
    "parentMenuKey" : "...",
    "menuOrder" : "...",
    "menuKey" : "..."
  } ],
  "editable" : true
}
            },
            "description" : "Landing items allowed for user."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Access" ],
        "summary" : "Update's list of landing items.",
        "description" : "Update's list of landing items. Response contains details about\nsuccessfully updated items and those items failed to get updated.<br>\nNote: <br>\n1) Landing items can be either a applications or a permissions. This API\nis used to update items of type both applications and permissions. <br>\n2) \"itemId\",\"id\" are mandatory parameters. 3) \"id\" Refers to navigation\nid if the item is an application. If the item is an permission it refers\nto permission id.",
        "operationId" : "resource_Access_updateNewLandingPageItems_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "clientId",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "- Client id of the logged-in user to check access for different\nlanding items."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of landing item node that needs to be modified.",
"$ref" : "#/definitions/json_UiItemListNode"
            },
            "description" : "- List of landing item node that needs to be modified."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while updating landing items.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while updating landing items."
          },
          "204" : {
            "schema" : {
"description" : "\"id\" and \"itemId\" of updated landing items.",
"$ref" : "#/definitions/json_OperationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ]
}
            },
            "description" : "\"id\" and \"itemId\" of updated landing items."
          }
        }
      }
    }
    ,
    "\/cprs/cprsrequest/status/list" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective: Return the status of the cprs requests.",
        "description" : "API Objective: Return the status of the cprs requests.",
        "operationId" : "resource_Access_getCprsRequestStatusList_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "requestCompletionTime",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "desc",
            "type" : "string",
            "description" : "Order of sorting"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- driver/entitlement of cprs request",
"$ref" : "#/definitions/json_CprsRequestNode"
            },
            "description" : "- driver/entitlement of cprs request"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while fetching permission reconiliation requests status...",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "arraySize" : 12345,
  "cprsRequestStatus" : [ {
    "entitlementDn" : "...",
    "opStatus" : 12345,
    "id" : "...",
    "driverDn" : "...",
    "logicalSystem" : "...",
    "opType" : "...",
    "failedAssignments" : 12345,
    "requestStartTime" : "...",
    "requestCompletionTime" : "...",
    "statusMessage" : "...",
    "totalAssignments" : 12345
  }, {
    "entitlementDn" : "...",
    "opStatus" : 12345,
    "id" : "...",
    "driverDn" : "...",
    "logicalSystem" : "...",
    "opType" : "...",
    "failedAssignments" : 12345,
    "requestStartTime" : "...",
    "requestCompletionTime" : "...",
    "statusMessage" : "...",
    "totalAssignments" : 12345
  } ],
  "nextIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while fetching permission reconiliation requests status..."
          },
          "201" : {
            "schema" : {
"description" : "cprs status list",
"$ref" : "#/definitions/json_CprsRequestStatusNodeList"
            },
            "examples" : {
              "application/json" : {
  "arraySize" : 12345,
  "cprsRequestStatus" : [ {
    "entitlementDn" : "...",
    "opStatus" : 12345,
    "id" : "...",
    "driverDn" : "...",
    "logicalSystem" : "...",
    "opType" : "...",
    "failedAssignments" : 12345,
    "requestStartTime" : "...",
    "requestCompletionTime" : "...",
    "statusMessage" : "...",
    "totalAssignments" : 12345
  }, {
    "entitlementDn" : "...",
    "opStatus" : 12345,
    "id" : "...",
    "driverDn" : "...",
    "logicalSystem" : "...",
    "opType" : "...",
    "failedAssignments" : 12345,
    "requestStartTime" : "...",
    "requestCompletionTime" : "...",
    "statusMessage" : "...",
    "totalAssignments" : 12345
  } ],
  "nextIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "cprs status list"
          }
        }
      }
    }
    ,
    "\/entities/resource/assignments/columns" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "API Objective: Get The Table Column Headers for Resource Assignment API\ntakes input as Resource DN or Empty.",
        "description" : "API Objective: Get The Table Column Headers for Resource Assignment API\ntakes input as Resource DN or Empty.",
        "operationId" : "resource_Access_getResourceAssignmentsColumns_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Requested resource",
"$ref" : "#/definitions/json_AssignmentStatusNode"
            },
            "description" : "Requested resource"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/queue/entry/item/assignees" : {
      "delete" : {
        "tags" : [ "Access" ],
        "summary" : "API to delete item details(assignees) from cart for an item.",
        "description" : "API to delete item details(assignees) from cart for an item",
        "operationId" : "resource_Access_removeItemAssignees_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "request payLoad with an item, it's detail(assignee)",
"$ref" : "#/definitions/json_CartNode"
            },
            "description" : "request payLoad with an item, it's detail(assignee)"
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "deleted item detail",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "deleted item detail"
          }
        }
      }
    }
    ,
    "\/requests/team/user/history" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "retrieve request history for given team member.",
        "description" : "retrieve request history for given team member",
        "operationId" : "resource_Access_getTeamMemberRequestHistory_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "action",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "cn",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "endDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : ""
          },
          {
            "name" : "item",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "requestDate",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "startDate",
            "in" : "query",
            "default" : "0",
            "type" : "number",
            "description" : ""
          },
          {
            "name" : "status",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "type",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tasks/list/others/team" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "Team manager is the only authorized persona to access this end point.",
        "description" : "Team manager is the only authorized persona to access this end point.\nTeam manager would select a team and a team member to view his/her tasks.\nIt is expected that team manager has manage addressee tasks rights on the\nteam. API validates Team manager, Team and Team member combination.",
        "operationId" : "resource_Access_getTeamTasks_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "assignStatus",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "fromIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "memberDn",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "recipient",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "createTime",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "status",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "teamDN",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting team member task list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "hasMore" : true,
  "tasks" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "totalSize" : 12345,
  "nextIndex" : 12345,
  "userTypeInTask" : true
}
            },
            "description" : "Internal exception while getting team member task list"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_AfTaskListNode"
            },
            "examples" : {
              "application/json" : {
  "total" : 12345,
  "hasMore" : true,
  "tasks" : [ {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  }, {
    "taskId" : "...",
    "link" : "...",
    "processName" : "...",
    "processId" : "...",
    "activityName" : "...",
    "createTime" : 12345,
    "expirationTime" : 12345,
    "recipient" : "...",
    "recipientType" : "...",
    "recipientName" : "...",
    "initiator" : "...",
    "initiatorName" : "...",
    "comments" : [ {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    }, {
      "user" : "...",
      "comment" : "...",
      "msgId" : "...",
      "date" : 12345,
      "activity" : "...",
      "system" : true,
      "commentDn" : "...",
      "commentFullName" : "..."
    } ],
    "bulkApprovable" : true,
    "approvalForm" : "...",
    "approvalFormId" : "...",
    "dataItems" : [ {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    }, {
      "name" : "...",
      "dataType" : "...",
      "valueType" : 12345,
      "readOnly" : true,
      "multiValued" : true,
      "values" : [ { }, { } ],
      "target" : "...",
      "source" : "...",
      "valueSet" : true
    } ],
    "taskClaimed" : true,
    "addresseetype" : "...",
    "claimedby" : "...",
    "addresseeEntityType" : "...",
    "addressee" : "...",
    "assignedTo" : "...",
    "priority" : "...",
    "delegatedTask" : true,
    "proxyUser" : "...",
    "assignStatus" : "...",
    "returnAddressee" : "...",
    "confirmationNumber" : "...",
    "isNewForm" : true,
    "currentAddressee" : "..."
  } ],
  "totalSize" : 12345,
  "nextIndex" : 12345,
  "userTypeInTask" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/teams/recipients/userlist/v2" : {
      "get" : {
        "tags" : [ "Access" ],
        "summary" : "To get the user list to raise a request on behalf of other users.",
        "description" : "To get the user list to raise a request on behalf of other users.\nIdentifies logged in user is a PRD, Security, Role or Resource admin and\nthen fetch users from eDirectory. Based on client settings of client id,\nusers will be searched using configured search lookup attributes. If\nlogged in user is a Team manager, then all team members will be added\ninto the response",
        "operationId" : "resource_Access_getUserList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : "Client id of logged in user"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index for pagination support"
          },
          {
            "name" : "proxyUser",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "User entered text to filter the results"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Page size to return number of results"
          },
          {
            "name" : "teamDn",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting user list",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting user list"
          },
          "200" : {
            "schema" : {
"description" : "User list",
"$ref" : "#/definitions/json_RecipientListNode"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "User list"
          }
        }
      }
    }
    ,
    "\/teams/recipients/users/v2" : {
      "post" : {
        "tags" : [ "Access" ],
        "summary" : "Get all team members of teams managed by Team manager to proxy for.",
        "description" : "Get all team members of teams managed by Team manager to proxy for. Team\nmember results can be filtered by passing search string with first or\nlast name of team member. Team members will be fetched either from given\nset of team list if provided or from the teams managed by logged in user.\nIt supports pagination.",
        "operationId" : "resource_Access_getProxyTeamUsers_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "client",
            "in" : "query",
            "default" : "1",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index of result set"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Search string to filter team members"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "-1",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input node",
"$ref" : "#/definitions/json_TargetSetListNode"
            },
            "description" : "Input node"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting proxy team users",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting proxy team users"
          },
          "201" : {
            "schema" : {
"description" : "Team member list",
"$ref" : "#/definitions/json_RecipientListNode"
            },
            "examples" : {
              "application/json" : {
  "recipients" : [ {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  }, {
    "name" : "...",
    "dn" : "...",
    "type" : "...",
    "isGroupAssignment" : true,
    "targetSetList" : [ {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    }, {
      "name" : "...",
      "dn" : "...",
      "description" : "...",
      "recipients" : [ { }, { } ],
      "requestors" : [ { }, { } ],
      "permissionList" : [ { }, { } ],
      "excludeRoles" : [ { }, { } ],
      "excludeResources" : [ { }, { } ],
      "excludeProvisioningRequests" : [ { }, { } ],
      "allUsers" : true,
      "includeManager" : true,
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "readOnly" : true,
      "domainTypes" : [ "...", "..." ],
      "proxyUser" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345,
  "currentIndex" : 12345,
  "endIndex" : 12345,
  "total" : 12345
}
            },
            "description" : "Team member list"
          }
        }
      }
    }
    ,
    "\/driver" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Fetch the list of drivers.",
        "description" : "Fetch the list of drivers. .<\/br>\nAdministrator can fetch the list of drivers. <\/br>",
        "operationId" : "resource_Admin_getDrivers_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting drivers or Unable to fetch the directory context.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "drivers" : [ {
    "dn" : "...",
    "name" : "...",
    "guid" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "guid" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting drivers or Unable to fetch the directory context."
          },
          "200" : {
            "schema" : {
"description" : "List of Drivers.",
"$ref" : "#/definitions/json_DriverListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "drivers" : [ {
    "dn" : "...",
    "name" : "...",
    "guid" : "..."
  }, {
    "dn" : "...",
    "name" : "...",
    "guid" : "..."
  } ]
}
            },
            "description" : "List of Drivers."
          }
        }
      }
    }
    ,
    "\/identityResync" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Generates resync Event for the specified Identity in the Role and\nResource Driver.",
        "description" : "Generates resync Event for the specified Identity in the Role and\nResource Driver. <br>",
        "operationId" : "resource_Admin_generateResyncIdentityEvent_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserNode_nodes"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "403" : {
            "schema" : {
"description" : "Authorization exception while trying to send sync Event to driver.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "message" : "..."
}
            },
            "description" : "Authorization exception while trying to send sync Event to driver."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while submitting event or getting Role and Resource Driver information.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "message" : "..."
}
            },
            "description" : "Internal exception while submitting event or getting Role and Resource Driver information."
          },
          "201" : {
            "schema" : {
"description" : "Status Indicating whether creation of Resync Event is Success or\nNot.",
"$ref" : "#/definitions/json_MessageNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "message" : "..."
}
            },
            "description" : "Status Indicating whether creation of Resync Event is Success or\nNot."
          }
        }
      }
    }
    ,
    "\/logging" : {
      "post" : {
        "tags" : [ "Admin" ],
        "description" : "",
        "operationId" : "resource_Admin_addLoggingConfiguration_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LogConfigurationResponseNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting log info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "Internal exception while getting log info"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LogConfigurationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Admin" ],
        "description" : "",
        "operationId" : "resource_Admin_updateLoggingConfiguration_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LogConfigurationResponseNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting log info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "Internal exception while getting log info"
          },
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LogConfigurationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/permission" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "API which lists granular permission for the given Admin Domain.",
        "description" : "API which lists granular permission for the given Admin Domain",
        "operationId" : "resource_Admin_getGranularPermission_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "domain",
            "in" : "query",
            "type" : "string",
            "description" : "Domain type, allowed domains are ROLES, RESOURCES, PRD"
          }
        ],
        "responses" : {
          "412" : {
            "schema" : {
"description" : "Precondetion to execute the rest API failed",
"$ref" : "#/definitions/json_RestValidationException"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Precondetion to execute the rest API failed"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DomainListNode"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/workflowengines" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "It allows Administrator to get the list of engine info in cluster setup,\nreturns one result in non-cluster setup.",
        "description" : "It allows Administrator to get the list of engine info in cluster setup,\nreturns one result in non-cluster setup",
        "operationId" : "resource_Admin_getEniginesStates_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting workflow engines info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "engineId" : "...",
  "minPoolSize" : 12345,
  "maxPoolSize" : 12345,
  "initialPoolSize" : 12345,
  "keepAliveTime" : 12345,
  "userActivityTimeout" : 12345,
  "completedProcessTimeout" : 12345,
  "webServiceActivityTimeout" : 12345,
  "pendingInterval" : 12345,
  "cleanupInterval" : 12345,
  "retryQueueInterval" : 12345,
  "maxShutdownTime" : 12345,
  "enableEmailNotification" : true,
  "processCacheInitialCapacity" : 12345,
  "processCacheMaxCapacity" : 12345,
  "processCacheLoadFactor" : 12345.0,
  "heartbeatInterval" : 12345,
  "heartbeatFactor" : 12345
}
            },
            "description" : "Internal exception while getting workflow engines info"
          },
          "200" : {
            "schema" : {
"description" : "List of Workflow Engine with their State",
"$ref" : "#/definitions/json_EngineConfigNode"
            },
            "examples" : {
              "application/json" : {
  "engineId" : "...",
  "minPoolSize" : 12345,
  "maxPoolSize" : 12345,
  "initialPoolSize" : 12345,
  "keepAliveTime" : 12345,
  "userActivityTimeout" : 12345,
  "completedProcessTimeout" : 12345,
  "webServiceActivityTimeout" : 12345,
  "pendingInterval" : 12345,
  "cleanupInterval" : 12345,
  "retryQueueInterval" : 12345,
  "maxShutdownTime" : 12345,
  "enableEmailNotification" : true,
  "processCacheInitialCapacity" : 12345,
  "processCacheMaxCapacity" : 12345,
  "processCacheLoadFactor" : 12345.0,
  "heartbeatInterval" : 12345,
  "heartbeatFactor" : 12345
}
            },
            "description" : "List of Workflow Engine with their State"
          }
        }
      }
    }
    ,
    "\/administrator/assignments" : {
      "delete" : {
        "tags" : [ "Admin" ],
        "summary" : "Remove the given Administrator Assignment.",
        "description" : "Remove the given Administrator Assignment.",
        "operationId" : "resource_Admin_removeAssignments_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of Administrator assignment which need to be removed.",
"$ref" : "#/definitions/json_RevokeAssignmentListNode"
            },
            "description" : "List of Administrator assignment which need to be removed."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Exception while creating security context for logged in user",
"$ref" : "#/definitions/json_EboSecurityException"
            },
            "examples" : {
              "application/json" : {
  "revokeAssignments" : [ {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  }, {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  } ],
  "arraySize" : 12345
}
            },
            "description" : "Exception while creating security context for logged in user"
          },
          "412" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "revokeAssignments" : [ {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  }, {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  } ],
  "arraySize" : 12345
}
            },
            "description" : "Invalid input"
          },
          "403" : {
            "schema" : {
"description" : "Unauthorized for this operation",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "revokeAssignments" : [ {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  }, {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  } ],
  "arraySize" : 12345
}
            },
            "description" : "Unauthorized for this operation"
          },
          "204" : {
            "schema" : {
"description" : "Success and Failed Administrator assignments.",
"$ref" : "#/definitions/json_RevokeAssignmentListNode"
            },
            "examples" : {
              "application/json" : {
  "revokeAssignments" : [ {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  }, {
    "assignmentDomain" : "...",
    "identity" : "...",
    "isAllPermissions" : true
  } ],
  "arraySize" : 12345
}
            },
            "description" : "Success and Failed Administrator assignments."
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Administrative assignments API lists all the domain/delegated admin\nassignments for the system to which logged in user belong.",
        "description" : "Administrative assignments API lists all the domain/delegated admin\nassignments for the system to which logged in user belong. example-User\n'Adman livies' is a Role administrator for 'Adam' administrative\nassignment list API will list all the assignments(User/Group/Container)\nfor Role Administrator role. RAR model we have 6 domains 1.Role\n2.Resource 3.Configuration 4.Complains(RBPM) 5.Provisioning 6.Report\n7.Security and three Delegated admins for Role, Resource, PRD domain's.\nAdministrative assignments API list assignments for all the domain's\nAssignments API provides in addition searching sorting, Pagination User\ncan Search assignments API against assignee details. Sorting : User can\ndo sorting on all the Response attributes from assignments list.",
        "operationId" : "resource_Admin_getAdminAssignments_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "filterSearch",
            "in" : "query",
            "default" : "ALL",
            "type" : "string",
            "description" : "- filter criteria for search"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "- specify start page"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "- searches on assignees"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "20",
            "type" : "integer",
            "description" : "- to specify number of records per page"
          },
          {
            "name" : "sortColumn",
            "in" : "query",
            "default" : "assignee",
            "type" : "string",
            "description" : "- to specify to sort by which column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "- to specify whether to sort in ascending or descending order"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal Exception while extracting admin assignments",
"$ref" : "#/definitions/json_NrfException"
            },
            "examples" : {
              "application/json" : {
  "adminAssignments" : [ {
    "assignee" : "...",
    "assigneeDn" : "...",
    "assignmentType" : "...",
    "assignmentTypeKey" : "...",
    "adminType" : "...",
    "adminTypeKey" : "...",
    "comment" : "...",
    "domain" : "...",
    "domainType" : "...",
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "status" : "..."
  }, {
    "assignee" : "...",
    "assigneeDn" : "...",
    "assignmentType" : "...",
    "assignmentTypeKey" : "...",
    "adminType" : "...",
    "adminTypeKey" : "...",
    "comment" : "...",
    "domain" : "...",
    "domainType" : "...",
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "status" : "..."
  } ],
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal Exception while extracting admin assignments"
          },
          "200" : {
            "schema" : {
"description" : "lists all the domain/delegated admin assignments for the system to which logged in user belongs.",
"$ref" : "#/definitions/json_AdminAssignmentListNode"
            },
            "examples" : {
              "application/json" : {
  "adminAssignments" : [ {
    "assignee" : "...",
    "assigneeDn" : "...",
    "assignmentType" : "...",
    "assignmentTypeKey" : "...",
    "adminType" : "...",
    "adminTypeKey" : "...",
    "comment" : "...",
    "domain" : "...",
    "domainType" : "...",
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "status" : "..."
  }, {
    "assignee" : "...",
    "assigneeDn" : "...",
    "assignmentType" : "...",
    "assignmentTypeKey" : "...",
    "adminType" : "...",
    "adminTypeKey" : "...",
    "comment" : "...",
    "domain" : "...",
    "domainType" : "...",
    "effectiveDate" : 12345,
    "expirationDate" : 12345,
    "status" : "..."
  } ],
  "nextIndex" : 12345,
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "lists all the domain/delegated admin assignments for the system to which logged in user belongs."
          }
        }
      }
    }
    ,
    "\/assignment/permissions" : {
      "delete" : {
        "tags" : [ "Admin" ],
        "summary" : "Delete permissions assigned to an assignee.",
        "description" : "Delete permissions assigned to an assignee. One or more permissions can\nbe removed together from the assignee. Response contains details about\nsuccessfully removed permissions and those permissions failed to get\nremoved.",
        "operationId" : "resource_Admin_deletePermissions_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of permissions to remove",
"$ref" : "#/definitions/json_PermissionListNode"
            },
            "description" : "List of permissions to remove"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ],
  "failed" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting permissions",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ],
  "failed" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting permissions"
          },
          "204" : {
            "schema" : {
"description" : "Delete permission status",
"$ref" : "#/definitions/json_ResponseListNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ],
  "failed" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ]
}
            },
            "description" : "Delete permission status"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Admin" ],
        "summary" : "Add permissions to a team.",
        "description" : "Add permissions to a team. Multiple permissions can be assigned to a\nassignee. Response contains details about successfully added permissions\nand those permissions failed to get added.",
        "operationId" : "resource_Admin_addPermissions_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of permissions to add",
"$ref" : "#/definitions/json_PermissionListNode"
            },
            "description" : "List of permissions to add"
          }
        ],
        "responses" : {
          "412" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ],
  "failed" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while adding permissions",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ],
  "failed" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ]
}
            },
            "description" : "Internal exception while adding permissions"
          },
          "204" : {
            "schema" : {
"description" : "Add permissions status",
"$ref" : "#/definitions/json_ResponseListNode"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ],
  "failed" : [ {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "reason" : "..."
  } ]
}
            },
            "description" : "Add permissions status"
          }
        }
      }
    }
    ,
    "\/cache/configuration" : {
      "get" : {
        "tags" : [ "Admin" ],
        "description" : "",
        "operationId" : "resource_Admin_getCacheConfiguration_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting cache and cluster configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "permIndexClusterEnabled" : "...",
  "permIndexClusterEnabledCurrentValue" : "...",
  "clusterEnabled" : "...",
  "clusterEnabledCurrentValue" : "...",
  "groupID" : "...",
  "currentGroupID" : "...",
  "clusterProps" : "...",
  "clusterCurrentProps" : "...",
  "permIndexGroupID" : "...",
  "currentPermIndexGroupID" : "...",
  "permIndexClusterProps" : "...",
  "clusterPermIndexCurrentProps" : "...",
  "lockAcquTimeout" : "...",
  "lockAcquCurrentTimeout" : "...",
  "evictionPolicyClass" : "...",
  "currentEvictionPolicyClass" : "...",
  "wakeUpIntervalSeconds" : "...",
  "currentWakeUpInterval" : "...",
  "maxNodes" : "...",
  "currentMaxNodes" : "...",
  "timeToLiveSeconds" : "...",
  "currentTimeToLive" : "...",
  "localClusterEnabled" : "...",
  "localGroupID" : "...",
  "localClusterProps" : "...",
  "localLockAcquTimeout" : "...",
  "localEvictionPolicyClass" : "...",
  "localWakeUpIntervalSeconds" : "...",
  "localMaxNodes" : "...",
  "localTimeToLiveSeconds" : "..."
}
            },
            "description" : "Internal exception while getting cache and cluster configuration"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CacheConfigNode"
            },
            "examples" : {
              "application/json" : {
  "permIndexClusterEnabled" : "...",
  "permIndexClusterEnabledCurrentValue" : "...",
  "clusterEnabled" : "...",
  "clusterEnabledCurrentValue" : "...",
  "groupID" : "...",
  "currentGroupID" : "...",
  "clusterProps" : "...",
  "clusterCurrentProps" : "...",
  "permIndexGroupID" : "...",
  "currentPermIndexGroupID" : "...",
  "permIndexClusterProps" : "...",
  "clusterPermIndexCurrentProps" : "...",
  "lockAcquTimeout" : "...",
  "lockAcquCurrentTimeout" : "...",
  "evictionPolicyClass" : "...",
  "currentEvictionPolicyClass" : "...",
  "wakeUpIntervalSeconds" : "...",
  "currentWakeUpInterval" : "...",
  "maxNodes" : "...",
  "currentMaxNodes" : "...",
  "timeToLiveSeconds" : "...",
  "currentTimeToLive" : "...",
  "localClusterEnabled" : "...",
  "localGroupID" : "...",
  "localClusterProps" : "...",
  "localLockAcquTimeout" : "...",
  "localEvictionPolicyClass" : "...",
  "localWakeUpIntervalSeconds" : "...",
  "localMaxNodes" : "...",
  "localTimeToLiveSeconds" : "..."
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Admin" ],
        "description" : "",
        "operationId" : "resource_Admin_saveCacheData_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CacheConfigNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "permIndexClusterEnabled" : "...",
  "permIndexClusterEnabledCurrentValue" : "...",
  "clusterEnabled" : "...",
  "clusterEnabledCurrentValue" : "...",
  "groupID" : "...",
  "currentGroupID" : "...",
  "clusterProps" : "...",
  "clusterCurrentProps" : "...",
  "permIndexGroupID" : "...",
  "currentPermIndexGroupID" : "...",
  "permIndexClusterProps" : "...",
  "clusterPermIndexCurrentProps" : "...",
  "lockAcquTimeout" : "...",
  "lockAcquCurrentTimeout" : "...",
  "evictionPolicyClass" : "...",
  "currentEvictionPolicyClass" : "...",
  "wakeUpIntervalSeconds" : "...",
  "currentWakeUpInterval" : "...",
  "maxNodes" : "...",
  "currentMaxNodes" : "...",
  "timeToLiveSeconds" : "...",
  "currentTimeToLive" : "...",
  "localClusterEnabled" : "...",
  "localGroupID" : "...",
  "localClusterProps" : "...",
  "localLockAcquTimeout" : "...",
  "localEvictionPolicyClass" : "...",
  "localWakeUpIntervalSeconds" : "...",
  "localMaxNodes" : "...",
  "localTimeToLiveSeconds" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating cache configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "permIndexClusterEnabled" : "...",
  "permIndexClusterEnabledCurrentValue" : "...",
  "clusterEnabled" : "...",
  "clusterEnabledCurrentValue" : "...",
  "groupID" : "...",
  "currentGroupID" : "...",
  "clusterProps" : "...",
  "clusterCurrentProps" : "...",
  "permIndexGroupID" : "...",
  "currentPermIndexGroupID" : "...",
  "permIndexClusterProps" : "...",
  "clusterPermIndexCurrentProps" : "...",
  "lockAcquTimeout" : "...",
  "lockAcquCurrentTimeout" : "...",
  "evictionPolicyClass" : "...",
  "currentEvictionPolicyClass" : "...",
  "wakeUpIntervalSeconds" : "...",
  "currentWakeUpInterval" : "...",
  "maxNodes" : "...",
  "currentMaxNodes" : "...",
  "timeToLiveSeconds" : "...",
  "currentTimeToLive" : "...",
  "localClusterEnabled" : "...",
  "localGroupID" : "...",
  "localClusterProps" : "...",
  "localLockAcquTimeout" : "...",
  "localEvictionPolicyClass" : "...",
  "localWakeUpIntervalSeconds" : "...",
  "localMaxNodes" : "...",
  "localTimeToLiveSeconds" : "..."
}
            },
            "description" : "Internal exception while updating cache configuration"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CacheConfigNode"
            },
            "examples" : {
              "application/json" : {
  "permIndexClusterEnabled" : "...",
  "permIndexClusterEnabledCurrentValue" : "...",
  "clusterEnabled" : "...",
  "clusterEnabledCurrentValue" : "...",
  "groupID" : "...",
  "currentGroupID" : "...",
  "clusterProps" : "...",
  "clusterCurrentProps" : "...",
  "permIndexGroupID" : "...",
  "currentPermIndexGroupID" : "...",
  "permIndexClusterProps" : "...",
  "clusterPermIndexCurrentProps" : "...",
  "lockAcquTimeout" : "...",
  "lockAcquCurrentTimeout" : "...",
  "evictionPolicyClass" : "...",
  "currentEvictionPolicyClass" : "...",
  "wakeUpIntervalSeconds" : "...",
  "currentWakeUpInterval" : "...",
  "maxNodes" : "...",
  "currentMaxNodes" : "...",
  "timeToLiveSeconds" : "...",
  "currentTimeToLive" : "...",
  "localClusterEnabled" : "...",
  "localGroupID" : "...",
  "localClusterProps" : "...",
  "localLockAcquTimeout" : "...",
  "localEvictionPolicyClass" : "...",
  "localWakeUpIntervalSeconds" : "...",
  "localMaxNodes" : "...",
  "localTimeToLiveSeconds" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/cache/customizedHolders" : {
      "get" : {
        "tags" : [ "Admin" ],
        "description" : "",
        "operationId" : "resource_Admin_getCustomizeCacheHolders_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting customize cache holders configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "arraySize" : 12345,
  "customizeCacheHolders" : [ {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  }, {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting customize cache holders configuration"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CustomizeCacheListNode"
            },
            "examples" : {
              "application/json" : {
  "arraySize" : 12345,
  "customizeCacheHolders" : [ {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  }, {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Admin" ],
        "description" : "",
        "operationId" : "resource_Admin_saveCacheCustomizations_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CustomizeCacheListNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "412" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "arraySize" : 12345,
  "customizeCacheHolders" : [ {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  }, {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating entitlement Query settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "arraySize" : 12345,
  "customizeCacheHolders" : [ {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  }, {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  } ]
}
            },
            "description" : "Internal exception while updating entitlement Query settings"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_CustomizeCacheListNode"
            },
            "examples" : {
              "application/json" : {
  "arraySize" : 12345,
  "customizeCacheHolders" : [ {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  }, {
    "maxnodesCurrent" : 12345,
    "globalMaxnodes" : "...",
    "enableLocalMaxnodes" : "...",
    "localMaxnodes" : "...",
    "timetoliveCurrent" : 12345,
    "globalTimetolive" : "...",
    "loacalTimetolive" : "...",
    "enableLocalTimetolive" : "...",
    "maxageCurrent" : 12345,
    "globalMaxage" : "...",
    "localMaxage" : "...",
    "enableLocalMaxage" : "...",
    "cacheActive" : "...",
    "cacheEnable" : "...",
    "cacheReadonly" : "...",
    "cacheValue" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/cache/holders" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "It allows Administrator to get the cache information for user application\ncustomizable and non customizable cache holders.",
        "description" : "It allows Administrator to get the cache information for user application\ncustomizable and non customizable cache holders.<\/br>\nAdministrator can fetch the following information: <\/br>\n<b>cacheArraySize<\/b>: It will give number of cache holder you are using\nin your<\/br>\nuser application.<\/br>\n<b>Name<\/b>: It will display the name of particular cache holder.<\/br>\n<b>Object Count<\/b>: It will give you number of cached objects in\nparticular cache holder.",
        "operationId" : "resource_Admin_getCacheInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "returnObjectCount",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "true, if you want object count for the holders as well in reponse"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting cache info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "cacheArraySize" : 12345,
  "cacheHolders" : [ {
    "cacheHolderID" : "...",
    "objectCount" : 12345
  }, {
    "cacheHolderID" : "...",
    "objectCount" : 12345
  } ]
}
            },
            "description" : "Internal exception while getting cache info"
          },
          "403" : {
            "schema" : {
"description" : "Unauthorized for this operation",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "cacheArraySize" : 12345,
  "cacheHolders" : [ {
    "cacheHolderID" : "...",
    "objectCount" : 12345
  }, {
    "cacheHolderID" : "...",
    "objectCount" : 12345
  } ]
}
            },
            "description" : "Unauthorized for this operation"
          },
          "200" : {
            "schema" : {
"description" : "Cache information as JSON object",
"$ref" : "#/definitions/json_CacheInfoListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "cacheArraySize" : 12345,
  "cacheHolders" : [ {
    "cacheHolderID" : "...",
    "objectCount" : 12345
  }, {
    "cacheHolderID" : "...",
    "objectCount" : 12345
  } ]
}
            },
            "description" : "Cache information as JSON object"
          }
        }
      }
    }
    ,
    "\/driverstatus/info" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "It allows Administrator to get the User Application driver information.",
        "description" : "It allows Administrator to get the User Application driver information\n.<\/br>\nAdministrator can fetch the following information: <\/br>\n<b>Driver Name<\/b>: It will fetch current User Application driver\nname.<\/br>\n<b>Expiration Date<\/b>: It will fetch User Application driver expiration\ndate.<\/br>\n<b>Driver Version<\/b>: It will fetch User Application driver version\ninformation.<\/br>\n<b>Application Version<\/b> It will fetch which Version of User\nApplication current running.<\/br>\n<b>Patch Level<\/b> It will fetch which User Application patch level<\/br>",
        "operationId" : "resource_Admin_getDriverStatusInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting driver status info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "patchLevel" : "...",
  "appVersion" : "...",
  "driverVersion" : "...",
  "buildVersion" : "...",
  "driverName" : "...",
  "expirationDate" : 12345,
  "state" : "..."
}
            },
            "description" : "Internal exception while getting driver status info"
          },
          "200" : {
            "schema" : {
"description" : "Driver information as JSON object",
"$ref" : "#/definitions/json_DriverStatusNode"
            },
            "examples" : {
              "application/json" : {
  "patchLevel" : "...",
  "appVersion" : "...",
  "driverVersion" : "...",
  "buildVersion" : "...",
  "driverName" : "...",
  "expirationDate" : 12345,
  "state" : "..."
}
            },
            "description" : "Driver information as JSON object"
          }
        }
      }
    }
    ,
    "\/logging/auditConfig" : {
      "post" : {
        "tags" : [ "Admin" ],
        "description" : "",
        "operationId" : "resource_Admin_updateAuditConfiguration_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LogConfigurationResponseNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting log info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "Internal exception while getting log info"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_LogConfigurationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/logging/buildPDXLF" : {
      "put" : {
        "tags" : [ "Admin" ],
        "summary" : "Determine if the NAudit Appender exists and is enabled.",
        "description" : "Determine if the NAudit Appender exists and is enabled.",
        "operationId" : "resource_Admin_buildPackageDescriptionXLF_PUT",
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting log info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "Internal exception while getting log info"
          },
          "204" : {
            "schema" : {
"description" : "true if NAudit is enabled.",
"$ref" : "#/definitions/json_LogConfigurationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "true if NAudit is enabled."
          }
        }
      }
    }
    ,
    "\/logging/list" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "API to get log configuration in the system.",
        "description" : "API to get log configuration in the system",
        "operationId" : "resource_Admin_getLogConfigurations_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "fetchAuditConfigs",
            "in" : "query",
            "default" : "true",
            "type" : "boolean",
            "description" : "- to fetch only audit configurations"
          },
          {
            "name" : "fetchLogConfigs",
            "in" : "query",
            "default" : "true",
            "type" : "boolean",
            "description" : "- to fetch only log configurations"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "type" : "integer",
            "description" : "- specify start page"
          },
          {
            "name" : "pageSize",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "- to specify number of records per page"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "- searches on package name"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "logName",
            "type" : "string",
            "description" : "- to specify to sort by which column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "- to specify whether to sort in ascending or descending order"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting log info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "Internal exception while getting log info"
          },
          "200" : {
            "schema" : {
"description" : "list of log configurations in the system",
"$ref" : "#/definitions/json_LogConfigurationResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "logConfigurations" : [ {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  }, {
    "packageConfigured" : {
      "packageName" : "...",
      "packageDescription" : "..."
    },
    "logAdditivity" : true,
    "logLevel" : 12345
  } ],
  "totalSize" : 12345,
  "total" : 12345,
  "enableCEF" : true,
  "cefConfigs" : {
    "destinationHost" : "...",
    "destinationPort" : 12345,
    "protocol" : "...",
    "useTLS" : true,
    "keyStorePath" : "...",
    "keyStorePWD" : "...",
    "intermediateStoragePath" : "..."
  },
  "persist" : true,
  "changeAllLogs" : true,
  "globalLogLevel" : 12345
}
            },
            "description" : "list of log configurations in the system"
          }
        }
      }
    }
    ,
    "\/permission/assignment" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Get admin assignment permission list.",
        "description" : "Get admin assignment permission list. Fetches all permissions\nfrom domains like PRD, Role and Resources. Result set will\nget filtered based on search text matched with permission name and also\nget sorted based on type of permission either in ascending or descending\norder. It supports pagination.",
        "operationId" : "resource_Admin_getGranularPermissionForAdminAssignment_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "assigneeDn",
            "in" : "query",
            "type" : "string",
            "description" : "Input Assignee for whom you require permission Authorized Objectmap"
          },
          {
            "name" : "domain",
            "in" : "query",
            "type" : "string",
            "description" : "Domain type, allowed domains are ROLES, RESOURCES, PRD"
          },
          {
            "name" : "filterSearch",
            "in" : "query",
            "type" : "string",
            "description" : "filter criteria for search"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Next index for pagination"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "Search text to filter results"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "20",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "sortColumn",
            "in" : "query",
            "default" : "resolvedNameAuthObject",
            "type" : "string",
            "description" : "to specify to sort by which column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "412" : {
            "schema" : {
"description" : "Precondetion to execute the rest API failed",
"$ref" : "#/definitions/json_RestValidationException"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Precondetion to execute the rest API failed"
          },
          "200" : {
            "schema" : {
"description" : "Permission list",
"$ref" : "#/definitions/json_DomainListNode"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Permission list"
          }
        }
      }
    }
    ,
    "\/permission/rights" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "API to fetch configuration rights of logged in delegtated admin.",
        "description" : "API to fetch configuration rights of logged in delegtated admin",
        "operationId" : "resource_Admin_getLoggedInDelgatedAdminConfigurationRights_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "objectType",
            "in" : "query",
            "type" : "string",
            "description" : "can be role, resource or sod"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "permissionKey" : "...",
  "isAccesible" : true
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting permission assignments to user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "permissionKey" : "...",
  "isAccesible" : true
}
            },
            "description" : "Internal exception while getting permission assignments to user"
          },
          "200" : {
            "schema" : {
"description" : "rights of logged in delegated admin configuration",
"$ref" : "#/definitions/json_DelegatedAdminRights"
            },
            "examples" : {
              "application/json" : {
  "permissionKey" : "...",
  "isAccesible" : true
}
            },
            "description" : "rights of logged in delegated admin configuration"
          }
        }
      }
    }
    ,
    "\/permission/rootContainer" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "API to get the root container given the domain.",
        "description" : "API to get the root container given the domain",
        "operationId" : "resource_Admin_getRootContainerForGivenDomain_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "domain",
            "in" : "query",
            "type" : "string",
            "description" : "Domain type, allowed domains are ROLES, RESOURCES, PRD"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception readingConfigurations",
"$ref" : "#/definitions/json_NrfException"
            },
            "examples" : {
              "application/json" : {
  "mapList" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Internal exception readingConfigurations"
          },
          "200" : {
            "schema" : {
"description" : "root container for the passed domain",
"$ref" : "#/definitions/json_JaxBMapNodeList"
            },
            "examples" : {
              "application/json" : {
  "mapList" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "root container for the passed domain"
          }
        }
      }
    }
    ,
    "\/proxy/configuration" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Get all configuration related to proxy admin configuration such as.",
        "description" : "Get all configuration related to proxy admin configuration such as <br />\n<b>proxyRetentionTime<\/b> : Retention time for Proxy assignments in\nminutes.<br />\n<b>proxyNotfTemplate<\/b> : Notification template dn will be used to send\nnotification at <br />\nthe time of proxy creation.",
        "operationId" : "resource_Admin_getProxyConfiguration_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting proxy configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Internal exception while getting proxy configuration"
          },
          "403" : {
            "schema" : {
"description" : "Internal exception while getting proxy configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Internal exception while getting proxy configuration"
          },
          "200" : {
            "schema" : {
"description" : "Proxy configuration.",
"$ref" : "#/definitions/json_ProxyConfigNode"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Proxy configuration."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Save or Update proxy such as notification templates, rentention time\netc.",
        "description" : "Save or Update proxy such as notification templates, rentention time\netc.<br />\n<b>proxyRetentionTime<\/b> : Retention time for Proxy assignments in\nminutes.<br />\n<b>proxyNotfTemplate<\/b> : Notification template dn will be used to send\nnotification at <br />\nthe time of proxy creation.",
        "operationId" : "resource_Admin_saveOrUpdateProxyConfiguration_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ProxyConfigNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input. XSS validation failed.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Invalid input. XSS validation failed."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving proxy configuration.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Internal exception while saving proxy configuration."
          },
          "201" : {
            "schema" : {
"description" : "updated proxy admin configuration",
"$ref" : "#/definitions/json_ProxyConfigNode"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "updated proxy admin configuration"
          }
        }
      }
    }
    ,
    "\/workflowengines/configuration" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "It allows Administrator to get the engine configuration for workflow\nengine.",
        "description" : "It allows Administrator to get the engine configuration for workflow\nengine. <\/br>\n<b>keepAliveTime: <\/b>Keep alive time in minutes.<br>\n<\/br>\n<b> userActivityTimeout: <\/b>In Hours, valid range: 0 hour to 365\ndays.<br>\n<\/br>\n<b> completedProcessTimeout: <\/b>In Days, valid range: 0 day to 365\ndays.<br>\n<\/br>\n<b> webServiceActivityTimeout: <\/b>In minutes, valid range: 1 minute to 7\ndays.<br>\n<\/br>\n<b>pendingInterval: <\/b>Pending process interval in minutes.<br>\n<\/br>\n<b>cleanupInterval: <\/b>Completed process cleanup interval in hours.<br>\n<\/br>\n<b> retryQueueInterval: <\/b>Retry queue interval in minutes.<br>\n<\/br>\n<b>maxShutdownTime: <\/b>Maximum engine shutdown timeout in minutes.<br>\n<\/br>\n<b> processCacheLoadFactor: <\/b>Valid range: 0 to 1.<br>\n<\/br>\n<b>heartbeatInterval: <\/b>Heartbeat intervals in seconds, minimum 60.<br>\n<\/br>\n<b>heartbeatFactor: <\/b>Heartbeat , minimum 2.<br>\n<\/br>",
        "operationId" : "resource_Admin_getEnigineConfiguration_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting engine configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "engineId" : "...",
  "minPoolSize" : 12345,
  "maxPoolSize" : 12345,
  "initialPoolSize" : 12345,
  "keepAliveTime" : 12345,
  "userActivityTimeout" : 12345,
  "completedProcessTimeout" : 12345,
  "webServiceActivityTimeout" : 12345,
  "pendingInterval" : 12345,
  "cleanupInterval" : 12345,
  "retryQueueInterval" : 12345,
  "maxShutdownTime" : 12345,
  "enableEmailNotification" : true,
  "processCacheInitialCapacity" : 12345,
  "processCacheMaxCapacity" : 12345,
  "processCacheLoadFactor" : 12345.0,
  "heartbeatInterval" : 12345,
  "heartbeatFactor" : 12345
}
            },
            "description" : "Internal exception while getting engine configuration"
          },
          "200" : {
            "schema" : {
"description" : "Engine Configuration",
"$ref" : "#/definitions/json_EngineConfigNode"
            },
            "examples" : {
              "application/json" : {
  "engineId" : "...",
  "minPoolSize" : 12345,
  "maxPoolSize" : 12345,
  "initialPoolSize" : 12345,
  "keepAliveTime" : 12345,
  "userActivityTimeout" : 12345,
  "completedProcessTimeout" : 12345,
  "webServiceActivityTimeout" : 12345,
  "pendingInterval" : 12345,
  "cleanupInterval" : 12345,
  "retryQueueInterval" : 12345,
  "maxShutdownTime" : 12345,
  "enableEmailNotification" : true,
  "processCacheInitialCapacity" : 12345,
  "processCacheMaxCapacity" : 12345,
  "processCacheLoadFactor" : 12345.0,
  "heartbeatInterval" : 12345,
  "heartbeatFactor" : 12345
}
            },
            "description" : "Engine Configuration"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "It allows Admin to Update workflow engine configuration.",
        "description" : "It allows Admin to Update workflow engine configuration. <\/br>\n<b>keepAliveTime: <\/b>Keep alive time in minutes.<br>\n<\/br>\n<b> userActivityTimeout: <\/b>In Hours, valid range: 0 hour to 365\ndays.<br>\n<\/br>\n<b> completedProcessTimeout: <\/b>In Days, valid range: 0 day to 365\ndays.<br>\n<\/br>\n<b> webServiceActivityTimeout: <\/b>In minutes, valid range: 1 minute to 7\ndays.<br>\n<\/br>\n<b>pendingInterval: <\/b>Pending process interval in minutes.<br>\n<\/br>\n<b>cleanupInterval: <\/b>Completed process cleanup interval in hours.<br>\n<\/br>\n<b> retryQueueInterval: <\/b>Retry queue interval in minutes.<br>\n<\/br>\n<b>maxShutdownTime: <\/b>Maximum engine shutdown timeout in minutes.<br>\n<\/br>\n<b> processCacheLoadFactor: <\/b>Valid range: 0 to 1.<br>\n<\/br>\n<b>heartbeatInterval: <\/b>Heartbeat intervals in seconds, minimum 60.<br>\n<\/br>\n<b>heartbeatFactor: <\/b>Heartbeat , minimum 2.<br>\n<\/br>",
        "operationId" : "resource_Admin_updateEnigineConfiguration_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "workflow engine configuration object having values which has to be\nupdated",
"$ref" : "#/definitions/json_EngineConfigNode"
            },
            "description" : "workflow engine configuration object having values which has to be\nupdated"
          }
        ],
        "responses" : {
          "412" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "engineId" : "...",
  "minPoolSize" : 12345,
  "maxPoolSize" : 12345,
  "initialPoolSize" : 12345,
  "keepAliveTime" : 12345,
  "userActivityTimeout" : 12345,
  "completedProcessTimeout" : 12345,
  "webServiceActivityTimeout" : 12345,
  "pendingInterval" : 12345,
  "cleanupInterval" : 12345,
  "retryQueueInterval" : 12345,
  "maxShutdownTime" : 12345,
  "enableEmailNotification" : true,
  "processCacheInitialCapacity" : 12345,
  "processCacheMaxCapacity" : 12345,
  "processCacheLoadFactor" : 12345.0,
  "heartbeatInterval" : 12345,
  "heartbeatFactor" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating cache configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "engineId" : "...",
  "minPoolSize" : 12345,
  "maxPoolSize" : 12345,
  "initialPoolSize" : 12345,
  "keepAliveTime" : 12345,
  "userActivityTimeout" : 12345,
  "completedProcessTimeout" : 12345,
  "webServiceActivityTimeout" : 12345,
  "pendingInterval" : 12345,
  "cleanupInterval" : 12345,
  "retryQueueInterval" : 12345,
  "maxShutdownTime" : 12345,
  "enableEmailNotification" : true,
  "processCacheInitialCapacity" : 12345,
  "processCacheMaxCapacity" : 12345,
  "processCacheLoadFactor" : 12345.0,
  "heartbeatInterval" : 12345,
  "heartbeatFactor" : 12345
}
            },
            "description" : "Internal exception while updating cache configuration"
          },
          "201" : {
            "schema" : {
"description" : "updated configuration object of workflow engine",
"$ref" : "#/definitions/json_EngineConfigNode"
            },
            "examples" : {
              "application/json" : {
  "engineId" : "...",
  "minPoolSize" : 12345,
  "maxPoolSize" : 12345,
  "initialPoolSize" : 12345,
  "keepAliveTime" : 12345,
  "userActivityTimeout" : 12345,
  "completedProcessTimeout" : 12345,
  "webServiceActivityTimeout" : 12345,
  "pendingInterval" : 12345,
  "cleanupInterval" : 12345,
  "retryQueueInterval" : 12345,
  "maxShutdownTime" : 12345,
  "enableEmailNotification" : true,
  "processCacheInitialCapacity" : 12345,
  "processCacheMaxCapacity" : 12345,
  "processCacheLoadFactor" : 12345.0,
  "heartbeatInterval" : 12345,
  "heartbeatFactor" : 12345
}
            },
            "description" : "updated configuration object of workflow engine"
          }
        }
      }
    }
    ,
    "\/workflowengines/status" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Rest end point to start/stop the workflow engine.",
        "description" : "Rest end point to start/stop the workflow engine",
        "operationId" : "resource_Admin_updateWorkflowEngineState_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_WorkflowStatusNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/administrator/assignments/adminDomains" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all the Admin domains present in the system.",
        "description" : "Lists all the Admin domains present in the system",
        "operationId" : "resource_Admin_getLoggedInUserDomainAdmin_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Exception while creating security context for logged in user",
"$ref" : "#/definitions/json_EboSecurityException"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Exception while creating security context for logged in user"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DomainListNode"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/administrator/assignments/columns" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all the Admin domains present in the system.",
        "description" : "Lists all the Admin domains present in the system",
        "operationId" : "resource_Admin_getColumnCustomization_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Exception while creating security context for logged in user",
"$ref" : "#/definitions/json_EboSecurityException"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Exception while creating security context for logged in user"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DomainListNode"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/administrator/assignments/create" : {
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "create administrative assignment REST API.",
        "description" : "create administrative assignment REST API",
        "operationId" : "resource_Admin_createAssignment_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "assignment inputNode",
"$ref" : "#/definitions/json_AdminAssignmentNode"
            },
            "description" : "assignment inputNode"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Exception while creating assignment object or getting security context for logged in user",
"$ref" : "#/definitions/json_EboSecurityException"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Exception while creating assignment object or getting security context for logged in user"
          },
          "400" : {
            "schema" : {
"description" : "Input payload does not follow mandatory input filed requirment",
"$ref" : "#/definitions/json_IllegalArgumentException"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Input payload does not follow mandatory input filed requirment"
          },
          "412" : {
            "schema" : {
"description" : "Inputvalid Input",
"$ref" : "#/definitions/json_RestValidationException"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : "Inputvalid Input"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DomainListNode"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/administrator/assignments/domains" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Lists all the Admin domains present in the system.",
        "description" : "Lists all the Admin domains present in the system",
        "operationId" : "resource_Admin_getAdmindomains_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DomainListNode"
            },
            "examples" : {
              "application/json" : {
  "domains" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/cache/holder/items" : {
      "delete" : {
        "tags" : [ "Admin" ],
        "summary" : "Rest end points to flush cache items for passed cache holder id.",
        "description" : "Rest end points to flush cache items for passed cache holder id.",
        "operationId" : "resource_Admin_flushCacheByHolderID_DELETE",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "cacheHolderID",
            "in" : "query",
            "type" : "string",
            "description" : "id of cache holder, All Cache in case of flushing whole cache in\nuser locale."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while flushing cache data",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while flushing cache data"
          },
          "403" : {
            "schema" : {
"description" : "Unauthorized for this operation",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Unauthorized for this operation"
          },
          "204" : {
            "schema" : {
"description" : "successful massage with status code",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "successful massage with status code"
          }
        }
      }
    }
    ,
    "\/display/settings/general" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "API to get general settings.",
        "description" : "API to get general settings",
        "operationId" : "resource_Admin_getGeneralSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting general settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "defaultRowsPerPage" : 12345,
  "optionsRowsPerPage" : "...",
  "newRequestDefaultSortByOption" : "..."
}
            },
            "description" : "Internal exception while getting general settings"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_GeneralDispSettingNode"
            },
            "examples" : {
              "application/json" : {
  "defaultRowsPerPage" : 12345,
  "optionsRowsPerPage" : "...",
  "newRequestDefaultSortByOption" : "..."
}
            },
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Admin" ],
        "summary" : "API to modify general settings.",
        "description" : "API to modify general settings",
        "operationId" : "resource_Admin_modifyGeneralSettings_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input payload which holds the changed information",
"$ref" : "#/definitions/json_GeneralDispSettingNode"
            },
            "description" : "Input payload which holds the changed information"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while modifying general settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "defaultRowsPerPage" : 12345,
  "optionsRowsPerPage" : "...",
  "newRequestDefaultSortByOption" : "..."
}
            },
            "description" : "Internal exception while modifying general settings"
          },
          "204" : {
            "schema" : {
"description" : "Updated general setting node",
"$ref" : "#/definitions/json_GeneralDispSettingNode"
            },
            "examples" : {
              "application/json" : {
  "defaultRowsPerPage" : 12345,
  "optionsRowsPerPage" : "...",
  "newRequestDefaultSortByOption" : "..."
}
            },
            "description" : "Updated general setting node"
          }
        }
      }
    }
    ,
    "\/display/settings/request" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "API to get request settings.",
        "description" : "API to get request settings",
        "operationId" : "resource_Admin_getRequestSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting request settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "requestListSort" : "...",
  "requestListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "requestListColumnsOverride" : true
}
            },
            "description" : "Internal exception while getting request settings"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RequestSettingNode"
            },
            "examples" : {
              "application/json" : {
  "requestListSort" : "...",
  "requestListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "requestListColumnsOverride" : true
}
            },
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Admin" ],
        "summary" : "API to modify request settings both sort column and sort order are stored\nin a single field in the UA driver config xml, hence mandatory validation\nis put on sort column and sort order.",
        "description" : "API to modify request settings both sort column and sort order are stored\nin a single field in the UA driver config xml, hence mandatory validation\nis put on sort column and sort order",
        "operationId" : "resource_Admin_modifyRequestSettings_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input payload which holds the changed information",
"$ref" : "#/definitions/json_RequestSettingNode"
            },
            "description" : "Input payload which holds the changed information"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while modifying request settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "requestListSort" : "...",
  "requestListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "requestListColumnsOverride" : true
}
            },
            "description" : "Internal exception while modifying request settings"
          },
          "204" : {
            "schema" : {
"description" : "Updated request setting node",
"$ref" : "#/definitions/json_RequestSettingNode"
            },
            "examples" : {
              "application/json" : {
  "requestListSort" : "...",
  "requestListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "requestListColumnsOverride" : true
}
            },
            "description" : "Updated request setting node"
          }
        }
      }
    }
    ,
    "\/display/settings/task" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "API to get task settings.",
        "description" : "API to get task settings",
        "operationId" : "resource_Admin_getTaskSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting task settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "taskListSort" : "...",
  "taskListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForSort" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "taskListColumnsOverride" : true,
  "taskDetailOpenOverride" : true,
  "taskDetailClaim" : true,
  "taskDetailClaimOverride" : true
}
            },
            "description" : "Internal exception while getting task settings"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_TaskSettingNode"
            },
            "examples" : {
              "application/json" : {
  "taskListSort" : "...",
  "taskListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForSort" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "taskListColumnsOverride" : true,
  "taskDetailOpenOverride" : true,
  "taskDetailClaim" : true,
  "taskDetailClaimOverride" : true
}
            },
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Admin" ],
        "summary" : "API to modify task settings both sort column and sort order are stored in\na single field in the UA driver config xml, hence mandatory validation is\nput on sort column and sort order.",
        "description" : "API to modify task settings both sort column and sort order are stored in\na single field in the UA driver config xml, hence mandatory validation is\nput on sort column and sort order",
        "operationId" : "resource_Admin_modifyTaskSettings_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input payload which holds the changed information",
"$ref" : "#/definitions/json_TaskSettingNode"
            },
            "description" : "Input payload which holds the changed information"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while modifying task settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "taskListSort" : "...",
  "taskListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForSort" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "taskListColumnsOverride" : true,
  "taskDetailOpenOverride" : true,
  "taskDetailClaim" : true,
  "taskDetailClaimOverride" : true
}
            },
            "description" : "Internal exception while modifying task settings"
          },
          "204" : {
            "schema" : {
"description" : "Updated task setting node",
"$ref" : "#/definitions/json_TaskSettingNode"
            },
            "examples" : {
              "application/json" : {
  "taskListSort" : "...",
  "taskListSortDesc" : true,
  "defaultColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForUserOverride" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "columnsForSort" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "allColumns" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "taskListColumnsOverride" : true,
  "taskDetailOpenOverride" : true,
  "taskDetailClaim" : true,
  "taskDetailClaimOverride" : true
}
            },
            "description" : "Updated task setting node"
          }
        }
      }
    }
    ,
    "\/logging/packages/list" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "API to get package list.",
        "description" : "API to get package list",
        "operationId" : "resource_Admin_getPackages_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "type" : "integer",
            "description" : "- specify start page"
          },
          {
            "name" : "pageSize",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "- to specify number of records per page"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "- search string"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "packageName",
            "type" : "string",
            "description" : "- to specify to sort by which column"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "- to specify whether to sort in ascending or descending order"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting log info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "packages" : [ {
    "packageName" : "...",
    "packageDescription" : "..."
  }, {
    "packageName" : "...",
    "packageDescription" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting log info"
          },
          "200" : {
            "schema" : {
"description" : "packages which can be logged in the system",
"$ref" : "#/definitions/json_PackageResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "packages" : [ {
    "packageName" : "...",
    "packageDescription" : "..."
  }, {
    "packageName" : "...",
    "packageDescription" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "packages which can be logged in the system"
          }
        }
      }
    }
    ,
    "\/proxy/service/settings" : {
      "get" : {
        "tags" : [ "Admin" ],
        "summary" : "Get all configuration related to Proxy and Delegattion Synchronization\nand Cleanup Service configurations such as.",
        "description" : "Get all configuration related to Proxy and Delegattion Synchronization\nand Cleanup Service configurations such as <br />\n<b>Synchronization Service Activation Interval<\/b> : synchronization time\nfor delegation and proxy settings. Activation interval change will take\neffect the next time application server starts up.<br />\n<b>Cleanup Service Activation Interval<\/b> : cleanup service to delete\nassignments and settings that have passed retention time. <br />\nCleanup Service Activation interval change will take effect the next time\napplication starts up. <b> or Cleanup Date<\/b> : cleanup date to delete\nassignments and settings that have passed retention time. <br />\nCleanup Date change will take effect the next time application starts up.",
        "operationId" : "resource_Admin_getProxyAndDelegationServiceSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting proxy configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Internal exception while getting proxy configuration"
          },
          "200" : {
            "schema" : {
"description" : "Proxy and Delegation Synchronization and Cleanup Service\nconfigurations.",
"$ref" : "#/definitions/json_ProxyConfigNode"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Proxy and Delegation Synchronization and Cleanup Service\nconfigurations."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Admin" ],
        "summary" : "Save or Update all configuration related to Proxy and Delegattion\nSynchronization and Cleanup Service configurations such as.",
        "description" : "Save or Update all configuration related to Proxy and Delegattion\nSynchronization and Cleanup Service configurations such as <br />\n<b>Synchronization Service Activation Interval<\/b> : synchronization time\nfor delegation and proxy settings. Activation interval change will take\neffect the next time application server starts up.<br />\n<b>Cleanup Service Activation Interval<\/b> : cleanup service to delete\nassignments and settings that have passed retention time. <br />\nCleanup Service Activation interval change will take effect the next time\napplication starts up. <b> or Cleanup Date<\/b> : cleanup date to delete\nassignments and settings that have passed retention time. <br />\nCleanup Date change will take effect the next time application starts up.",
        "operationId" : "resource_Admin_saveOrUpdateProxyAndDeleegationServiceSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ProxyDelSettingsNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input. XSS validation failed.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Invalid input. XSS validation failed."
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while saving proxy configuration.",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Internal exception while saving proxy configuration."
          },
          "201" : {
            "schema" : {
"description" : "Success or failure message for Synchronization and Cleanup\nService configurations.",
"$ref" : "#/definitions/json_ProxyConfigNode"
            },
            "examples" : {
              "application/json" : {
  "proxyNotfTemplate" : "...",
  "proxyRetentionTime" : 12345
}
            },
            "description" : "Success or failure message for Synchronization and Cleanup\nService configurations."
          }
        }
      }
    }
    ,
    "\/drivers" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "The objective of this API is to provide the available NRF Drivers into the application.",
        "description" : "The objective of this API is to provide the available NRF Drivers into the application.\nThis API supports the Searching and Pagination.",
        "operationId" : "resource_Catalog_searchDrivers_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "The (1-based) ordinal of the place to start or resume the search."
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Maximum number of items to return."
          },
          {
            "name" : "type",
            "in" : "query",
            "default" : "2",
            "type" : "integer",
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching for drivers",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "drivers" : [ {
    "id" : "...",
    "name" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "requestFrom" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "requestFrom" : "..."
  } ]
}
            },
            "description" : "Internal exception while searching for drivers"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DriverListNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "drivers" : [ {
    "id" : "...",
    "name" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "requestFrom" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "requestFrom" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/prds" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Retrieves list of PRDs matching search criteria.",
        "description" : "Retrieves list of PRDs matching search criteria",
        "operationId" : "resource_Catalog_searchRequestDefs_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "Column list to fetch"
          },
          {
            "name" : "forceRefresh",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need force refresh?"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "From index"
          },
          {
            "name" : "noCache",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need to use cache?"
          },
          {
            "name" : "processType",
            "in" : "query",
            "type" : "string",
            "description" : "Process type"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Order of sorting"
          },
          {
            "name" : "token",
            "in" : "query",
            "type" : "string",
            "description" : "Token"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching process requst definition",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "requestDefs" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "..."
  } ],
  "nextIndex" : 12345,
  "token" : "..."
}
            },
            "description" : "Internal exception while searching process requst definition"
          },
          "200" : {
            "schema" : {
"description" : "PRDs",
"$ref" : "#/definitions/json_RequestDefsLookUpListNode"
            },
            "examples" : {
              "application/json" : {
  "requestDefs" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "..."
  } ],
  "nextIndex" : 12345,
  "token" : "..."
}
            },
            "description" : "PRDs"
          }
        }
      }
    }
    ,
    "\/resourceCategories" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Search categories.",
        "description" : "Search categories",
        "operationId" : "resource_Catalog_searchCategories_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "forceRefresh",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need force refresh?"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "noCache",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need to use cache?"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "String to search"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Sorting order"
          },
          {
            "name" : "token",
            "in" : "query",
            "type" : "string",
            "description" : "Token"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching for categories",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "token" : "..."
}
            },
            "description" : "Internal exception while searching for categories"
          },
          "200" : {
            "schema" : {
"description" : "Categories",
"$ref" : "#/definitions/json_CategoriesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "token" : "..."
}
            },
            "description" : "Categories"
          }
        }
      }
    }
    ,
    "\/resources" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "To get the resources list corresponding to search criteria.",
        "description" : "To get the resources list corresponding to search criteria.",
        "operationId" : "resource_Catalog_searchResources_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "categoryKeys",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "List of categories to filter the results."
          },
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "List of columns are returned in the response."
          },
          {
            "name" : "fetchEntitlements",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : "true - Include the entitlement values in the resources. false -\nEntitlement values won't be included."
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index."
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Maximum number of results to return."
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "Attribute key against which sorting should be performed"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "OrderBy sequence for sorting. ASC or DESC"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching for resources",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while searching for resources"
          },
          "200" : {
            "schema" : {
"description" : "List of resources.",
"$ref" : "#/definitions/json_ResourcesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "List of resources."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Create a resource with the given details.",
        "description" : "Create a resource with the given details.",
        "operationId" : "resource_Catalog_createResource_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "fromEntitlement",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "- If true, create resource from the given entitlement details. If\nfalse, create resource with the given resource details."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Resource details.",
"$ref" : "#/definitions/json_ResourceNode"
            },
            "description" : "- Resource details."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating resource",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while creating resource"
          },
          "201" : {
            "schema" : {
"description" : "created resource details.",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "created resource details."
          }
        }
      }
    }
    ,
    "\/roleCategories" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Jersey endpoint for Roles Index search.",
        "description" : "Jersey endpoint for Roles Index search.",
        "operationId" : "resource_Catalog_searchCategories_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "The (1-based) ordinal of the place to start or resume the search."
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Maximum number of items to return."
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "Which columns to search."
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "To get the role list corresponding to search criteria.",
        "description" : "To get the role list corresponding to search criteria.",
        "operationId" : "resource_Catalog_searchRoles_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "categoryKeys",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "List of categories to filter the results."
          },
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "List of columns are returned in the response."
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index."
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "roleLevel",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Role level to filter the results."
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Maximum number of results to return."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching for roles",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while searching for roles"
          },
          "200" : {
            "schema" : {
"description" : "List of roles.",
"$ref" : "#/definitions/json_RolesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "List of roles."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Create a role with the given details.",
        "description" : "Create a role with the given details.",
        "operationId" : "resource_Catalog_createRole_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Role details.",
"$ref" : "#/definitions/json_RoleNode"
            },
            "description" : "- Role details."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "requester" : "...",
  "approval" : {
    "startTime" : 12345,
    "endTime" : 12345,
    "processId" : "...",
    "sodJustification" : "...",
    "activities" : [ {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    }, {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    } ]
  },
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "revokeRequestDef" : "...",
  "approvalApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalQuorum" : "...",
  "level" : 12345,
  "roleLevel" : {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  },
  "subContainer" : "...",
  "approvalIsStandard" : true,
  "approvalRequired" : true,
  "revokeRequired" : true,
  "requestDescription" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "status" : 12345,
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating role",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "requester" : "...",
  "approval" : {
    "startTime" : 12345,
    "endTime" : 12345,
    "processId" : "...",
    "sodJustification" : "...",
    "activities" : [ {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    }, {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    } ]
  },
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "revokeRequestDef" : "...",
  "approvalApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalQuorum" : "...",
  "level" : 12345,
  "roleLevel" : {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  },
  "subContainer" : "...",
  "approvalIsStandard" : true,
  "approvalRequired" : true,
  "revokeRequired" : true,
  "requestDescription" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "status" : 12345,
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ]
}
            },
            "description" : "Internal exception while creating role"
          },
          "201" : {
            "schema" : {
"description" : "created role details.",
"$ref" : "#/definitions/json_RoleNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "requester" : "...",
  "approval" : {
    "startTime" : 12345,
    "endTime" : 12345,
    "processId" : "...",
    "sodJustification" : "...",
    "activities" : [ {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    }, {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    } ]
  },
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "revokeRequestDef" : "...",
  "approvalApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalQuorum" : "...",
  "level" : 12345,
  "roleLevel" : {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  },
  "subContainer" : "...",
  "approvalIsStandard" : true,
  "approvalRequired" : true,
  "revokeRequired" : true,
  "requestDescription" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "status" : 12345,
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ]
}
            },
            "description" : "created role details."
          }
        }
      }
    }
    ,
    "\/sods" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "list all Sods Available.",
        "description" : "list all Sods Available",
        "operationId" : "resource_Catalog_searchSods_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "--order of sorting either dsc or asc"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Rest endpoint for Creating a Sod.",
        "description" : "Rest endpoint for Creating a Sod",
        "operationId" : "resource_Catalog_createSod_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "JaxBNode input payload for reate sod",
"$ref" : "#/definitions/json_SodNode"
            },
            "description" : "JaxBNode input payload for reate sod"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "roleLevel" : "...",
  "sodApprovalType" : "allowWithWorkflow",
  "isDefaultApproversUsed" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "approvalQuorum" : "...",
  "hasConflicts" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating SOD",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "roleLevel" : "...",
  "sodApprovalType" : "allowWithWorkflow",
  "isDefaultApproversUsed" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "approvalQuorum" : "...",
  "hasConflicts" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ]
}
            },
            "description" : "Internal exception while creating SOD"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SodNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "roleLevel" : "...",
  "sodApprovalType" : "allowWithWorkflow",
  "isDefaultApproversUsed" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "approvalQuorum" : "...",
  "hasConflicts" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/uas" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Service which returns the logged in user domain type.",
        "description" : "Service which returns the logged in user domain type",
        "operationId" : "resource_Catalog_getDomainTypeOfLoggedInUser_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Search users - retrieves list of users matching search criteria.",
        "description" : "Search users - retrieves list of users matching search criteria",
        "operationId" : "resource_Catalog_searchUsers_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "forceRefresh",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need force refresh?"
          },
          {
            "name" : "limit",
            "in" : "query",
            "default" : "-1",
            "type" : "integer",
            "description" : "Search limit"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "noCache",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "Need to use cache?"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records to show in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "FirstName",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Sorting order"
          },
          {
            "name" : "token",
            "in" : "query",
            "type" : "string",
            "description" : "Token"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while searching for user`s",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "users" : [ {
    "id" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "cn" : "..."
  }, {
    "id" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "cn" : "..."
  } ],
  "nextIndex" : 12345,
  "token" : "...",
  "reason" : "...",
  "arraySize" : 12345
}
            },
            "description" : "Internal exception while searching for user`s"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_UserListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "users" : [ {
    "id" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "cn" : "..."
  }, {
    "id" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "cn" : "..."
  } ],
  "nextIndex" : 12345,
  "token" : "...",
  "reason" : "...",
  "arraySize" : 12345
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/administration/roleResourceSettings" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Get all configuration related to roles and resources settings.",
        "description" : "Get all configuration related to roles and resources settings",
        "operationId" : "resource_Catalog_getRolesResourcesSettings_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting roles and resource setting configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "roleRequestContainer" : "...",
  "defaultRoleRequestDef" : "...",
  "roleAssignmentGracePeriod" : 12345,
  "roleLevels" : [ {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  }, {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  } ],
  "resourceContainer" : "...",
  "resourceRequestContainer" : "...",
  "defaultResourceGrantRequestDef" : "...",
  "defaultResourceRevokeRequestDef" : "...",
  "queryTimeout" : 12345,
  "queryRefreshRate" : 12345,
  "concatDisplayElements" : true,
  "queryDisplayElements" : [ "...", "..." ],
  "sodContainer" : "...",
  "defaultSODRequestDef" : "...",
  "defaultSODRequestDefName" : "...",
  "sodQuorum" : "...",
  "sodApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "reportContainer" : "...",
  "roleToRoleApproval" : true,
  "roleToGroupApproval" : true,
  "roleToContainerApproval" : true,
  "roleContainer" : "..."
}
            },
            "description" : "Internal exception while getting roles and resource setting configuration"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RoleResourceSettingsNode"
            },
            "examples" : {
              "application/json" : {
  "roleRequestContainer" : "...",
  "defaultRoleRequestDef" : "...",
  "roleAssignmentGracePeriod" : 12345,
  "roleLevels" : [ {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  }, {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  } ],
  "resourceContainer" : "...",
  "resourceRequestContainer" : "...",
  "defaultResourceGrantRequestDef" : "...",
  "defaultResourceRevokeRequestDef" : "...",
  "queryTimeout" : 12345,
  "queryRefreshRate" : 12345,
  "concatDisplayElements" : true,
  "queryDisplayElements" : [ "...", "..." ],
  "sodContainer" : "...",
  "defaultSODRequestDef" : "...",
  "defaultSODRequestDefName" : "...",
  "sodQuorum" : "...",
  "sodApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "reportContainer" : "...",
  "roleToRoleApproval" : true,
  "roleToGroupApproval" : true,
  "roleToContainerApproval" : true,
  "roleContainer" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/codemaprefresh/driver" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Driver refresh of connected systems.",
        "description" : "Driver refresh of connected systems",
        "operationId" : "resource_Catalog_driverRefresh_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- List of driver node details",
"$ref" : "#/definitions/json_DriverListNode"
            },
            "description" : "- List of driver node details"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "Driver refresh is in progress",
"$ref" : "#/definitions/json_CodeMapRefreshResponseNode"
            },
            "examples" : {
              "application/json" : {
  "refreshStatus" : {
    "id" : "...",
    "reason" : "..."
  }
}
            },
            "description" : "Driver refresh is in progress"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while performing driver refresh",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "refreshStatus" : {
    "id" : "...",
    "reason" : "..."
  }
}
            },
            "description" : "Internal exception while performing driver refresh"
          }
        }
      }
    }
    ,
    "\/codemaprefresh/entitlement" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "List of entitlements from connected systems, which need to refresh.",
        "description" : "List of entitlements from connected systems, which need to refresh.",
        "operationId" : "resource_Catalog_entitlementRefresh_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of Entitlements.",
"$ref" : "#/definitions/json_EntitlementListNode"
            },
            "description" : "List of Entitlements."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "Code Map refresh is in progress",
"$ref" : "#/definitions/json_CodeMapRefreshResponseNode"
            },
            "examples" : {
              "application/json" : {
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "id" : "...",
  "viewID" : "..."
}
            },
            "description" : "Code Map refresh is in progress"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while performing code map refresh",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "id" : "...",
  "viewID" : "..."
}
            },
            "description" : "Internal exception while performing code map refresh"
          }
        }
      }
    }
    ,
    "\/delegatedAdmin/rights" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "description" : "",
        "operationId" : "resource_Catalog_getLoggedInDelgatedAdminConfigurationRights_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionListNode_nodes"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "opertionPermissionMap" : [ {
    "permissionDn" : "...",
    "operationAccessMap" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "permissionDn" : "...",
    "operationAccessMap" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting permission assignments to user",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "opertionPermissionMap" : [ {
    "permissionDn" : "...",
    "operationAccessMap" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "permissionDn" : "...",
    "operationAccessMap" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while getting permission assignments to user"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DelgatedAdminRightsList"
            },
            "examples" : {
              "application/json" : {
  "opertionPermissionMap" : [ {
    "permissionDn" : "...",
    "operationAccessMap" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "permissionDn" : "...",
    "operationAccessMap" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/drivers/driver" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "The objective of this API is to provide the entitlement details of a specific NRF driver.",
        "description" : "The objective of this API is to provide the entitlement details of a specific NRF driver.\nThis API takes the NRF driver details as input param.\nThen extract the driver-dn, and use the same driver-dn to fetch the entitlement dns.\nThen it uses entitlement-dns to fetch the entitlement details.\nFinally send back these entitlement details as response.",
        "operationId" : "resource_Catalog_getDriverDetail_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "cprsSupported",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Driver and Entitlement details",
"$ref" : "#/definitions/json_DriverNode"
            },
            "description" : "Driver and Entitlement details"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "requestFrom" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting driver details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "requestFrom" : "..."
}
            },
            "description" : "Internal exception while getting driver details"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_DriverNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "requestFrom" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/entitlements/entitlementInfo" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Get entitlement configuration.",
        "description" : "Get entitlement configuration",
        "operationId" : "resource_Catalog_getEntitlementConfiguration_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "entilementDN",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "Entitlement DN"
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting entitlement configuration",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "displayName" : "...",
  "description" : "...",
  "isMultiValue" : true,
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "type" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "type" : "..."
  } ],
  "type" : "QUERY",
  "paramTypes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "isResourceMappingEnabled" : true
}
            },
            "description" : "Internal exception while getting entitlement configuration"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementDetails"
            },
            "examples" : {
              "application/json" : {
  "dn" : "...",
  "displayName" : "...",
  "description" : "...",
  "isMultiValue" : true,
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "type" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "type" : "..."
  } ],
  "type" : "FREE_FORM",
  "paramTypes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "isResourceMappingEnabled" : true
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/entitlements/entitlementValues" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Get entitlement view values by type.",
        "description" : "Get entitlement view values by type",
        "operationId" : "resource_Catalog_getEntitlementViewValuesByTypes_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementViewValueRequestNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting entitlement view values by type",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting entitlement view values by type"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementValueListNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/entitlements/resources" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Get resource entitlements.",
        "description" : "Get resource entitlements",
        "operationId" : "resource_Catalog_getResources_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementListNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting resource entitlements",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting resource entitlements"
          },
          "201" : {
            "schema" : {
"description" : "- Resources",
"$ref" : "#/definitions/json_ResourcesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "- Resources"
          }
        }
      }
    }
    ,
    "\/entitlements/tempResources" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "description" : "",
        "operationId" : "resource_Catalog_getTempResources_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementListNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "- Resources",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "- Resources"
          }
        }
      }
    }
    ,
    "\/resources/category" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Create resource category.",
        "description" : "Create resource category",
        "operationId" : "resource_Catalog_createResourceCategory_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "category details.",
"$ref" : "#/definitions/json_CategoryNode"
            },
            "description" : "category details."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating resource category",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while creating resource category"
          },
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/resources/driverResources" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "To get the list of resources corresponding to search criteria for the\ngiven driver DN.",
        "description" : "To get the list of resources corresponding to search criteria for the\ngiven driver DN.",
        "operationId" : "resource_Catalog_getResourcesByDriver_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "entitlementId",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "logicalSystem",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "managedBy",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index of the page to be listed"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "resourceType",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Number of results needs to be returned."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input payload which holds the driver DN, whose resources needs to\nget.",
"$ref" : "#/definitions/json_DriverNode"
            },
            "description" : "Input payload which holds the driver DN, whose resources needs to\nget."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting resource details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting resource details"
          },
          "201" : {
            "schema" : {
"description" : "List of resources.",
"$ref" : "#/definitions/json_ResourcesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "List of resources."
          }
        }
      }
    }
    ,
    "\/resources/list" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Jersey endpoint for Resources Index search.",
        "description" : "Jersey endpoint for Resources Index search.",
        "operationId" : "resource_Catalog_getResourceList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "categoryKeys",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "Which columns to search."
          },
          {
            "name" : "fetchEntitlements",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "The (1-based) ordinal of the place to start or resume the search."
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Maximum number of items to return."
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/resources/listV2" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Jersey endpoint for Resources Index search.",
        "description" : "Jersey endpoint for Resources Index search.",
        "operationId" : "resource_Catalog_getResourceListV2_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "categoryKeys",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "Which columns to search."
          },
          {
            "name" : "desc",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "fetchDriverInfo",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "fetchEntitlements",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "fetchResourceParams",
            "in" : "query",
            "default" : "false",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "name",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "The (1-based) ordinal of the place to start or resume the search."
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Maximum number of items to return."
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/resources/resource" : {
      "delete" : {
        "tags" : [ "Catalog" ],
        "summary" : "Delete the list of given resources.",
        "description" : "Delete the list of given resources.",
        "operationId" : "resource_Catalog_deleteResources_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Input payload which holds the list of resources DN, which needs\nto remove.",
"$ref" : "#/definitions/json_ResourcesListResponseNode"
            },
            "description" : "- Input payload which holds the list of resources DN, which needs\nto remove."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting resources",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting resources"
          },
          "204" : {
            "schema" : {
"description" : "Success or failure or partially success with resource DNs.",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Success or failure or partially success with resource DNs."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "To get the list of resource details for the given list of resources.",
        "description" : "To get the list of resource details for the given list of resources.",
        "operationId" : "resource_Catalog_getResourceDetails_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of resources.",
"$ref" : "#/definitions/json_ResourcesListResponseNode"
            },
            "description" : "List of resources."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting resource details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting resource details"
          },
          "201" : {
            "schema" : {
"description" : "List of resource details.",
"$ref" : "#/definitions/json_ResourcesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "List of resource details."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Catalog" ],
        "summary" : "Update the resource with the changed information.",
        "description" : "Update the resource with the changed information.",
        "operationId" : "resource_Catalog_updateResource_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Input payload which holds the updated resource information.",
"$ref" : "#/definitions/json_ResourceNode"
            },
            "description" : "- Input payload which holds the updated resource information."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "driver" : "...",
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "subContainer" : "...",
  "approvalOverRide" : true,
  "approvalRequired" : true,
  "approvalIsStandard" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "requestDef" : "...",
  "requestDefName" : "...",
  "quorum" : "...",
  "revokeRequired" : true,
  "revokeEqualsGrant" : true,
  "revokeApprovalIsStandard" : true,
  "revokeApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "revokeRequestDef" : "...",
  "revokeRequestDefName" : "...",
  "revokeQuorum" : "...",
  "provisioningRequestDef" : "...",
  "mappingDescription" : "...",
  "status" : "...",
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ],
  "resourceParameters" : [ {
    "id" : "...",
    "multiValue" : true,
    "scope" : "...",
    "binding" : "...",
    "codeMapKey" : "...",
    "localizedDisplayValues" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "type" : "...",
    "displayValue" : "...",
    "entitlementDn" : "...",
    "staticValue" : "...",
    "value" : "...",
    "instance" : true,
    "hide" : true
  }, {
    "id" : "...",
    "multiValue" : true,
    "scope" : "...",
    "binding" : "...",
    "codeMapKey" : "...",
    "localizedDisplayValues" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "type" : "...",
    "displayValue" : "...",
    "entitlementDn" : "...",
    "staticValue" : "...",
    "value" : "...",
    "instance" : true,
    "hide" : true
  } ],
  "isActive" : true,
  "allowMultiple" : true,
  "isExisted" : true,
  "entityKey" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ],
  "managedBy" : 12345,
  "expiresAfter" : "...",
  "isExpirationRequired" : true,
  "resourceWeightage" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating resource",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "driver" : "...",
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "subContainer" : "...",
  "approvalOverRide" : true,
  "approvalRequired" : true,
  "approvalIsStandard" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "requestDef" : "...",
  "requestDefName" : "...",
  "quorum" : "...",
  "revokeRequired" : true,
  "revokeEqualsGrant" : true,
  "revokeApprovalIsStandard" : true,
  "revokeApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "revokeRequestDef" : "...",
  "revokeRequestDefName" : "...",
  "revokeQuorum" : "...",
  "provisioningRequestDef" : "...",
  "mappingDescription" : "...",
  "status" : "...",
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ],
  "resourceParameters" : [ {
    "id" : "...",
    "multiValue" : true,
    "scope" : "...",
    "binding" : "...",
    "codeMapKey" : "...",
    "localizedDisplayValues" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "type" : "...",
    "displayValue" : "...",
    "entitlementDn" : "...",
    "staticValue" : "...",
    "value" : "...",
    "instance" : true,
    "hide" : true
  }, {
    "id" : "...",
    "multiValue" : true,
    "scope" : "...",
    "binding" : "...",
    "codeMapKey" : "...",
    "localizedDisplayValues" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "type" : "...",
    "displayValue" : "...",
    "entitlementDn" : "...",
    "staticValue" : "...",
    "value" : "...",
    "instance" : true,
    "hide" : true
  } ],
  "isActive" : true,
  "allowMultiple" : true,
  "isExisted" : true,
  "entityKey" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ],
  "managedBy" : 12345,
  "expiresAfter" : "...",
  "isExpirationRequired" : true,
  "resourceWeightage" : "..."
}
            },
            "description" : "Internal exception while updating resource"
          },
          "204" : {
            "schema" : {
"description" : "updated resource object.",
"$ref" : "#/definitions/json_ResourceNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "driver" : "...",
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "subContainer" : "...",
  "approvalOverRide" : true,
  "approvalRequired" : true,
  "approvalIsStandard" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "requestDef" : "...",
  "requestDefName" : "...",
  "quorum" : "...",
  "revokeRequired" : true,
  "revokeEqualsGrant" : true,
  "revokeApprovalIsStandard" : true,
  "revokeApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "revokeRequestDef" : "...",
  "revokeRequestDefName" : "...",
  "revokeQuorum" : "...",
  "provisioningRequestDef" : "...",
  "mappingDescription" : "...",
  "status" : "...",
  "entitlements" : [ {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  }, {
    "id" : "...",
    "displayName" : "...",
    "description" : "...",
    "parameter" : "...",
    "parameterName" : "...",
    "parameterValue" : "...",
    "paramDescription" : "...",
    "correlationId" : "...",
    "requestAgent" : "...",
    "action" : 12345,
    "isSingleValued" : true,
    "driverName" : "...",
    "parameters" : [ "...", "..." ],
    "paramLogicSystem" : "...",
    "paramType" : "...",
    "isInvalidValue" : true,
    "entitlementType" : "...",
    "resourceName" : "...",
    "resourceCN" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "type" : "..."
    } ],
    "paramTypes" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ]
  } ],
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ],
  "resourceParameters" : [ {
    "id" : "...",
    "multiValue" : true,
    "scope" : "...",
    "binding" : "...",
    "codeMapKey" : "...",
    "localizedDisplayValues" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "type" : "...",
    "displayValue" : "...",
    "entitlementDn" : "...",
    "staticValue" : "...",
    "value" : "...",
    "instance" : true,
    "hide" : true
  }, {
    "id" : "...",
    "multiValue" : true,
    "scope" : "...",
    "binding" : "...",
    "codeMapKey" : "...",
    "localizedDisplayValues" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "type" : "...",
    "displayValue" : "...",
    "entitlementDn" : "...",
    "staticValue" : "...",
    "value" : "...",
    "instance" : true,
    "hide" : true
  } ],
  "isActive" : true,
  "allowMultiple" : true,
  "isExisted" : true,
  "entityKey" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ],
  "managedBy" : 12345,
  "expiresAfter" : "...",
  "isExpirationRequired" : true,
  "resourceWeightage" : "..."
}
            },
            "description" : "updated resource object."
          }
        }
      }
    }
    ,
    "\/resources/resourceV2" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "description" : "",
        "operationId" : "resource_Catalog_fetchResourceDetails_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "entityType",
            "in" : "query",
            "default" : "resource",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ResourcesListResponseNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/resources/resources" : {
      "put" : {
        "tags" : [ "Catalog" ],
        "summary" : "To update the list of resources with the changed information.",
        "description" : "To update the list of resources with the changed information. It can\nupdate the resource weightage with allowed values (100, 200, 300, 400,\n500).",
        "operationId" : "resource_Catalog_updateResources_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Input payload which holds the list of resources with the changed\ninformation.",
"$ref" : "#/definitions/json_ResourcesListResponseNode"
            },
            "description" : "- Input payload which holds the list of resources with the changed\ninformation."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating  resources",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while updating  resources"
          },
          "204" : {
            "schema" : {
"description" : "Success or failure or partially success with resources DN.",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Success or failure or partially success with resources DN."
          }
        }
      }
    }
    ,
    "\/resources/validateResourceNames" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Check the given resource names are in use.",
        "description" : "Check the given resource names are in use.",
        "operationId" : "resource_Catalog_isResourceNameUsed_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of resource names.",
"$ref" : "#/definitions/json_ResourceNameNode"
            },
            "description" : "List of resource names."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while checking resource name is in use",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "arraySize" : 12345,
  "resources" : [ {
    "name" : "...",
    "isNameExist" : true,
    "suggestedName" : "...",
    "resourceNames" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    } ]
  }, {
    "name" : "...",
    "isNameExist" : true,
    "suggestedName" : "...",
    "resourceNames" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    } ]
  } ]
}
            },
            "description" : "Internal exception while checking resource name is in use"
          },
          "201" : {
            "schema" : {
"description" : "List of resource names with suggested names.",
"$ref" : "#/definitions/json_ResourceNameListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "arraySize" : 12345,
  "resources" : [ {
    "name" : "...",
    "isNameExist" : true,
    "suggestedName" : "...",
    "resourceNames" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    } ]
  }, {
    "name" : "...",
    "isNameExist" : true,
    "suggestedName" : "...",
    "resourceNames" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "driver" : "...",
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "subContainer" : "...",
      "approvalOverRide" : true,
      "approvalRequired" : true,
      "approvalIsStandard" : true,
      "approvers" : [ { }, { } ],
      "requestDef" : "...",
      "requestDefName" : "...",
      "quorum" : "...",
      "revokeRequired" : true,
      "revokeEqualsGrant" : true,
      "revokeApprovalIsStandard" : true,
      "revokeApprovers" : [ { }, { } ],
      "revokeRequestDef" : "...",
      "revokeRequestDefName" : "...",
      "revokeQuorum" : "...",
      "provisioningRequestDef" : "...",
      "mappingDescription" : "...",
      "status" : "...",
      "entitlements" : [ { }, { } ],
      "entitlementValues" : [ { }, { } ],
      "resourceParameters" : [ { }, { } ],
      "isActive" : true,
      "allowMultiple" : true,
      "isExisted" : true,
      "entityKey" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ],
      "managedBy" : 12345,
      "expiresAfter" : "...",
      "isExpirationRequired" : true,
      "resourceWeightage" : "..."
    } ]
  } ]
}
            },
            "description" : "List of resource names with suggested names."
          }
        }
      }
    }
    ,
    "\/resources/views" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "description" : "",
        "operationId" : "resource_Catalog_getCodeMapViews_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/levels" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Jersey endpoint for fetching Role levels.",
        "description" : "Jersey endpoint for fetching Role levels.",
        "operationId" : "resource_Catalog_getRoleLevels_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "list of Role Levels.",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "list of Role Levels."
          }
        }
      }
    }
    ,
    "\/roles/list" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Jersey endpoint for Roles Index search.",
        "description" : "Jersey endpoint for Roles Index search.",
        "operationId" : "resource_Catalog_getRoleList_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "categoryKeys",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "Which columns to search."
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "The (1-based) ordinal of the place to start or resume the search."
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "roleLevel",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Maximum number of items to return."
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/listV2" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Jersey endpoint for Roles Index search.",
        "description" : "Jersey endpoint for Roles Index search.",
        "operationId" : "resource_Catalog_getRoleListV2_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "categoryKeys",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "Which columns to search."
          },
          {
            "name" : "desc",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "name",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "The (1-based) ordinal of the place to start or resume the search."
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "roleLevel",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Maximum number of items to return."
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/mappedResources" : {
      "delete" : {
        "tags" : [ "Catalog" ],
        "summary" : "To delete the resources mapping from the given role DN.",
        "description" : "To delete the resources mapping from the given role DN.",
        "operationId" : "resource_Catalog_deleteMappedResources_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input payload which holds the role DN and list of mapped resources\nwhich needs to remove from the given role.",
"$ref" : "#/definitions/json_ResourceMappingRequestNode"
            },
            "description" : "Input payload which holds the role DN and list of mapped resources\nwhich needs to remove from the given role."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting mapped resources",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting mapped resources"
          },
          "204" : {
            "schema" : {
"description" : "Success or failure or partially success with resources DN.",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Success or failure or partially success with resources DN."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "To map a list of resources for the given role DN.",
        "description" : "To map a list of resources for the given role DN.",
        "operationId" : "resource_Catalog_createMappedResource_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Input payload which holds the role DN and resources which needs\nto map for the given role.",
"$ref" : "#/definitions/json_ResourceMappingRequestNode"
            },
            "description" : "- Input payload which holds the role DN and resources which needs\nto map for the given role."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating mapped resources",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while creating mapped resources"
          },
          "201" : {
            "schema" : {
"description" : "Success or failure or partially success with resources DN.",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Success or failure or partially success with resources DN."
          }
        }
      }
    }
    ,
    "\/roles/parentRoles" : {
      "delete" : {
        "tags" : [ "Catalog" ],
        "summary" : "API Objective: Delete parent roles to a given role.",
        "description" : "API Objective: Delete parent roles to a given role.",
        "operationId" : "resource_Catalog_deleteParentRoles_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SubRolesListRequestNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating sub roles",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while creating sub roles"
          },
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "API Objective: Map parent roles to a given role.",
        "description" : "API Objective: Map parent roles to a given role.",
        "operationId" : "resource_Catalog_parentRoleMapping_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Requested role mapping detail.",
"$ref" : "#/definitions/json_SubRolesListRequestNode"
            },
            "description" : "Requested role mapping detail."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating sub roles",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while creating sub roles"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/role" : {
      "delete" : {
        "tags" : [ "Catalog" ],
        "summary" : "Delete the list of given roles.",
        "description" : "Delete the list of given roles.",
        "operationId" : "resource_Catalog_deleteRoles_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RolesListResponseNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting roles",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting roles"
          },
          "204" : {
            "schema" : {
"description" : "Success or failure or partially success with role DNs.",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Success or failure or partially success with role DNs."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "To get the list of role details for the given list of roles.",
        "description" : "To get the list of role details for the given list of roles.",
        "operationId" : "resource_Catalog_getRoleDetail_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of roles.",
"$ref" : "#/definitions/json_RolesListResponseNode"
            },
            "description" : "List of roles."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting role details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while getting role details"
          },
          "201" : {
            "schema" : {
"description" : "List of role details.",
"$ref" : "#/definitions/json_RolesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "List of role details."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Catalog" ],
        "summary" : "Update the role with the changed information.",
        "description" : "Update the role with the changed information.",
        "operationId" : "resource_Catalog_updateRole_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Input payload which holds the updated role information.",
"$ref" : "#/definitions/json_RoleNode"
            },
            "description" : "- Input payload which holds the updated role information."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "requester" : "...",
  "approval" : {
    "startTime" : 12345,
    "endTime" : 12345,
    "processId" : "...",
    "sodJustification" : "...",
    "activities" : [ {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    }, {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    } ]
  },
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "revokeRequestDef" : "...",
  "approvalApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalQuorum" : "...",
  "level" : 12345,
  "roleLevel" : {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  },
  "subContainer" : "...",
  "approvalIsStandard" : true,
  "approvalRequired" : true,
  "revokeRequired" : true,
  "requestDescription" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "status" : 12345,
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating role",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "requester" : "...",
  "approval" : {
    "startTime" : 12345,
    "endTime" : 12345,
    "processId" : "...",
    "sodJustification" : "...",
    "activities" : [ {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    }, {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    } ]
  },
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "revokeRequestDef" : "...",
  "approvalApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalQuorum" : "...",
  "level" : 12345,
  "roleLevel" : {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  },
  "subContainer" : "...",
  "approvalIsStandard" : true,
  "approvalRequired" : true,
  "revokeRequired" : true,
  "requestDescription" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "status" : 12345,
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ]
}
            },
            "description" : "Internal exception while updating role"
          },
          "204" : {
            "schema" : {
"description" : "updated role object.",
"$ref" : "#/definitions/json_RoleNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "requester" : "...",
  "approval" : {
    "startTime" : 12345,
    "endTime" : 12345,
    "processId" : "...",
    "sodJustification" : "...",
    "activities" : [ {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    }, {
      "user" : "...",
      "activity_action" : "...",
      "actionTime" : 12345
    } ]
  },
  "categories" : [ {
    "id" : "...",
    "name" : "..."
  }, {
    "id" : "...",
    "name" : "..."
  } ],
  "owners" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "..."
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "revokeRequestDef" : "...",
  "approvalApprovers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalQuorum" : "...",
  "level" : 12345,
  "roleLevel" : {
    "name" : "...",
    "level" : 12345,
    "cn" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ]
  },
  "subContainer" : "...",
  "approvalIsStandard" : true,
  "approvalRequired" : true,
  "revokeRequired" : true,
  "requestDescription" : "...",
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ],
  "status" : 12345,
  "otherAttributes" : [ {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  }, {
    "key" : "...",
    "displayLabel" : "...",
    "attributeValues" : [ { }, { } ],
    "dataType" : "...",
    "isSearchable" : true,
    "isSortable" : true,
    "isRequired" : true,
    "isEditable" : true,
    "isMultivalued" : true,
    "isHideable" : true,
    "isClickable" : true,
    "formatType" : "...",
    "choiceList" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "controlType" : "...",
    "lookupEntity" : "...",
    "lookupAttributes" : [ {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    }, {
      "lookupAttrKey" : "...",
      "lookupAttrValue" : [ "...", "..." ],
      "key" : "...",
      "displayLabel" : "..."
    } ]
  } ],
  "otherModifiedAttributes" : [ {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  }, {
    "name" : "...",
    "key" : "...",
    "dataType" : "...",
    "isMultivalued" : true,
    "isEditable" : true,
    "values" : [ "...", "..." ]
  } ]
}
            },
            "description" : "updated role object."
          }
        }
      }
    }
    ,
    "\/roles/roleV2" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "description" : "",
        "operationId" : "resource_Catalog_fetchRoleDetail_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "entityType",
            "in" : "query",
            "default" : "role",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_RolesListResponseNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles" : {
      "put" : {
        "tags" : [ "Catalog" ],
        "summary" : "To update the list of roles with the changed information.",
        "description" : "To update the list of roles with the changed information.",
        "operationId" : "resource_Catalog_updateRoles_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Input payload which holds the list of roles with the changed\ninformation.",
"$ref" : "#/definitions/json_RolesListResponseNode"
            },
            "description" : "- Input payload which holds the list of roles with the changed\ninformation."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating roles",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while updating roles"
          },
          "204" : {
            "schema" : {
"description" : "Success or failure or partially success with roles DN.",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Success or failure or partially success with roles DN."
          }
        }
      }
    }
    ,
    "\/roles/subRoles" : {
      "delete" : {
        "tags" : [ "Catalog" ],
        "summary" : "Delete child roles for the given role DN.",
        "description" : "Delete child roles for the given role DN.",
        "operationId" : "resource_Catalog_deleteSubRoles_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SubRolesListRequestNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting sub roles",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting sub roles"
          },
          "204" : {
            "schema" : {
"description" : "Success or failure or partially success response with child roles\nDN.",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Success or failure or partially success response with child roles\nDN."
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Assign child roles for the given role.",
        "description" : "Assign child roles for the given role.",
        "operationId" : "resource_Catalog_createSubRole_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "List of child roles and the parent role DN.",
"$ref" : "#/definitions/json_SubRolesListRequestNode"
            },
            "description" : "List of child roles and the parent role DN."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while creating sub roles",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while creating sub roles"
          },
          "201" : {
            "schema" : {
"description" : "Success or failure or partially success response with child roles\nDN.",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Success or failure or partially success response with child roles\nDN."
          }
        }
      }
    }
    ,
    "\/sods/defaultApprovals" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Rest End point to fetch default Approver details for SOD created under given container.",
        "description" : "Rest End point to fetch default Approver details for SOD created under given container<br>",
        "operationId" : "resource_Catalog_getSodApprovalDetailsFromConfig_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "roleLevel" : "...",
  "sodApprovalType" : "alwaysAllow",
  "isDefaultApproversUsed" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "approvalQuorum" : "...",
  "hasConflicts" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting SOD approval details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "roleLevel" : "...",
  "sodApprovalType" : "allowWithWorkflow",
  "isDefaultApproversUsed" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "approvalQuorum" : "...",
  "hasConflicts" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting SOD approval details"
          },
          "200" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SodNode"
            },
            "examples" : {
              "application/json" : {
  "id" : "...",
  "name" : "...",
  "description" : "...",
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "roleLevel" : "...",
  "sodApprovalType" : "alwaysAllow",
  "isDefaultApproversUsed" : true,
  "approvers" : [ {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  }, {
    "id" : "...",
    "name" : "...",
    "type" : "...",
    "sequence" : 12345
  } ],
  "approvalRequestDef" : "...",
  "approvalRequestDefName" : "...",
  "approvalQuorum" : "...",
  "hasConflicts" : true,
  "localizedNames" : [ {
    "locale" : "...",
    "name" : "..."
  }, {
    "locale" : "...",
    "name" : "..."
  } ],
  "localizedDescriptions" : [ {
    "locale" : "...",
    "desc" : "..."
  }, {
    "locale" : "...",
    "desc" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/sods/sod" : {
      "delete" : {
        "tags" : [ "Catalog" ],
        "summary" : "Rest End point to delete SOD, supports multiple sod deletion.",
        "description" : "Rest End point to delete SOD, supports multiple sod deletion",
        "operationId" : "resource_Catalog_deleteSods_DELETE",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "JAXB input node which holds sod details",
"$ref" : "#/definitions/json_SodsListResponseNode"
            },
            "description" : "JAXB input node which holds sod details"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while deleting SOD",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : "Internal exception while deleting SOD"
          },
          "204" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ResponseListNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "success" : true,
  "succeeded" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "failed" : [ {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  }, {
    "id" : "...",
    "entityType" : "...",
    "reason" : "...",
    "instanceId" : "...",
    "requestId" : "...",
    "errCode" : "...",
    "name" : "...",
    "dn" : "...",
    "retry" : true,
    "revokeFrom" : "...",
    "assignFromUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "assignToUsers" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ]
  } ],
  "sods" : [ {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  }, {
    "sodId" : "...",
    "sodName" : "...",
    "sodDescription" : "...",
    "perm1Name" : "...",
    "perm2Name" : "...",
    "userList" : [ {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    }, {
      "dn" : "...",
      "name" : "...",
      "firstName" : "...",
      "lastName" : "..."
    } ],
    "groupList" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "recipientdn" : "...",
    "recipientname" : "...",
    "inheritedRole" : "..."
  } ]
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "REST end point to fetch SOD complete details, supportes multiple sods search.",
        "description" : "REST end point to fetch SOD complete details, supportes multiple sods search",
        "operationId" : "resource_Catalog_getSodDetails_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Start index for the page"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Page size for pagination"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "JaxB input node which holds sod ID's",
"$ref" : "#/definitions/json_SodsListResponseNode"
            },
            "description" : "JaxB input node which holds sod ID's"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "sods" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "roles" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    } ],
    "roleLevel" : "...",
    "sodApprovalType" : "allowWithWorkflow",
    "isDefaultApproversUsed" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "approvalQuorum" : "...",
    "hasConflicts" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "roles" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    } ],
    "roleLevel" : "...",
    "sodApprovalType" : "allowWithWorkflow",
    "isDefaultApproversUsed" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "approvalQuorum" : "...",
    "hasConflicts" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting SOD details",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "sods" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "roles" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    } ],
    "roleLevel" : "...",
    "sodApprovalType" : "alwaysAllow",
    "isDefaultApproversUsed" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "approvalQuorum" : "...",
    "hasConflicts" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "roles" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    } ],
    "roleLevel" : "...",
    "sodApprovalType" : "allowWithWorkflow",
    "isDefaultApproversUsed" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "approvalQuorum" : "...",
    "hasConflicts" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345
}
            },
            "description" : "Internal exception while getting SOD details"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SodsListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "sods" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "roles" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    } ],
    "roleLevel" : "...",
    "sodApprovalType" : "allowWithWorkflow",
    "isDefaultApproversUsed" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "approvalQuorum" : "...",
    "hasConflicts" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "roles" : [ {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    }, {
      "id" : "...",
      "name" : "...",
      "description" : "...",
      "requester" : "...",
      "approval" : { },
      "categories" : [ { }, { } ],
      "owners" : [ { }, { } ],
      "approvalRequestDef" : "...",
      "approvalRequestDefName" : "...",
      "revokeRequestDef" : "...",
      "approvalApprovers" : [ { }, { } ],
      "approvalQuorum" : "...",
      "level" : 12345,
      "roleLevel" : { },
      "subContainer" : "...",
      "approvalIsStandard" : true,
      "approvalRequired" : true,
      "revokeRequired" : true,
      "requestDescription" : "...",
      "localizedNames" : [ { }, { } ],
      "localizedDescriptions" : [ { }, { } ],
      "status" : 12345,
      "otherAttributes" : [ { }, { } ],
      "otherModifiedAttributes" : [ { }, { } ]
    } ],
    "roleLevel" : "...",
    "sodApprovalType" : "allowWithWorkflow",
    "isDefaultApproversUsed" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "approvalQuorum" : "...",
    "hasConflicts" : true,
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ]
  } ],
  "arraySize" : 12345,
  "nextIndex" : 12345
}
            },
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "Catalog" ],
        "summary" : "Rest endpoint for Updating a Sod.",
        "description" : "Rest endpoint for Updating a Sod",
        "operationId" : "resource_Catalog_updateSod_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_SodNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "status success or failure",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "status success or failure"
          }
        }
      }
    }
    ,
    "\/statistics/cacheinfo" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "It allows Administrator to get the cache information for user\napplication.",
        "description" : "It allows Administrator to get the cache information for user\napplication.<\/br>\nAdministrator can fetch the following information: <\/br>\n<b>cacheArraySize<\/b>: It will give number of cache holder you are using\nin your<\/br>\nuser application.<\/br>\n<b>Name<\/b>: It will display the name of particular cache holder.<\/br>\n<b>Object Count<\/b>: It will give you number of cached objects in\nparticular cache holder.",
        "operationId" : "resource_Catalog_getCacheInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting cache info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "cacheArraySize" : 12345,
  "cacheHolders" : [ {
    "name" : "...",
    "objectCount" : 12345
  }, {
    "name" : "...",
    "objectCount" : 12345
  } ]
}
            },
            "description" : "Internal exception while getting cache info"
          },
          "403" : {
            "schema" : {
"description" : "Unauthorized for this operation",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "cacheArraySize" : 12345,
  "cacheHolders" : [ {
    "name" : "...",
    "objectCount" : 12345
  }, {
    "name" : "...",
    "objectCount" : 12345
  } ]
}
            },
            "description" : "Unauthorized for this operation"
          },
          "200" : {
            "schema" : {
"description" : "Cache information as JSON object",
"$ref" : "#/definitions/json_CacheInfoListResponseNode_nodes"
            },
            "examples" : {
              "application/json" : {
  "cacheArraySize" : 12345,
  "cacheHolders" : [ {
    "name" : "...",
    "objectCount" : 12345
  }, {
    "name" : "...",
    "objectCount" : 12345
  } ]
}
            },
            "description" : "Cache information as JSON object"
          }
        }
      }
    }
    ,
    "\/statistics/clusterinfo" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "It allows administrator to get the cluster related information.",
        "description" : "It allows administrator to get the cluster related information.<\/br>\nYou can get these information using this API. <\/br>\n&bull; Cluster member details such as Name, IP etc. <\/br>\n&bull; Stats on bytes sent and received count across members.<\/br>\n&bull; Member state information<\/br>\n&bull; Dump stats for cluster which will have lot information.<\/br>\n<b>You need to have cluster environment set up ready to access this\ninformation<b>.",
        "operationId" : "resource_Catalog_getClusterInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting cluster info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "clusterName" : "...",
  "sentBytes" : 12345,
  "rcvdBytes" : 12345,
  "sentMessages" : 12345,
  "rcvdMessages" : 12345,
  "localAdrress" : "...",
  "isOpen" : true,
  "isConnected" : true,
  "dumpStats" : "..."
}
            },
            "description" : "Internal exception while getting cluster info"
          },
          "403" : {
            "schema" : {
"description" : "Unauthorized for this operation",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "clusterName" : "...",
  "sentBytes" : 12345,
  "rcvdBytes" : 12345,
  "sentMessages" : 12345,
  "rcvdMessages" : 12345,
  "localAdrress" : "...",
  "isOpen" : true,
  "isConnected" : true,
  "dumpStats" : "..."
}
            },
            "description" : "Unauthorized for this operation"
          },
          "200" : {
            "schema" : {
"description" : "Cluster information as JSON object",
"$ref" : "#/definitions/json_ClusterInfoNode"
            },
            "examples" : {
              "application/json" : {
  "clusterName" : "...",
  "sentBytes" : 12345,
  "rcvdBytes" : 12345,
  "sentMessages" : 12345,
  "rcvdMessages" : 12345,
  "localAdrress" : "...",
  "isOpen" : true,
  "isConnected" : true,
  "dumpStats" : "..."
}
            },
            "description" : "Cluster information as JSON object"
          }
        }
      }
    }
    ,
    "\/statistics/memoryinfo" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "It allows administrator to get memory information regarding given\nmemories.",
        "description" : "It allows administrator to get memory information regarding given\nmemories<\/br>\nJVM Memory Usage, Java Memory Pool Usage,System Memory Usage, Committed\nVirtual Memory Usage.<\/br>\nEach memory component will have four attributes given below.<\/br>\n<b>Name<\/b>: Name of the memory component or memory pool component. <\/br>\n<b>Max Memory<\/b>: Returns the maximum amount of memory in KB that can be\nused for memory management.<\/br>\nThis attribute will have 0 value if the maximum memory size is\nundefined.<\/br>\n<b>Used Memory<\/b>: Returns the amount of used memory in KB.<\/br>\n<b>Free Memory<\/b>: Returns the amount of free memory in KB. This\nattribute will have 0 value if the maximum memory size is undefined.",
        "operationId" : "resource_Catalog_getSystemJVMMemoryInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting JVM memory information",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "jvmMemoryUsage" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "javaMemoryPool" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "systemMemoryUsage" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "commitedVirtualMemory" : 12345
}
            },
            "description" : "Internal exception while getting JVM memory information"
          },
          "403" : {
            "schema" : {
"description" : "Unauthorized for this operation",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "jvmMemoryUsage" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "javaMemoryPool" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "systemMemoryUsage" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "commitedVirtualMemory" : 12345
}
            },
            "description" : "Unauthorized for this operation"
          },
          "200" : {
            "schema" : {
"description" : "JVM and System Memory info as JSON object",
"$ref" : "#/definitions/json_MemoryInfoResponseNode"
            },
            "examples" : {
              "application/json" : {
  "jvmMemoryUsage" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "javaMemoryPool" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "systemMemoryUsage" : [ {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  }, {
    "name" : "...",
    "maxMemory" : 12345,
    "usedMemory" : 12345,
    "freeMemory" : 12345
  } ],
  "commitedVirtualMemory" : 12345
}
            },
            "description" : "JVM and System Memory info as JSON object"
          }
        }
      }
    }
    ,
    "\/statistics/threadinfo" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Administrator can access top CPU consuming threads information by\nconsuming this rest end point.",
        "description" : "Administrator can access top CPU consuming threads information by\nconsuming this rest end point.<\/br>\nEach thread will have given information<br>\n<b>Thread Name<\/b>: Name of the thread. <\/br>\n<b>Thread State<\/b>: It will tell you the current thread state weather it\nis running, waiting or Timed Waiting.<\/br>\n<b>Thread CPU Time<\/b>: It will give you thread CPU time in\nMilliseconds.<\/br>\n<b>Stack Trace<\/b>: It will give you stack trace for the particular\nthread.<\/br>\n<b>Thread Counts<\/b>:It will give thread counts for different thread\nstates like how many runnable threads are there in JVM.",
        "operationId" : "resource_Catalog_getThreadInfo_GET",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "stack",
            "in" : "query",
            "default" : "false",
            "type" : "boolean",
            "description" : "To access the stack trace as well, you can pass stack parameter as\ntrue"
          },
          {
            "name" : "thread-count",
            "in" : "query",
            "default" : "5",
            "type" : "integer",
            "description" : "No of threads to be shown default is 5."
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting thread info",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "topMostCPUConsumingThread" : [ {
    "name" : "...",
    "state" : "...",
    "cpuTimeInMilliSec" : 12345.0,
    "stackTrace" : "..."
  }, {
    "name" : "...",
    "state" : "...",
    "cpuTimeInMilliSec" : 12345.0,
    "stackTrace" : "..."
  } ],
  "threadStateCounts" : [ {
    "state" : "...",
    "count" : 12345
  }, {
    "state" : "...",
    "count" : 12345
  } ]
}
            },
            "description" : "Internal exception while getting thread info"
          },
          "403" : {
            "schema" : {
"description" : "Unauthorized for this operation",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "topMostCPUConsumingThread" : [ {
    "name" : "...",
    "state" : "...",
    "cpuTimeInMilliSec" : 12345.0,
    "stackTrace" : "..."
  }, {
    "name" : "...",
    "state" : "...",
    "cpuTimeInMilliSec" : 12345.0,
    "stackTrace" : "..."
  } ],
  "threadStateCounts" : [ {
    "state" : "...",
    "count" : 12345
  }, {
    "state" : "...",
    "count" : 12345
  } ]
}
            },
            "description" : "Unauthorized for this operation"
          },
          "200" : {
            "schema" : {
"description" : "Top CPU consuming threads info as JSON object",
"$ref" : "#/definitions/json_ThreadInfoResponseNode"
            },
            "examples" : {
              "application/json" : {
  "topMostCPUConsumingThread" : [ {
    "name" : "...",
    "state" : "...",
    "cpuTimeInMilliSec" : 12345.0,
    "stackTrace" : "..."
  }, {
    "name" : "...",
    "state" : "...",
    "cpuTimeInMilliSec" : 12345.0,
    "stackTrace" : "..."
  } ],
  "threadStateCounts" : [ {
    "state" : "...",
    "count" : 12345
  }, {
    "state" : "...",
    "count" : 12345
  } ]
}
            },
            "description" : "Top CPU consuming threads info as JSON object"
          }
        }
      }
    }
    ,
    "\/administration/roleResourceSettings/entitlementQuery" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "API Objective: Update the Entitlement Query Settings in User Application.",
        "description" : "API Objective: Update the Entitlement Query Settings in User Application. This API takes RoleResourceSettingsNode as payload",
        "operationId" : "resource_Catalog_setEntitlementQuerySettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "entitlement query settings to update",
"$ref" : "#/definitions/json_RoleResourceSettingsNode"
            },
            "description" : "entitlement query settings to update"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating entitlement Query settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while updating entitlement Query settings"
          },
          "201" : {
            "schema" : {
"description" : "updated role settings",
"type" : "string"
            },
            "examples" : {
            },
            "description" : "updated role settings"
          }
        }
      }
    }
    ,
    "\/administration/roleResourceSettings/role" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "API Objective: Update the Role Settings in User Application.",
        "description" : "API Objective: Update the Role Settings in User Application. This API takes RoleResourceSettingsNode as payload",
        "operationId" : "resource_Catalog_setRoleSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "role settings to update",
"$ref" : "#/definitions/json_RoleResourceSettingsNode"
            },
            "description" : "role settings to update"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating role settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while updating role settings"
          },
          "201" : {
            "schema" : {
"description" : "updated role settings",
"type" : "string"
            },
            "examples" : {
            },
            "description" : "updated role settings"
          }
        }
      }
    }
    ,
    "\/administration/roleResourceSettings/sod" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "API Objective: Update the SoD Settings in User Application.",
        "description" : "API Objective: Update the SoD Settings in User Application. This API takes RoleResourceSettingsNode as payload",
        "operationId" : "resource_Catalog_setSodSettings_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "sod settings to update",
"$ref" : "#/definitions/json_RoleResourceSettingsNode"
            },
            "description" : "sod settings to update"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while updating sod settings",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while updating sod settings"
          },
          "201" : {
            "schema" : {
"description" : "updated sod settings",
"type" : "string"
            },
            "examples" : {
            },
            "description" : "updated sod settings"
          }
        }
      }
    }
    ,
    "\/drivers/driverEntitlementViewValues/list" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "The objective of this API is to provide the entitlement-values of a corresponding entitlement list.",
        "description" : "The objective of this API is to provide the entitlement-values of a corresponding entitlement list.\nThis API receives the entitlement list as input parameter.\nThen it extract the driver-dn and view-ids, using these two fetch the entitlement-values.",
        "operationId" : "resource_Catalog_getDriverEntitlementViewValues_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementListNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting entitlement view values of a driver",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting entitlement view values of a driver"
          },
          "201" : {
            "schema" : {
"description" : "throws GwtNrfException if problem",
"$ref" : "#/definitions/json_EntitlementValueListNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ]
}
            },
            "description" : "throws GwtNrfException if problem"
          }
        }
      }
    }
    ,
    "\/drivers/driverEntitlementViewValues/listV2" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "returns the entitlement values for given list of view ids.",
        "description" : "returns the entitlement values for given list of view ids",
        "operationId" : "resource_Catalog_getDriverEntitlementViewValuesWithPagination_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "pageSize",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "query",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementListNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "throws GwtNrfException if problem\nthrows RestCatalogValidationException if pagination exception",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "throws GwtNrfException if problem\nthrows RestCatalogValidationException if pagination exception"
          }
        }
      }
    }
    ,
    "\/drivers/entitlementValues/list" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "The objective of this API is to provide the available entitlement-values of a particular driver.",
        "description" : "The objective of this API is to provide the available entitlement-values of a particular driver.\nThis API receives the driver node as an input parameter.\nThen extract the driver-dn from driver node.\nThen it checks the entitlement-values into the cache using that driver-dn.\nIf entitlement-values are not available into the cache then it fetch from the application and cache the same for later use.",
        "operationId" : "resource_Catalog_getDriverEntitlementValues_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Driver details",
"$ref" : "#/definitions/json_DriverNode"
            },
            "description" : "Driver details"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "description" : "...",
  "type" : "...",
  "param" : "...",
  "value" : "...",
  "valueDisplayName" : "...",
  "id" : "...",
  "driver" : "...",
  "entitlementName" : "...",
  "resourceName" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  } ],
  "paramType" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting entitlement values of a driver",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "description" : "...",
  "type" : "...",
  "param" : "...",
  "value" : "...",
  "valueDisplayName" : "...",
  "id" : "...",
  "driver" : "...",
  "entitlementName" : "...",
  "resourceName" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  } ],
  "paramType" : "..."
}
            },
            "description" : "Internal exception while getting entitlement values of a driver"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementValueNode"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "description" : "...",
  "type" : "...",
  "param" : "...",
  "value" : "...",
  "valueDisplayName" : "...",
  "id" : "...",
  "driver" : "...",
  "entitlementName" : "...",
  "resourceName" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  } ],
  "paramType" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/drivers/entitlementValues/listV2" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "The objective of this API is to provide the available entitlement-values of a particular driver.",
        "description" : "The objective of this API is to provide the available entitlement-values of a particular driver.\nThis API receives the driver node as an input parameter.\nThen extract the driver-dn from driver node.\nThen it checks the entitlement-values into the cache using that driver-dn.\nIf entitlement-values are not available into the cache then it fetch from the application and cache the same for later use.",
        "operationId" : "resource_Catalog_getDriverEntitlementValuesV2_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "pageSize",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "query",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Driver details",
"$ref" : "#/definitions/json_DriverNode"
            },
            "description" : "Driver details"
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "description" : "...",
  "type" : "...",
  "param" : "...",
  "value" : "...",
  "valueDisplayName" : "...",
  "id" : "...",
  "driver" : "...",
  "entitlementName" : "...",
  "resourceName" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  } ],
  "paramType" : "..."
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting entitlement values of a driver",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "description" : "...",
  "type" : "...",
  "param" : "...",
  "value" : "...",
  "valueDisplayName" : "...",
  "id" : "...",
  "driver" : "...",
  "entitlementName" : "...",
  "resourceName" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  } ],
  "paramType" : "..."
}
            },
            "description" : "Internal exception while getting entitlement values of a driver"
          },
          "201" : {
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementValueNode"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "description" : "...",
  "type" : "...",
  "param" : "...",
  "value" : "...",
  "valueDisplayName" : "...",
  "id" : "...",
  "driver" : "...",
  "entitlementName" : "...",
  "resourceName" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  } ],
  "paramType" : "..."
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/drivers/entitlementViewValues/list" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "Given a list ViewID, this method populates and returns a Map object with\nList values and display values populated.",
        "description" : "Given a list ViewID, this method populates and returns a Map object with\nList values and display values populated. The display values are in the\nbest match locale.",
        "operationId" : "resource_Catalog_getEntitlementViewValues_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_EntitlementViewValueNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "489" : {
            "schema" : {
"description" : "Internal exception while getting entitlement view values",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "description" : "...",
  "type" : "...",
  "param" : "...",
  "value" : "...",
  "valueDisplayName" : "...",
  "id" : "...",
  "driver" : "...",
  "entitlementName" : "...",
  "resourceName" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  } ],
  "paramType" : "..."
}
            },
            "description" : "Internal exception while getting entitlement view values"
          },
          "201" : {
            "schema" : {
"description" : "Map of value/display values in best match user locale\nthrows GwtNrfException if problem",
"$ref" : "#/definitions/json_EntitlementValueNode"
            },
            "examples" : {
              "application/json" : {
  "name" : "...",
  "description" : "...",
  "type" : "...",
  "param" : "...",
  "value" : "...",
  "valueDisplayName" : "...",
  "id" : "...",
  "driver" : "...",
  "entitlementName" : "...",
  "resourceName" : "...",
  "resourceDescription" : "...",
  "views" : [ {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  }, {
    "displayName" : "...",
    "viewID" : "...",
    "description" : "...",
    "queryKey" : "...",
    "id" : "...",
    "entitlementName" : "..."
  } ],
  "paramType" : "..."
}
            },
            "description" : "Map of value/display values in best match user locale\nthrows GwtNrfException if problem"
          }
        }
      }
    }
    ,
    "\/resources/resource/assignments" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "API Objective: Get Resource Assignments of a particular resource.",
        "description" : "API Objective: Get Resource Assignments of a particular resource. This\nAPI takes a resource dn as input and checks the list of users associated\nwith that resource.",
        "operationId" : "resource_Catalog_getResourceAssignments_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "No of records in a page"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "requestDate",
            "type" : "string",
            "description" : "Column to sort"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "Order of sorting"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Requested resource",
"$ref" : "#/definitions/json_AssignmentStatusNode"
            },
            "description" : "Requested resource"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/resources/resource/entitlement" : {
      "put" : {
        "tags" : [ "Catalog" ],
        "summary" : "Update Entitlement on a resource with the given details.",
        "description" : "Update Entitlement on a resource with the given details.",
        "operationId" : "resource_Catalog_updateEntitlementOnResource_PUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "- Resource details with entitlement information.",
"$ref" : "#/definitions/json_ResourceNode"
            },
            "description" : "- Resource details with entitlement information."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while modifying resource entitlement",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
            },
            "description" : "Internal exception while modifying resource entitlement"
          },
          "204" : {
            "schema" : {
"description" : "created resource details.",
"type" : "string"
            },
            "examples" : {
            },
            "description" : "created resource details."
          }
        }
      }
    }
    ,
    "\/roles/mappedResources/list" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "To get the list of mapped resources corresponding to search criteria for\nthe given role DN.",
        "description" : "To get the list of mapped resources corresponding to search criteria for\nthe given role DN.",
        "operationId" : "resource_Catalog_searchMappedResources_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "driverID",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index of the page to be listed."
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Number of results needs to be returned."
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "OrderBy sequence for sorting. ASC or DESC"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input payload which holds the role DN, whose mapped resources\nneeds to get.",
"$ref" : "#/definitions/json_RoleNode"
            },
            "description" : "Input payload which holds the role DN, whose mapped resources\nneeds to get."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while searching mapped resources",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while searching mapped resources"
          },
          "201" : {
            "schema" : {
"description" : "List of mapped resources for the given role DN.",
"$ref" : "#/definitions/json_ResourcesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "resources" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "driver" : "...",
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "subContainer" : "...",
    "approvalOverRide" : true,
    "approvalRequired" : true,
    "approvalIsStandard" : true,
    "approvers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "requestDef" : "...",
    "requestDefName" : "...",
    "quorum" : "...",
    "revokeRequired" : true,
    "revokeEqualsGrant" : true,
    "revokeApprovalIsStandard" : true,
    "revokeApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "revokeRequestDef" : "...",
    "revokeRequestDefName" : "...",
    "revokeQuorum" : "...",
    "provisioningRequestDef" : "...",
    "mappingDescription" : "...",
    "status" : "...",
    "entitlements" : [ {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    }, {
      "id" : "...",
      "displayName" : "...",
      "description" : "...",
      "parameter" : "...",
      "parameterName" : "...",
      "parameterValue" : "...",
      "paramDescription" : "...",
      "correlationId" : "...",
      "requestAgent" : "...",
      "action" : 12345,
      "isSingleValued" : true,
      "driverName" : "...",
      "parameters" : [ "...", "..." ],
      "paramLogicSystem" : "...",
      "paramType" : "...",
      "isInvalidValue" : true,
      "entitlementType" : "...",
      "resourceName" : "...",
      "resourceCN" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramTypes" : [ { }, { } ]
    } ],
    "entitlementValues" : [ {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    }, {
      "name" : "...",
      "description" : "...",
      "type" : "...",
      "param" : "...",
      "value" : "...",
      "valueDisplayName" : "...",
      "id" : "...",
      "driver" : "...",
      "entitlementName" : "...",
      "resourceName" : "...",
      "resourceDescription" : "...",
      "views" : [ { }, { } ],
      "paramType" : "..."
    } ],
    "resourceParameters" : [ {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    }, {
      "id" : "...",
      "multiValue" : true,
      "scope" : "...",
      "binding" : "...",
      "codeMapKey" : "...",
      "localizedDisplayValues" : [ { }, { } ],
      "type" : "...",
      "displayValue" : "...",
      "entitlementDn" : "...",
      "staticValue" : "...",
      "value" : "...",
      "instance" : true,
      "hide" : true
    } ],
    "isActive" : true,
    "allowMultiple" : true,
    "isExisted" : true,
    "entityKey" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ],
    "managedBy" : 12345,
    "expiresAfter" : "...",
    "isExpirationRequired" : true,
    "resourceWeightage" : "..."
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "List of mapped resources for the given role DN."
          }
        }
      }
    }
    ,
    "\/roles/parentRoles/list" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "To get the list of parent roles corresponding to search criteria for the\ngiven role DN.",
        "description" : "To get the list of parent roles corresponding to search criteria for the\ngiven role DN.",
        "operationId" : "resource_Catalog_searchParentRoles_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index of the page to be listed"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Number of results needs to be returned."
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "Attribute key against which sorting should be performed"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "OrderBy sequence for sorting. ASC or DESC"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input payload which holds the role DN, whose sub roles needs to\nget.",
"$ref" : "#/definitions/json_RoleNode"
            },
            "description" : "Input payload which holds the role DN, whose sub roles needs to\nget."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while searching sub roles",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while searching sub roles"
          },
          "201" : {
            "schema" : {
"description" : "list of sub roles for the given role DN",
"$ref" : "#/definitions/json_RolesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "list of sub roles for the given role DN"
          }
        }
      }
    }
    ,
    "\/roles/role/assignments" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "description" : "",
        "operationId" : "resource_Catalog_getRoleAssignments_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "assignType",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "assignment types user group container"
          },
          {
            "name" : "column",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "column names"
          },
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "nextIndex"
          },
          {
            "name" : "onlyDirectAssignments",
            "in" : "query",
            "default" : "true",
            "type" : "boolean",
            "description" : "filter used to fetch only direct assignments"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "*",
            "type" : "string",
            "description" : "search string"
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "no of assignments"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "identityDisplayName",
            "type" : "string",
            "description" : "sort the response based on the given coulmn"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "asc or desc order"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "role Dn",
"$ref" : "#/definitions/json_RoleNode"
            },
            "description" : "role Dn"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "list of assignments",
"type" : "file"
            },
            "examples" : {
            },
            "description" : "list of assignments"
          }
        }
      }
    }
    ,
    "\/roles/subRoles/list" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "To get the list of child roles corresponding to search criteria for the\ngiven role DN.",
        "description" : "To get the list of child roles corresponding to search criteria for the\ngiven role DN.",
        "operationId" : "resource_Catalog_searchSubRoles_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "nextIndex",
            "in" : "query",
            "default" : "1",
            "type" : "integer",
            "description" : "Starting index of the page to be listed"
          },
          {
            "name" : "q",
            "in" : "query",
            "default" : "",
            "type" : "string",
            "description" : "The search string on which to base the query."
          },
          {
            "name" : "size",
            "in" : "query",
            "default" : "10",
            "type" : "integer",
            "description" : "Number of results needs to be returned."
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "default" : "name",
            "type" : "string",
            "description" : "Attribute key against which sorting should be performed"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "default" : "asc",
            "type" : "string",
            "description" : "OrderBy sequence for sorting. ASC or DESC"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input payload which holds the role DN, whose sub roles needs to\nget.",
"$ref" : "#/definitions/json_RoleNode"
            },
            "description" : "Input payload which holds the role DN, whose sub roles needs to\nget."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while searching sub roles",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "Internal exception while searching sub roles"
          },
          "201" : {
            "schema" : {
"description" : "list of sub roles for the given role DN",
"$ref" : "#/definitions/json_RolesListResponseNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "roles" : [ {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  }, {
    "id" : "...",
    "name" : "...",
    "description" : "...",
    "requester" : "...",
    "approval" : {
      "startTime" : 12345,
      "endTime" : 12345,
      "processId" : "...",
      "sodJustification" : "...",
      "activities" : [ { }, { } ]
    },
    "categories" : [ {
      "id" : "...",
      "name" : "..."
    }, {
      "id" : "...",
      "name" : "..."
    } ],
    "owners" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "..."
    } ],
    "approvalRequestDef" : "...",
    "approvalRequestDefName" : "...",
    "revokeRequestDef" : "...",
    "approvalApprovers" : [ {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    }, {
      "id" : "...",
      "name" : "...",
      "type" : "...",
      "sequence" : 12345
    } ],
    "approvalQuorum" : "...",
    "level" : 12345,
    "roleLevel" : {
      "name" : "...",
      "level" : 12345,
      "cn" : "...",
      "localizedNames" : [ { }, { } ]
    },
    "subContainer" : "...",
    "approvalIsStandard" : true,
    "approvalRequired" : true,
    "revokeRequired" : true,
    "requestDescription" : "...",
    "localizedNames" : [ {
      "locale" : "...",
      "name" : "..."
    }, {
      "locale" : "...",
      "name" : "..."
    } ],
    "localizedDescriptions" : [ {
      "locale" : "...",
      "desc" : "..."
    }, {
      "locale" : "...",
      "desc" : "..."
    } ],
    "status" : 12345,
    "otherAttributes" : [ {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    }, {
      "key" : "...",
      "displayLabel" : "...",
      "attributeValues" : [ { }, { } ],
      "dataType" : "...",
      "isSearchable" : true,
      "isSortable" : true,
      "isRequired" : true,
      "isEditable" : true,
      "isMultivalued" : true,
      "isHideable" : true,
      "isClickable" : true,
      "formatType" : "...",
      "choiceList" : [ { }, { } ],
      "controlType" : "...",
      "lookupEntity" : "...",
      "lookupAttributes" : [ { }, { } ]
    } ],
    "otherModifiedAttributes" : [ {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    }, {
      "name" : "...",
      "key" : "...",
      "dataType" : "...",
      "isMultivalued" : true,
      "isEditable" : true,
      "values" : [ "...", "..." ]
    } ]
  } ],
  "totalSize" : 12345,
  "total" : 12345
}
            },
            "description" : "list of sub roles for the given role DN"
          }
        }
      }
    }
    ,
    "\/resources/resource/assignments/assign" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "API Objective: Assign resource to users.",
        "description" : "API Objective: Assign resource to users. This API takes one payload which\nmust contains 3 inputs Resource DN, User DN List, Reason.",
        "operationId" : "resource_Catalog_assignResourceAssignments_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Requested resource",
"$ref" : "#/definitions/json_AssignmentStatusNode"
            },
            "description" : "Requested resource"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/resources/resource/assignments/revoke" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "API Objective: Revoke resource to users.",
        "description" : "API Objective: Revoke resource to users. This API takes one payload which\nmust contains 3 inputs Resource DN, User DN List, Reason.",
        "operationId" : "resource_Catalog_revokeResourceAssignments_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Requested resource",
"$ref" : "#/definitions/json_AssignmentStatusNode"
            },
            "description" : "Requested resource"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/resources/resource/entitlements/list" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "To get the entitlements for the given resource DN.",
        "description" : "To get the entitlements for the given resource DN.",
        "operationId" : "resource_Catalog_getEntitlementsForResource_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "Input payload which holds the resource DN, whose entitlements\nneeds to get.",
"$ref" : "#/definitions/json_ResourceNode"
            },
            "description" : "Input payload which holds the resource DN, whose entitlements\nneeds to get."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"description" : "Invalid input",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ]
}
            },
            "description" : "Invalid input"
          },
          "489" : {
            "schema" : {
"description" : "Internal exception while getting resource entitlements",
"$ref" : "#/definitions/json_NcacFault"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ]
}
            },
            "description" : "Internal exception while getting resource entitlements"
          },
          "201" : {
            "schema" : {
"description" : "List of entitlement values.",
"$ref" : "#/definitions/json_EntitlementValueListNode"
            },
            "examples" : {
              "application/json" : {
  "nextIndex" : 12345,
  "arraySize" : 12345,
  "entitlementValues" : [ {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "type" : "...",
    "param" : "...",
    "value" : "...",
    "valueDisplayName" : "...",
    "id" : "...",
    "driver" : "...",
    "entitlementName" : "...",
    "resourceName" : "...",
    "resourceDescription" : "...",
    "views" : [ {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    }, {
      "displayName" : "...",
      "viewID" : "...",
      "description" : "...",
      "queryKey" : "...",
      "id" : "...",
      "entitlementName" : "..."
    } ],
    "paramType" : "..."
  } ]
}
            },
            "description" : "List of entitlement values."
          }
        }
      }
    }
    ,
    "\/roles/role/assignments/assign" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "summary" : "API Objective: Assign resource to users.",
        "description" : "API Objective: Assign resource to users. This API takes PermissionAssignmentListNode as payload.\nRequester information will be derived from the security context of the logged in user.",
        "operationId" : "resource_Catalog_assignResourceAssignments_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_PermissionAssignmentListNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/resources/resource/entitlements/list/v2" : {
      "post" : {
        "tags" : [ "Catalog" ],
        "description" : "",
        "operationId" : "resource_Catalog_getEntitlementsForResourceV2_POST",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "entityType",
            "in" : "query",
            "default" : "resource",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"$ref" : "#/definitions/json_ResourceNode"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "examples" : {
            },
            "description" : ""
          }
        }
      }
    }
  }
}
